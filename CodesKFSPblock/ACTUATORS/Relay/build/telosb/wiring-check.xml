<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:Relay_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fbb44930c40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fbb44b0c020"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fbb44b0c020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fbb4494c590"/></to>
    </wire>
    <wire loc="19:Relay_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbb448ca8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbb435fd020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbb435fd020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbb43114420"/></to>
    </wire>
    <wire loc="20:Relay_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fbb448b8140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbb4446e140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbb4446e140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbb44444880"/></to>
    </wire>
    <wire loc="21:Relay_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb44924500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44770dc0"/></to>
    </wire>
    <wire loc="22:Relay_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7fbb448bd9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb435e7560"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb435e7560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbb4380f2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb448b7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb435fdc30"/></to>
    </wire>
    <wire loc="31:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb448b7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb435f0020"/></to>
    </wire>
    <wire loc="32:Relay_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb448b7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb435eb780"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb435eb780"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb4446b630"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb435f0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb4446b630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb435fdc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb43113060"/></to>
    </wire>
    <wire loc="29:Relay_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7fbb448c6220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb435f6910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb435f6910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb4446c3f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:Relay_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7fbb448c68e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb435eb1b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb435eb1b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb4446c3f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb436e3dd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb4376cb70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb4378b750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb437ac080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb438e1130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb439e1620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb43ad2c60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb442c87e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb42f02140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb43f92020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb443794a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fbb4494cc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fbb44fa73a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fbb44fa73a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fbb44b52140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fbb4493f6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb44b0b480"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb44b0b480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb44b07690"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb4493fdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fbb44b07da0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fbb44b04be0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fbb44b04be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb44ae5b60"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fbb44b034e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb44b06a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fbb44b03bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb44745920"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb44ae5b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb44acc940"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbb44adb2c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbb44acb020"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbb44c2a4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbb44aca360"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fbb44a875a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449c46d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fbb44a75020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449bdb30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fbb44a7e700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449ca160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fbb44a62a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449a3cb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fbb44a85aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449cb480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fbb44a68020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449a3020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fbb44a5fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb4498ccb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fbb44a6f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb4499d220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fbb44a88b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb44a1a9d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fbb44a64a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449b22f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fbb44a6a3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449b3610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fbb44a745a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449b4220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fbb44a7d700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449c27a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fbb44a61a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb4499b2f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fbb44a73be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449ad6d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fbb44a84890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449c3ac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fbb44a98060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a28540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fbb44a68da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb4499c610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fbb44a8e0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449cc020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fbb44a6ea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449956d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fbb44a786d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449d2a90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fbb44a63a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449ab7a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fbb44a80cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449d3de0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fbb44a691f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449acac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fbb44a60a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449937a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fbb44a700c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb449a5b30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fbb44a67b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb44994ac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fbb44a65a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb449bbcb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fbb44a66a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb4498c020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fbb44a6b570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbb449bb020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fbb44a6c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbb4498eb30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fbb44a26450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a27d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbb44a26aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fbb44986a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbb44a24120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fbb44983260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449d1930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a28540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449cf020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a27d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449c9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a28540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449c77a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a27d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449c1610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a28540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449c0c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a27d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fbb44a1e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbb44a1e940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fbb449839f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbb44a1d020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fbb44982240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449bab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449b72f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449b1160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449b07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449aa610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449a9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb449a2b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449a02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb4499a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449997a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb44992610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb44991c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb4498bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbb449892f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb44b50040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fbb44b4c490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fbb44f3e3b0"/></to>
    </wire>
    <wire loc="55:RelayC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7fbb448a2080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:RelayC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7fbb4489f2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:RelayC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7fbb448a4100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:RelayC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7fbb448a1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:RelayC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7fbb4489e300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:RelayC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7fbb448a0310"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb44745920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb447707c0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fbb447653a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fbb44748060"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fbb44748060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb4452d020"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fbb4476b660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fbb44747380"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fbb44747380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb44519b90"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fbb44764980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fbb447466a0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fbb447466a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb44514710"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb4451c2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fbb446ed9a0"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fbb446ed9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445cad10"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb44518de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fbb446eb9a0"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fbb446eb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445c5740"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb44513930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fbb446e99a0"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fbb446e99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445bf100"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fbb4472f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44663740"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fbb4471a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44633100"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fbb446d1ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44624100"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fbb446accb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44599740"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fbb446cecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44620d10"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fbb44716810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44629740"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fbb447029a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445f9460"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fbb446dd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445a3100"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fbb446c8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44616100"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fbb446b8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445b6740"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fbb446a4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44594100"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fbb44728810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44654740"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fbb446c6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44612d10"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fbb44724810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4464bd10"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fbb44710810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4461b740"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fbb446fb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445eb100"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fbb446e79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445bbd10"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fbb446d79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44594100"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fbb44733810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4466c100"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fbb4471e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4463dd80"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fbb4470a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4460c740"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fbb446d3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44624100"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fbb446b2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445a8740"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fbb446a6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44594100"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fbb446becc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445ce100"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fbb44706810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44603e60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fbb446f19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445d3740"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fbb446e19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445add10"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fbb446b0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445a3100"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fbb446c4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445dc100"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fbb4472c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4465e100"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fbb44718810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4462ed10"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fbb446e59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445b6740"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fbb44714810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44624100"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fbb447009a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445f5e00"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fbb446db9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4459ed10"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fbb446c0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445d3740"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fbb44735900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4469cd10"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fbb44722810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44646740"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fbb4470e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44616100"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fbb446f99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445e6d10"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fbb446bccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4460c740"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fbb446b6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445b1100"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fbb446aacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44594100"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fbb446f59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445dc100"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fbb446bacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44607100"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fbb44731810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44668d10"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fbb4471c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44638740"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fbb44708810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44607100"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fbb446c2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445d8d10"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fbb446aecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4459ed10"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fbb447049a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445fe9f0"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fbb446ef9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445ce100"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fbb446df9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445a8740"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fbb4472a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4465ad10"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fbb446e39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445b1100"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fbb44726810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4464f100"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fbb44712810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44620d10"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fbb446fd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445f0740"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fbb446d99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44599740"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fbb4473f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44671740"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fbb44720810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44641100"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fbb4470c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44612d10"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fbb446f79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445e1740"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fbb446caca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4461b740"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fbb446b4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445add10"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fbb446cccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb4461b740"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fbb446f39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445d8d10"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fbb446a8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44599740"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fbb446a2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb445bbd10"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fbb446d59f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbb44629740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbb43114420"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbb43107390"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb43113060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb4446b630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb435fb8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb43113c70"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb43113c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fbb435f9020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fbb431112b0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fbb431112b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44468990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb4446b630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb4443f760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb44440020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44468990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb4443d810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb43106060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb444c4940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb43106c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb444c4940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb444784b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbb44477400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbb4446d1d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbb4446d1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbb44443980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb44475060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb44474720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb4446b630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fbb44473480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fbb44473c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbb44444880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbb4441db70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbb44443980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbb436a5020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fbb4446b020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fbb44441900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fbb44441900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fbb436a3df0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbb4443f760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbb436a1a80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb44463cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4395d550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4395d550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4394ea80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb44452b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb44433bb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb44433bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb4440f700"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb4446c3f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb44442cb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb44442cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb436a3210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb4443d810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44410670"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb44440020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb436a2470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb4445ddc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb43959660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb43959660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb4394baf0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbb4441db70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbb436d6b80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb4442bd40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb4369f8b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fbb4441ed20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fbb436a0ce0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb44436970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb44411670"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb44411670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb4440f700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb436d6080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44410670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fbb4395f6e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fbb44429020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fbb4440e2e0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fbb4440e2e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fbb436c2020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb44432a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4440f080"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4440f080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4395ea70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fbb436960f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44419210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb4369e860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fbb44412170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fbb44412170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fbb4373fc90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbb4369d690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb44411020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb44411020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb4373ea50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb436984d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb43b88b30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb4369dce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43954d20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4369cb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4394f640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fbb4369b610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fbb44383b80"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fbb44383b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fbb44378970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fbb436971f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb44409990"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb44409990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb44403020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb43696d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbb436d6b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fbb436d3d90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4395ea70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4394e020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fbb436c2020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fbb436bf410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fbb4373fc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fbb43734a20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb436d6080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb436cf2d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fbb44414d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb4373f5e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb4373f5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fbb43734370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fbb4395f6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fbb43951c50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb44419210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43741be0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43741be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb437367b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fbb44414020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb437408e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb437408e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fbb437354d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fbb44413420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fbb4373d170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fbb4373d170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fbb43732020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb4373ea50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb43733840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fbb436d3d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbb4440d9f0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbb4440d9f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbb44405690"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb4373c6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb43790220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb43790220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb4378ea20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb4378f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb436c5350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb436c5350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbb436c2d70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb436c2d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb436dace0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb436dace0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbb436d4860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb436d4860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb4440a600"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbb4440a600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb444042e0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbb4373c020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb436d7980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb436d7980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fbb436d3690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbb436d3690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb43774aa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb43774aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb4376fe30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbb43771950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb44409300"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb44409300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb439e57c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbb439e57c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbb439df020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb44403e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44393720"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb44393720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44379b10"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fbb443f93f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fbb4438ea60"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fbb4438ea60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fbb44376740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fbb443ff020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbb43ae06c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fbb443ff020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbb439e95c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fbb439e95c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbb439e1ca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fbb43ae06c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbb43ad0320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbb443f0d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbb43add020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbb43add020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbb43ad0bc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fbb443f8ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb43addcb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb43addcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb43acf970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb443eb020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb443e4660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fbb443ef020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fbb437b1a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fbb437b1a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fbb437aba20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fbb443dfe40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb437b3aa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbb437b3aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb43f97280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb443ef7f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fbb443da9e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fbb443dca10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fbb443dda00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fbb44381020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fbb44375b40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fbb44369d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442c5220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442c5220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442bfd20"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbb44366060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fbb441c1e60"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbb441c1e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441b3b60"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fbb44365380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fbb441bd6a0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fbb441bd6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441a5d70"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fbb443646a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fbb441bbce0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fbb441bbce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb4419a710"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fbb443620e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fbb44184d60"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fbb44184d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbb44065a30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbb4434c1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43c14e20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43c14e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbb4434b2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fbb43c117b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbb43c117b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbb4434b9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43c0fae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43c0fae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbb4434da40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43c12ad0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43c12ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb4434d120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43c0e160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43c0e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbb44351b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43c04870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43c04870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbb443593d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43c02880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43c02880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbb44359c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43c000a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43c000a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb443545f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43c0be50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43c0be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb44350020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43c09670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43c09670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbb4435d520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fbb43bf3500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbb43bf3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbb44355a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43bf5ce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43bf5ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb443508e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43c05e50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43c05e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbb4434f1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fbb43c09e50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbb43c09e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb4434fa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43c08e50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43c08e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fbb4434ad90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43be1a80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43be1a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fbb4434a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43bb59e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43bb59e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb4435a810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb43b88b30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb44371020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb43b87d30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb43b87d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb43b6c310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fbb4433e820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fbb4433f940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb442c87e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb442bf490"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb442bf490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb4308c060"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442bfd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb4308c8b0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb4308c060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb43084020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbb4308c8b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb4307fa90"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb43084020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb43069a30"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fbb43077210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb43084870"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbb43084870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb43068340"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb4307be10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb4424c020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb4424c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb442100f0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb430644c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb4306e570"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb4306e570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb43063a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4306dc10"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4306dc10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb43062da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4306b020"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4306b020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fbb44a75020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fbb44a6b570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fbb44a73be0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fbb44a691f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fbb44a700c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fbb44a68020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fbb44a6f5a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fbb44a68da0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fbb44a6ea50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fbb44a67b80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fbb44a6c020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fbb44a66a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fbb4420d540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbb44242020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbb44242020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb442310a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb4422f2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fbb441bf090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441ae710"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fbb441be390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441a91d0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fbb441c4c70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441b8020"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fbb441bc9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb4419fb60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441b62f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fbb4472f810"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441b2de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fbb447029a0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441ad930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fbb44731810"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441a8480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fbb44735900"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441a3020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fbb446f99a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb4419ede0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fbb447049a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb44199930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fbb446fb9a0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fbb44184150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbb4417ba20"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbb44182a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbb44056a70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb441685d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fbb44a745a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fbb441678f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fbb44a64a20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441667a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fbb447049a0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fbb44064610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fbb441578a0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fbb441578a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fbb441438a0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fbb44055610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fbb441598f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fbb441598f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fbb44149810"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fbb4414ca30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fbb44138a30"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fbb441538a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fbb441408a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fbb441518a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fbb4413e8a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fbb4415d8a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fbb441458a0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fbb4414e8a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fbb4413b8a0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fbb441568a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fbb441428a0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fbb4414ba30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fbb44137a30"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fbb441508a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fbb4413d8a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fbb441588a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fbb441448a0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fbb4414da30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fbb44139a30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fbb441558a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fbb441418a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fbb441528a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fbb4413f8a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fbb4415e8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fbb441468a0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fbb4414f8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fbb4413c8a0"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbb43c11160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43c03880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbb43bfa0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbb43c020a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbb43bef500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb43bf1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43c0f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbb43bf7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43bf2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43bfd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbb43bfe0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43c13a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb4400f920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43c0ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbb43c0d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb43bf6c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43c0dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb43bf2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbb43bf70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43c08670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43bf80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbb43bfa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43bf8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43bf0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb43bf1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbb43bfe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbb43bf90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbb43bf3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43c00880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbb43befce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb43c12480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbb43c0b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43c05670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43bfc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43bfc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43c030a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43c0c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbb43c0b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43c0e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb43bf5500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbb43bf0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43bfd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbb43bf9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbb43c11e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43bff0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbb43c0c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbb43bff880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbb43bf60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43bee9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb4400bbb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb44008020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb44008db0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb4400c810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44007ba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fbb44003020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb43f9b770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbb43f9b770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb43f97280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbb44006400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43f7ac40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43f7ac40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb42f88c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbb44004080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbb43f798f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbb43f798f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbb42f850c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43ffa680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43c3c020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43c3c020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbb42f842b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb44003df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fbb43ff6120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbb43f97280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb43f92b70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbb42f842b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43f10510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbb42f850c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbb43f14dd0"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb42f88c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43f1aa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42f868f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42f7c2c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42f7c2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb43d9d8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbb43f14dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbb43e97440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb42f856d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb43f13480"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb43f13480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb43e97a50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb43f0e600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb42f84a50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb42f6c760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43f145e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fbb43f0f370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb42f7d640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb42f7d640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43d9e5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbb43f096a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbb42f74c10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbb42f74c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbb43da2a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43f145e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43e99c40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43f10510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43e96700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43f1aa20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43e9ae80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb43e95e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb43f0e600"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fbb43e95060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fbb43f0f370"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbb43e90de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbb43f096a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fbb43e94490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbb43e88860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbb43e88860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fbb43e7b020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb43e8f5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fbb43e8ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbb43e7e8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43e76750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbb43e813b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbb43e77dc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fbb43e48700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fbb446d3cc0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fbb43e46670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fbb446cecc0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fbb43e44670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fbb446cccc0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fbb43e42670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fbb446c6cc0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fbb43e40670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fbb446c8cc0"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fbb43e4d5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fbb43cf6430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbb42f73440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43d9f9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbb42f73a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbb43d02880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbb43d02880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fbb43cf6430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbb42f7b2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbb43e88860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb42f7ca60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d9b130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d9b130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d0a060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43d9a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb42f6c760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb43d9d8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb43d0cbf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb43d0cbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42efe850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fbb43da2a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbb43d985c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43d9e5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43d0de60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43d0de60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb42eff970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43d9f9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43d87020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d0a060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb42efdc30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43d0a930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43d9a020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d854b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d0a060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fbb43d87690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbb43e813b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fbb43d87e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbb43e7e8a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbb43d0b400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbb42efd020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb42efc590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43d0a930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbb42efcd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fbb42f02750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fbb42ef9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fbb43cef250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fbb43e7b020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fbb43cebd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fbb446d3cc0"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fbb43ce9cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fbb446cccc0"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43bd4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbb43bdfda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43bd8b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43bd2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbb43bcbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbb43bd2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbb43bbe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb43bc12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43bdd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbb43bc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43bc22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbb43bd7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43bd6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43bcc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbb43bcfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43bd1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43be0760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43bdcaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbb43bda120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb43bc5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43bda870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb43bc2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43bdddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbb43bc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43bd6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43bd7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43bdf750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43bc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbb43bca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43bc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43bbfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb43bc1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbb43bcd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbb43bcae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbb43bc3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43bd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbb43bbead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb43bdf100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbb43bd8370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43bd4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43bcce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43bd1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43bcb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43bd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbb43bde450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43bd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43bd9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbb43bd9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbb43bc32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43bc4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43bdc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb43bc42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbb43bbf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43bcde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbb43bc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbb43bdeaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43bdd770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43bd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbb43bd9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbb43bcf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbb43bc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43bbd7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43ba8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbb43bb3da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43babb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43ba6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbb43b9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbb43ba6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbb43b922f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb43b942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43bb0120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbb43b9a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43b952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbb43baac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43ba9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43ba0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbb43ba2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43ba4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43bb4760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43bafaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbb43bae120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb43b99a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43bae870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb43b95ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43bb0dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbb43b9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43ba9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43baa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43bb3750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43b9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbb43b9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43b9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43b93ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb43b94ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbb43ba1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbb43b9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbb43b96ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43ba3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbb43b92ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb43bb3100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbb43bab370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43ba8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43ba0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43ba4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43b9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43ba7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbb43bb1450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43ba7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43bad020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbb43badcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbb43b962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43b98ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43baf450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb43b982f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbb43b932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43ba1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbb43b9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbb43bb1aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43bb0770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43ba3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbb43bad670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbb43ba2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbb43b9ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43b917a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b69880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b5e020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b5e020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b59140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fbb43b54bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fbb43b5dc50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fbb43b5dc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fbb43b40150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fbb43b58530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbb43af6a20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fbb43b44540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fbb43af8590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fbb43af8590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbb43af49e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b3b950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b42ca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b42ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b18a90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fbb43b409f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fbb43b44540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb43b08020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fbb43b02530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fbb43b02530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb43afee50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb43afb020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fbb44a98060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb43af3c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fbb4471e810"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbb43ad9990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbb43ace900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fbb43adb150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fbb43acd0f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fbb43acdae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442c5220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fbb43abf500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fbb441c4c70"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbb43ab9820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fbb441c1e60"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fbb43ab7b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fbb441bc9b0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fbb43ac2880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fbb44184150"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbb43ab5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb43a1ac30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb43a1ac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43ab5d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43a198f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43a198f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb43ab26d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fbb43a182f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb43a182f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbb43ab2de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fbb43a17cc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbb43a17cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43ab1530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43a15370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43a15370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43ab1c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43a14d00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43a14d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43ab3e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43a0ec60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43a0ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43ab4780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fbb439f67a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbb439f67a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43ab3550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb439fa2f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb439fa2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43ab03e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43a0f480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43a0f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43aaf5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43a0ce50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43a0ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43aae020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43a0b670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43a0b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbb43ab0e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fbb43a127b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbb43a127b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43aad9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fbb439f8ad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbb439f8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb43aae890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fbb439f92f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb439f92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb43aad130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fbb439f9ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb439f9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb43aa7d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb439e9df0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb439e9df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb439e0550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43ac9d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb43ac8bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbb43ac7950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4395d550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb43ababe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb43955480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb43955480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb439478b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb43aaa6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43a0dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbb43a17020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43a10c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbb43a04e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbb43a0be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbb439f72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbb439ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbb43a0fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43a05670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbb43a07e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43a09670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbb43a13370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb439fea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43a13ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb439faad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43a14060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbb43a00e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43a0e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43a18940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43a01e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbb43a02670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43a00670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbb43a06670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbb43a02e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbb439fbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43a08670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbb439f7ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbb43a10490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43a0d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43a05e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43a09e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43a04670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43a0c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbb43a17670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43a12160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbb43a12e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbb439fb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbb439fdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43a146b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb439fd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbb439f82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43a06e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbb43a01670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43a159c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43a08e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbb43a07670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbb439ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fbb439e4020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fbb439df7c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbb439ca150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbb439de020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fbb441c1e60"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fbb439dd380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fbb441bf090"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fbb439dc6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fbb441be390"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbb439dba50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbb44182a20"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbb439da6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb437ffd00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbb437ffd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbb439d9530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fbb437dcad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbb437dcad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb439d8ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb437fa6b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb437fa6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbb439d83a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fbb437f8370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbb437f8370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb439d7330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb439d61e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbb439d3d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4395d550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fbb439d6b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fbb44383b80"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb439ce3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb437f1e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb437f1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb439cecb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb437f0670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb437f0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbb439d0b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fbb437f7160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbb437f7160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbb439cc6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fbb437dc2f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbb437dc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb439cd590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fbb437df2f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbb437df2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb439cde00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fbb437dfad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbb437dfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb439cb020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb437e0ad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb437e0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb439cb8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fbb437fd300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbb437fd300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fbb439be9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb438e77c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb4424c020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fbb43941820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbb438f04e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fbb43943b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbb438db610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fbb438db610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbb438222b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fbb438e0020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb43830150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb438e1130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb438ac020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb438ac020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb42dd29d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fbb4382a640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbb4387f2f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbb4387a850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb438ac870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbb438ac870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb42dcb5f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb43821690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb438cbb70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb438cbb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb438c3610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb42dd29d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb42db5360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fbb42dc5d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb42dd1260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbb42dd1260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbb42db5bf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbb42dc79b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbb438cbb70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb42db2dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb42dbb020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb42dbb020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb42daf440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb42db9760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb42db9760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb42dae760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb42db8a80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb42db8a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fbb438c0b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbb44242020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fbb438779c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fbb43825a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbb438188c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbb4380f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fbb4380f2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbb438e0020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb437f2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbb437fc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb437f6c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbb437e9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbb437f0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbb437fb370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbb437e4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb437e02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbb437f5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbb437f4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbb437ea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbb437ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbb437ef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb437fe970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb437fad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb437e3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbb437f8ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb437fa060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbb437e5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb437f4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb437f5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbb437fd950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb437e7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbb437e8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb437e5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbb437ddad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbb437eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbb437e8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbb437e1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbb437ee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbb437f6490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb437f2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbb437eae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbb437efe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbb437e9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbb437f1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbb437fc670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbb437f7e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbb437e12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbb437e2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb437e22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbb437dd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb437ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbb437e7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbb437fccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbb437fb9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbb437eee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbb437f77b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbb437ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbb437e4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbb437db7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fbb437af920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fbb437ac940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbb437b59a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbb437ac080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb4378be60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbb4378f020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbb4378aae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb4378c690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbb4378c690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb43f97280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fbb437898f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fbb437b1a20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb43788170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbb43771200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbb4376c570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbb4376b3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fbb43771950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4376ba70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbb43732d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbb4373c6b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbb43731b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fbb4373c020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb437302f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4372f170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbb4372fb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fbb436e2410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fbb43703db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fbb436d5800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb436d1580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbb436d1580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbb43f97280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb436bc1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44410670"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb435f0c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbb435ea400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RelayC" loc="4:RelayC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Relay_AppC.AMSenderC" loc="47(Relay_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.AMSenderC.SenderC" loc="47(Relay_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(Relay_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Relay_AppC.R_A" loc="43(Relay_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.R_B" loc="43(Relay_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Relay_AppC.Timer1" loc="44(Relay_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fbb44a5a890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fbb44a5ac30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fbb44a59020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fbb44a593a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fbb44a59720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fbb44a59a90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fbb44a59e20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fbb44a57200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fbb44a575d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fbb44a1ce70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fbb44a19270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fbb4469b190" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fbb4469b540" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fbb4469b8f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fbb4469bca0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fbb4469a060" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fbb44506da0" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fbb444f2e20" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fbb444e3ac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fbb444c0c80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fbb442819d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fbb442819d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fbb4423d120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fbb4423d120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fbb4422ca50" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fbb4422ca50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fbb44229290" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fbb44229290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fbb44229680" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fbb44229680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fbb44229e60" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fbb44229e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fbb44227260" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fbb44227a60" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fbb44227a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fbb4424da20" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fbb4424da20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fbb44206290" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fbb44206290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fbb44206680" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fbb44206680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fbb44206e60" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fbb44206e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fbb44204260" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fbb43d80020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fbb43d730d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fbb43d58800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb43b16020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb43b16020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbb43b167b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb43b167b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb438f2a60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb438f2a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb438a7cc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb438a7cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb43871230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb43871230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fbb43871560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fbb435f5390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fbb44b094d0" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb44b094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b09850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fbb44b0c020" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbb44b0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbb44b0c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb44b0b480" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb44b0b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b0b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fbb44b034e0" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fbb44b034e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b03860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb44b07690" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb44b07690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b07a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fbb44b07da0" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fbb44b07da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b03180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fbb44b03bc0" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fbb44b03bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb44b06a20" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb44b06a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b06da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fbb44b04be0" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fbb44b04be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44ae5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fbb44adb2c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbb44adb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fbb44ae11b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fbb44adb7d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fbb44adb960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fbb44adbaf0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fbb44adb640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fbb44adbc80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fbb44adbe10"/>
        <function-ref name="initClocks" scoped="" ref="0x7fbb44ae1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb44ae5b60" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb44ae5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44ae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fbb44acb020" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbb44acb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fbb44aca020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fbb44acb530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fbb44acb6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fbb44acb850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fbb44acb3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fbb44acb9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fbb44acbb70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fbb44acbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fbb44aca360" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbb44aca360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fbb44aca6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb44acc940" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb44acc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44acccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fbb44a875a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fbb44a875a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a87920"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a87ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a87c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a87dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a86020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a861b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a86340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a864d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fbb44a75020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fbb44a75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a753a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a75530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a756c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a75850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a759e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a75b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a75d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a74020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fbb44a7e700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fbb44a7e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a7ea80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a7ec10"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a7eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a7d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a7d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fbb44a62a20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fbb44a62a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a62da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a61020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a611b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a61340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a614d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fbb44a85aa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fbb44a85aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a85e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a84020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a841b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a84340"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fbb44a68020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fbb44a68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a683a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a68530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a686c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a68850"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a689e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fbb44a5fa20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fbb44a5fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a5fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a5e020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a5e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a5e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a5e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a5e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fbb44a6f5a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fbb44a6f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a6f920"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a6fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a6fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a6fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a6e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a6e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a6e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a6e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fbb44a88b10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fbb44a88b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a8f020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a8f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a8f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a8f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a8f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a8f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a8f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a8fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a8fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fbb44a64a20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fbb44a64a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a64da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a63020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a631b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a63340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a634d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a63660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fbb44a6a3e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fbb44a6a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a6a760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a6a8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a6aa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a6ac10"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a6ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fbb44a745a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fbb44a745a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a74a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a74bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a74d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a73020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a731b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a73340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a734d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a73660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fbb44a7d700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fbb44a7d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a7da80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a7dc10"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a7dda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a77020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a771b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fbb44a61a20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fbb44a61a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a61da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a60020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a601b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a60340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a604d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a60660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fbb44a73be0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fbb44a73be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a71020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a711b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a71340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a714d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a71660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a717f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a71980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a71b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a71ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fbb44a84890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fbb44a84890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a84c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a84da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a7f020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a7f1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a7f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fbb44a98060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fbb44a98060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44a983e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb44a98570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a98700"/>
        <function-ref name="get" scoped="" ref="0x7fbb44a98890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a98a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a98bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb44a98d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a97020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44a971b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb44a97340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb44a974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fbb44a68da0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fbb44a68da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a67180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a67310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a674a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a67630"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a677c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fbb44a8e0c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fbb44a8e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a8e440"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a8e5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a8e760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a8e8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a8ea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a8ec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a8eda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a87020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fbb44a6ea50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fbb44a6ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a6edd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a6d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a6d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a6d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a6d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a6d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a6d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a6d980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a6db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fbb44a786d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fbb44a786d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a78a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a78be0"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a78d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a7e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a7e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fbb44a63a20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fbb44a63a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a63da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a62020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a621b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a62340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a624d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fbb44a80cf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fbb44a80cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a850a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a85230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a853c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a85550"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a856e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fbb44a691f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fbb44a691f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a69570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a69700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a69890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a69a20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a69bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fbb44a60a20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fbb44a60a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a60da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a5f020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a5f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a5f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a5f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fbb44a700c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fbb44a700c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a70440"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a705d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a70760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a708f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a70a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a70c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a70da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a6f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fbb44a776c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fbb44a776c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44a77a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb44a77bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a77d60"/>
        <function-ref name="get" scoped="" ref="0x7fbb44a76020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a761b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a76340"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb44a764d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a76660"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44a767f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb44a76980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb44a76b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fbb44a67b80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fbb44a67b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a66020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a661b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a66340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a664d0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fbb44a65a20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fbb44a65a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a65da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44a64020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44a641b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a64340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a644d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44a64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fbb44a66a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fbb44a66a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a65020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a651b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a65340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a654d0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a65660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fbb44a6b570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fbb44a6b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44a6b8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44a6ba80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb44a6bc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44a6bda0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44a6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fbb44a6c020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fbb44a6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a6c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44a6c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a6c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44a6c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44a6c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a6cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44a6cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44a6b020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44a6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fbb44a26aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbb44a26aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a26e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fbb44a26450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fbb44a26450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a267d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fbb44a24120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbb44a24120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a244a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fbb44a27d80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb44a27d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a26180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbb44a28540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb44a28540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44a288c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb44a28a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a28be0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44a28d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a27020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a271b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb44a27340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a274d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44a27660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb44a277f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb44a27980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fbb44a1e940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbb44a1e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a1ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fbb44a1e2f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fbb44a1e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a1e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fbb44a1d020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbb44a1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fbb44a1fbf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb44a1fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44a1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbb44a203e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb44a203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44a20760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb44a208f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44a20a80"/>
        <function-ref name="get" scoped="" ref="0x7fbb44a20c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44a20da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44a1f020"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb44a1f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44a1f340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44a1f4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb44a1f660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb44a1f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449d2a90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449d2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449d2e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449d1020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449d11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449d1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449d14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb44a1a9d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb44a1a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44a1ad50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449d3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449d31b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449d3340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449d34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449d3660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449d37f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449d3980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449cf020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449d3de0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449d3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449d2180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449d2310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449d24a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449d2630"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449d27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449d1930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449d1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449d1cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449d1e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449d0020"/>
        <function-ref name="get" scoped="" ref="0x7fbb449d01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449d0340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449d04d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449d0660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449d07f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449d0980"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449d0b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449ca160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449ca160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449ca4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449ca670"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449ca800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449ca990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449cab20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449cacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449cc020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb449cc3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449cc530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449cc6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449cc850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449cc9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449ccb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449ccd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449cb020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449c77a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449c77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449c7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449cb480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449cb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449cb800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449cb990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449cbb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449cbcb0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449cbe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449c9020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449c93a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449c9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449c96c0"/>
        <function-ref name="get" scoped="" ref="0x7fbb449c9850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449c99e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449c9b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449c9d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449c7020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449c71b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449c7340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449c27a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449c27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449c2b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449c2cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449c2e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449c1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449c11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449c46d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449c46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb449c4a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449c4be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449c4d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449c3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449c31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449c3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449c34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449c3660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449c0c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449c0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449c3ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449c3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449c3e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449c2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449c21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449c2340"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449c1610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449c1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449c1990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449c1b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449c1cb0"/>
        <function-ref name="get" scoped="" ref="0x7fbb449c1e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449c0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449c01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449c0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449c04d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449c0660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449c07f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449c0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449bbcb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449ba0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449ba230"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449ba3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449ba550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449ba6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449ba870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449bdb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449bdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb449bc020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449bc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449bc340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449bc4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449bc660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449bc7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449bc980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449bcb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449bcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449b72f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449b7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449bb020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449bb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449bb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449bb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449bb850"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449bb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449bab40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449b8020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449b81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449b8340"/>
        <function-ref name="get" scoped="" ref="0x7fbb449b84d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449b8660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449b87f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449b8980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449b8b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449b8ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449b8e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449b22f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449b2670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449b2800"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449b2990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449b2b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449b2cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449b2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449b4220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449b4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb449b45a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449b4730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449b48c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449b4a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449b4be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449b4d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449b3020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449b31b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449b07a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449b07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449b0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449b3610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449b3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449b3990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449b3b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449b3cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449b3e40"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449b1160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449b1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449b14e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449b1670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449b1800"/>
        <function-ref name="get" scoped="" ref="0x7fbb449b1990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449b1b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449b1cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449b1e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449b0020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449b01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449b0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449ab7a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449ab7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449abb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449abcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449abe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449aa020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449aa1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449ad6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449ad6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb449ada50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449adbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449add70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449ac020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449ac1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449ac340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449ac4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449ac660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449a9c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449a9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449acac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449acac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449ace40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449ab020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449ab1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449ab340"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449aa610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449aa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449aa990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449aab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449aacb0"/>
        <function-ref name="get" scoped="" ref="0x7fbb449aae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449a9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449a91b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449a9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449a94d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449a9660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449a97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449a9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449a3cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449a3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449a20a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb449a2230"/>
        <function-ref name="captured" scoped="" ref="0x7fbb449a23c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449a2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449a26e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb449a2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449a5b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449a5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb449a4020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb449a41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449a4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb449a44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449a4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449a47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449a4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb449a4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449a4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449a02f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449a0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb449a3020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb449a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb449a33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb449a3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449a36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb449a3850"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449a39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb449a2b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb449a2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb449a1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb449a11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb449a1340"/>
        <function-ref name="get" scoped="" ref="0x7fbb449a14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb449a1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449a17f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb449a1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449a1b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449a1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449a1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb4499b2f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb4499b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb4499b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb4499b800"/>
        <function-ref name="captured" scoped="" ref="0x7fbb4499b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4499bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4499bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb4499be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb4499d220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb4499d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb4499d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb4499d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4499d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb4499da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb4499dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4499dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb4499c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb4499c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb4499c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449997a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44999b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb4499c610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb4499c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb4499c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb4499cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb4499ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb4499ce40"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4499b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb4499a160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb4499a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4499a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb4499a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4499a800"/>
        <function-ref name="get" scoped="" ref="0x7fbb4499a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4499ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4499acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb4499ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44999020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb449991b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb44999340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb449994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb449937a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb449937a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44993b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44993cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44993e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44992020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449921b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb44992340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb449956d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb449956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44995a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44995be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44995d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44994020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb449941b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44994340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb449944d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb44994660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb449947f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb44991c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb44991c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44990020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb44994ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb44994ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44994e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb44993020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb449931b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb44993340"/>
        <function-ref name="fired" scoped="" ref="0x7fbb449934d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb44992610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb44992610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44992990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb44992b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44992cb0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44992e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb44991020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb449911b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb44991340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb449914d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44991660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb449917f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb44991980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb4498ccb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb4498ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb4498b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb4498b230"/>
        <function-ref name="captured" scoped="" ref="0x7fbb4498b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4498b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4498b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb4498b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbb4498eb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbb4498eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb4498d020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb4498d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4498d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb4498d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb4498d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4498d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb4498d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb4498db10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb4498dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbb449892f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbb449892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44989670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbb4498c020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbb4498c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb4498c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb4498c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb4498c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb4498c850"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4498c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbb4498bb40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb4498bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4498a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb4498a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4498a340"/>
        <function-ref name="get" scoped="" ref="0x7fbb4498a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4498a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4498a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb4498a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4498ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4498aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb4498ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb44989020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fbb44982240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fbb44982240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449825c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fbb44986a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fbb44986a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44986e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fbb44983260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fbb44983260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb449835e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fbb449839f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fbb449839f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44983d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fbb44c2a4c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbb44c2a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fbb44c2a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fbb44f3e3b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fbb44f3e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fbb44f3e730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fbb44f3e8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fbb44f3ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fbb44d66bc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fbb44d66bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fbb44ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fbb44ae3b40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbb44ae3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fbb4494bb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fbb4494b1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fbb4494b340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fbb4494b4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fbb4494b020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fbb4494b660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fbb4494b7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fbb4494b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fbb4493fdc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fbb4493fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb4493e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fbb4494c590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbb4494c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbb4494c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fbb4493f6c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fbb4493f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb4493fa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fbb4494cc00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fbb4494cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb4493f020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fbb4493f1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fbb4493f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fbb4542f410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fbb4542f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb4542f790"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb4542f920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fbb44fa73a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fbb44fa73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44fa7720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fbb44fa78b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fbb44fa7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fbb44b50040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fbb44b50040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb44b503c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb44b50550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fbb44b4c490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fbb44b4c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fbb44b4c810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fbb44b4c9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fbb44b4cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fbb44b52140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fbb44b52140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44b524c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fbb44b52650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fbb44b527e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7fbb448c6220" loc="11:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7fbb448c6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb448c65a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fbb448b8140" loc="17:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fbb448b8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb448b84c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb448b8650"/>
        <function-ref name="start" scoped="" ref="0x7fbb448b87e0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb448b8970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fbb44930c40" loc="8:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbb44930c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbb4492f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbb448b7020" loc="18:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb448b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb448b73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb448b7530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb448b76c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb448b7850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb448b79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fbb448ca8f0" loc="10:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb448ca8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb448cac70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb448cae00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44923020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb449231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb44923340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7fbb448a2080" loc="55:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7fbb448a2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb448a2400"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb448a2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7fbb4489f2a0" loc="58:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7fbb4489f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb4489f720"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb4489f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7fbb448bd9e0" loc="13:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7fbb448bd9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb448ba020"/>
        <function-ref name="fired" scoped="" ref="0x7fbb448c8510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb448bb300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb448c8e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb448ba920"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb448ba4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb448c8990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb448d7670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb448bb910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb448d7b40"/>
        <function-ref name="stop" scoped="" ref="0x7fbb448c8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7fbb448c68e0" loc="12:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7fbb448c68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb448c6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7fbb448a4100" loc="54:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7fbb448a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb448a4480"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb448a4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb44924500" loc="7:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb44924500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb44924880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb44924a10"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb44924ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb44924d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb44930020"/>
        <function-ref name="get" scoped="" ref="0x7fbb449301b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb44930340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb44930980"/>
        <function-ref name="set" scoped="" ref="0x7fbb449304d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb44930660"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb449307f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7fbb448a1020" loc="56:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7fbb448a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb448a13a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb448a1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7fbb4489e300" loc="59:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7fbb4489e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb4489e680"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb4489e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7fbb448a0310" loc="57:RelayC.nc">
      <component-ref qname="RelayC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7fbb448a0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb448a0690"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb448a0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fbb44774380" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb44774380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb44774700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb44774890"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb44774a20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb44774bb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb44774d40"/>
        <function-ref name="get" scoped="" ref="0x7fbb44771020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb447711b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb447717f0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44771340"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb447714d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb44771660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fbb447653a0" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fbb447653a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44765720"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb447658b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44765a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44765bd0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44765d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4476b020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4476b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4476b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb447707c0" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb447707c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44770b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fbb4476b660" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fbb4476b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4476b9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4476bb70"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4476bd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44764020"/>
        <function-ref name="get" scoped="" ref="0x7fbb447641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44764340"/>
        <function-ref name="set" scoped="" ref="0x7fbb447644d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44764660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fbb44770dc0" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb44770dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb4476d180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb4476d310"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb4476d4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb4476d630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb4476d7c0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4476d950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb4476dae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb4476c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb4476dc70"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb4476de00"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb4476c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fbb44764980" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fbb44764980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44764d00"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44763020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44763340"/>
        <function-ref name="get" scoped="" ref="0x7fbb447634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44763660"/>
        <function-ref name="set" scoped="" ref="0x7fbb447637f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44763980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fbb44748060" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fbb44748060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb447483e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44748570"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44748700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44748890"/>
        <function-ref name="get" scoped="" ref="0x7fbb44748a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44748bb0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44748d40"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44747020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fbb44747380" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fbb44747380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44747700"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44747890"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44747a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44747bb0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44747d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44746020"/>
        <function-ref name="set" scoped="" ref="0x7fbb447461b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44746340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fbb44745920" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb44745920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44745ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fbb447466a0" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fbb447466a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44746a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44746bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44746d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44745020"/>
        <function-ref name="get" scoped="" ref="0x7fbb447451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44745340"/>
        <function-ref name="set" scoped="" ref="0x7fbb447454d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44745660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fbb4472f810" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fbb4472f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4472fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4472fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4472d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4472d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4472d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4472d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4472d660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4472d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4472d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4472db10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4472dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4472de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4472c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4472c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4472c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fbb4471a810" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fbb4471a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4471ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4471ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44719020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44719340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44719660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447197f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44719980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44719b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44719ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44719e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44718020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447182b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44718440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fbb446d1ca0" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fbb446d1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446cf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446cf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446cf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446cf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446cf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446cfa00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446cfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446cfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446ce020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ce760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fbb446accb0" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fbb446accb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446ab230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446ab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446ab550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446ab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446ab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446aba00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446abb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446abd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446aa020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446aa760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fbb446cecc0" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fbb446cecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446cd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446cd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446cd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446cd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446cd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446cda00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446cdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446cdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446cc020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446cc760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fbb44716810" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fbb44716810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44716b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44716d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44715020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44715340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44715660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447157f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44715980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44715b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44715ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44715e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44714020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447142b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44714440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fbb447029a0" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fbb447029a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44702d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44701020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb447011b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44701340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb447014d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44701660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb447017f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44701980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44701b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44701ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44701e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44700020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb447001b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44700440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb447005d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fbb446ed9a0" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fbb446ed9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446edd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446ec020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446ec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446ec4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446ec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446ec7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446ec980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446ecb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446ecca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446ece30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446eb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446eb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446eb440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446eb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fbb446dd9a0" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fbb446dd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446ddd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446dc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446dc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446dc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446dc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446dcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446dcca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446dce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446db020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446db1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446db440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446db5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fbb446c8cc0" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fbb446c8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446c7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446c73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446c7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446c76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446c7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446c7a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446c7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446c7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446c6020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446c6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fbb446b8cb0" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fbb446b8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446b70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446b7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446b73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446b7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446b76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446b7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446b7a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446b7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446b7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446b6020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446b61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446b6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446b64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446b6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fbb446a4cc0" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fbb446a4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446a3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446a33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446a3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446a36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446a3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446a3a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446a3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446a3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446a2020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446a21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446a2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446a24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446a2760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446a28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fbb44728810" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fbb44728810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44728b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44728d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44727020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44727340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44727660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44727980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44727b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44727ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44727e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44726020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447262b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44726440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fbb446c6cc0" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fbb446c6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446c50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446c5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446c53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446c5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446c56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446c5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446c5a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446c5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446c5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446c4020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446c4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fbb44724810" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fbb44724810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44724b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44724d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44723020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44723340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44723660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447237f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44723980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44723b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44723ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44723e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44722020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447222b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44722440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fbb44710810" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fbb44710810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44710b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44710d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4470f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4470f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4470f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4470f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4470f660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4470f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4470f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4470fb10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4470fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4470fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4470e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4470e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4470e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fbb446fb9a0" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fbb446fb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446fbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446fa020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446fa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446fa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446fa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446fa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446fa7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446fa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446fab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446faca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446fae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446f9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446f91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446f9440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446f95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fbb446e79a0" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fbb446e79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446e7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446e6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446e61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446e6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446e64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446e6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446e67f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446e6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446e6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446e6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446e6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446e5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446e51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446e5440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446e55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fbb446d79a0" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fbb446d79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446d7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446d6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446d61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446d6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446d64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446d6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446d67f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446d6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446d6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446d6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446d6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446d5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446d51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446d5440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446d55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fbb44733810" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fbb44733810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44733b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44733d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44732020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44732340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44732660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447327f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44732980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44732b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44732ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44732e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44731020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447312b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44731440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fbb4471e810" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fbb4471e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4471ec90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4471ee20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4471d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4471d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4471d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4471d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4471d660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4471d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4471d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4471db10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4471dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4471de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4471c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4471c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4471c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fbb4470a810" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fbb4470a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4470ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4470ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44709020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44709340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44709660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44709980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44709b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44709ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44709e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44708020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447082b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44708440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fbb446d3cc0" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fbb446d3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446d2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446d23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446d2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446d26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446d2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446d2a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446d2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446d2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446d1020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446d1760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fbb446b2cb0" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fbb446b2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446b1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446b13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446b1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446b16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446b1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446b1a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446b1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446b1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446b0020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446b01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446b0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446b04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446b0760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446b08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fbb446a6cb0" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fbb446a6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446a53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446a5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446a56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446a5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446a5a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446a5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446a5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446a4020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446a4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fbb446becc0" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fbb446becc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446bd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446bd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446bd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446bd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446bd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446bda00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446bdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446bdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446bc020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446bc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446bc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446bc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446bc760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446bc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fbb44706810" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fbb44706810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44706d90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44705020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb447051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44705340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb447054d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44705660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb447057f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44705980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44705b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44705ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44705e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44704020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb447041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44704440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb447045d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fbb446f19a0" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fbb446f19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446f1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446f0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446f04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446f0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446f07f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446f0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446f0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446f0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446f0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ef020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ef1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ef440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ef5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fbb446e19a0" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fbb446e19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446e1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446e0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446e04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446e07f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446e0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446e0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446e0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446e0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446df020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446df1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446df440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446df5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fbb446b0cb0" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fbb446b0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446af230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446af3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446af550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446af6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446af870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446afa00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446afb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446afd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446ae020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ae760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fbb446c4cb0" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fbb446c4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446c30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446c3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446c33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446c3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446c36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446c3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446c3a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446c3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446c3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446c2020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446c21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446c2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446c24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446c2760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446c28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fbb4472c810" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fbb4472c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4472cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4472cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4472b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4472b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4472b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4472b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4472b660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4472b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4472b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4472bb10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4472bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4472be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4472a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4472a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4472a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fbb44718810" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fbb44718810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44718b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44718d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44717020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44717340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44717660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447177f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44717980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44717b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44717ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44717e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44716020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447162b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44716440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fbb446e59a0" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fbb446e59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446e5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446e4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446e41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446e4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446e44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446e4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446e47f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446e4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446e4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446e4ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446e4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446e3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446e31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446e3440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446e35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fbb44714810" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fbb44714810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44714b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44714d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44713020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44713340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44713660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44713980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44713b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44713ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44713e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44712020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447122b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44712440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fbb447009a0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fbb447009a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44700d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446fe020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446fe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446fe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446fe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446fe7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446fe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446feb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446feca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446fee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446fd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446fd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446fd440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446fd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fbb446eb9a0" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fbb446eb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446ebd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446ea020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446ea1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446ea340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446ea4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446ea660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446ea7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446ea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446eab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446eaca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446eae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446e9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446e91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446e9440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446e95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fbb446db9a0" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fbb446db9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446dbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446da020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446da340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446da4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446da660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446da7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446da980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446dab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446daca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446dae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446d9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446d91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446d9440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446d95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fbb446c0cc0" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fbb446c0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446bf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446bf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446bf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446bf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446bf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446bfa00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446bfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446bfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446be020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446be760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fbb44735900" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fbb44735900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44735c80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44735e10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44741020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44741340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44741660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447417f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44741980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44741b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44741ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44741e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4473f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4473f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4473f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fbb44722810" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fbb44722810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44722b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44722d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44721020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44721340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44721660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447217f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44721980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44721b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44721ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44721e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44720020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447202b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44720440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fbb4470e810" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fbb4470e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4470eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4470ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4470d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4470d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4470d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4470d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4470d660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4470d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4470d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4470db10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4470dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4470de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4470c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4470c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4470c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fbb446f99a0" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fbb446f99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446f9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446f8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446f81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446f8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446f84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446f8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446f87f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446f8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446f8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446f8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446f8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446f7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446f71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446f7440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446f75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fbb446bccc0" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fbb446bccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446bb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446bb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446bb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446bb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446bb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446bba00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446bbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446bbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446ba020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ba760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fbb446b6cb0" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fbb446b6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446b5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446b53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446b5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446b56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446b5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446b5a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446b5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446b5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446b4020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446b4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fbb446aacb0" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fbb446aacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446a9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446a93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446a9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446a96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446a9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446a9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446a9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446a9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446a8020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446a8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fbb446f59a0" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fbb446f59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446f5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446f4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446f41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446f4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446f44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446f4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446f47f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446f4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446f4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446f4ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446f4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446f3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446f31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446f3440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446f35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fbb446bacc0" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fbb446bacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446b90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446b9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446b93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446b9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446b96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446b9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446b9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446b9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446b9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446b8020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446b81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446b8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446b84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446b8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446b88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fbb44731810" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fbb44731810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44731b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44731d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44730020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44730340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44730660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447307f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44730980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44730b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44730ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44730e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4472f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4472f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4472f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fbb4471c810" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fbb4471c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4471cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4471cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4471b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4471b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4471b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4471b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4471b660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4471b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4471b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4471bb10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4471bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4471be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4471a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4471a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4471a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fbb44708810" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fbb44708810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44708b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44708d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44707020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44707340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44707660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44707980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44707b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44707ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44707e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44706020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447062b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44706440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fbb446c2cc0" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fbb446c2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446c10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446c1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446c13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446c1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446c16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446c1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446c1a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446c1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446c1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446c0020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446c01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446c0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446c04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446c0760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446c08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fbb446aecb0" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fbb446aecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446ad230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446ad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446ad550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446ad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446ad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446ada00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446adb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446add20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446ac020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ac760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fbb447049a0" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fbb447049a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44704d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44703020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb447031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44703340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb447034d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44703660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb447037f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44703980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44703b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44703ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44703e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44702020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb447021b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44702440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb447025d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fbb446ef9a0" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fbb446ef9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446efd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446ee020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446ee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446ee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446ee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446ee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446ee7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446ee980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446eeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446eeca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446eee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ed020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ed1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ed440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ed5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fbb446df9a0" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fbb446df9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446dfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446de020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446de1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446de340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446de4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446de660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446de7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446de980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446deb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446deca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446dee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446dd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446dd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446dd440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446dd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fbb4472a810" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fbb4472a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4472ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4472ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44729020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44729340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44729660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44729980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44729b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44729ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44729e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44728020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447282b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44728440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fbb446e39a0" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fbb446e39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446e3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446e2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446e21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446e2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446e24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446e2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446e27f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446e2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446e2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446e2ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446e2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446e1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446e11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446e1440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446e15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fbb44726810" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fbb44726810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44726b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44726d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44725020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44725340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44725660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44725980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44725b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44725ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44725e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44724020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447242b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44724440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fbb44712810" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fbb44712810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44712b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44712d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44711020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44711340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44711660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447117f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44711980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44711b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44711ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44711e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44710020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447102b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44710440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fbb446fd9a0" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fbb446fd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446fdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446fc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446fc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446fc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446fc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446fc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446fc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446fc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446fcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446fcca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446fce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446fb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446fb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446fb440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446fb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fbb446e99a0" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fbb446e99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446e9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446e8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446e81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446e8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446e84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446e8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446e87f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446e8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446e8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446e8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446e8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446e7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446e71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446e7440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446e75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fbb446d99a0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fbb446d99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446d9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446d8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446d8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446d84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446d8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446d87f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446d8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446d8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446d8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446d8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446d7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446d71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446d7440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446d75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fbb4473f810" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fbb4473f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4473fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4473fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44734020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb447341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44734340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb447344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44734660"/>
        <function-ref name="get" scoped="" ref="0x7fbb447347f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44734980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44734b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44734ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44734e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44733020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb447332b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44733440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fbb44720810" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fbb44720810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44720b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44720d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4471f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4471f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4471f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4471f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4471f660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4471f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4471f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4471fb10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4471fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4471fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4471e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4471e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4471e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fbb4470c810" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fbb4470c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4470cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4470cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4470b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4470b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4470b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4470b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4470b660"/>
        <function-ref name="get" scoped="" ref="0x7fbb4470b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4470b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4470bb10"/>
        <function-ref name="set" scoped="" ref="0x7fbb4470bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4470be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4470a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4470a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4470a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fbb446f79a0" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fbb446f79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446f7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446f6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446f61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446f6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446f64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446f6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446f67f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446f6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446f6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446f6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446f6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446f5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446f51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446f5440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446f55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fbb446caca0" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fbb446caca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446c9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446c93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446c9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446c96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446c9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446c9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446c9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446c9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446c8020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446c8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fbb446b4cb0" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fbb446b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446b3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446b33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446b3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446b36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446b3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446b3a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446b3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446b3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446b2020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446b2760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fbb446cccc0" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fbb446cccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446cb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446cb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446cb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446cb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446cb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446cb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446cba00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446cbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446cbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446ca020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446ca760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fbb446f39a0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fbb446f39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446f3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446f2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446f21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446f2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446f24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446f2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446f27f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb446f2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446f2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446f2ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb446f2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446f1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446f11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446f1440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446f15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fbb446a8cb0" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fbb446a8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446a7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446a73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446a7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446a76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446a7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446a7a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446a7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446a7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446a6020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446a6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fbb446a2cc0" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fbb446a2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446a00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446a0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446a03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446a0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446a06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446a0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446a0a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb446a0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446a0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4469f020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4469f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4469f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4469f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4469f760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4469f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fbb446d59f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fbb446d59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446d41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446d4350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446d44e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446d4670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446d4800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446d4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446d4b20"/>
        <function-ref name="get" scoped="" ref="0x7fbb446d4cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446d4e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446d3020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446d3760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4469cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4469cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446750e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44675270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44675400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44675590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44675720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446758b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44675a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb44675bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44675d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44674020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44674340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44674760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44671740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44671740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44671ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44671c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44671de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44670020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44670340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446704d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44670660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446707f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44670980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44670b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44670ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44670e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4466f120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4466f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4466c100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4466c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4466c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4466c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4466c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4466c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4466cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4466cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4466cde0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4466b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4466b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4466b340"/>
        <function-ref name="set" scoped="" ref="0x7fbb4466b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4466b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4466b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4466ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4466bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44668d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44668d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446670e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44667270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44667400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44667590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44667720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446678b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44667a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb44667bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44667d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44666020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446661b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44666340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446664d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44666760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44663740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44663740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44663ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44663c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44663de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44662020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446621b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44662340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446624d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44662660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446627f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44662980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44662b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44662ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44662e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44661120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4465e100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4465e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4465e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4465e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4465e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4465e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4465eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4465ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4465ede0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4465d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4465d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4465d340"/>
        <function-ref name="set" scoped="" ref="0x7fbb4465d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4465d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4465d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4465da80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4465dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4465ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4465ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446580e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44658270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44658400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44658590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44658720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446588b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44658a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb44658bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44658d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44657020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44657340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44657760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44654740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44654740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44654ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44654c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44654de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44653020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446531b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44653340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446534d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44653660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446537f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44653980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44653b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44653ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44653e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44652120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4464f100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4464f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4464f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4464f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4464f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4464f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4464fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4464fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4464fde0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4464e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4464e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4464e340"/>
        <function-ref name="set" scoped="" ref="0x7fbb4464e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4464e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4464e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4464ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4464ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4464bd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4464bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4464a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4464a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4464a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4464a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4464a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4464a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4464aa40"/>
        <function-ref name="get" scoped="" ref="0x7fbb4464abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4464ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44649020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44649340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44649760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44646740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44646740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44646ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44646c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44646de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44645020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44645340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446454d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44645660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44645980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44645b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44645ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44645e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44644120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44641100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44641100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44641480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44641610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446417a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44641930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44641ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44641c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44641de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44640020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44640340"/>
        <function-ref name="set" scoped="" ref="0x7fbb446404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44640660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44640a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44640c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4463dd80" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4463dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4463c180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4463c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4463c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4463c630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4463c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4463c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4463cae0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4463cc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4463ce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4463b020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4463b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4463b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4463b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4463b760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4463b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44638740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44638740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44638ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44638c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44638de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44637020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446371b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44637340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446374d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44637660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44637980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44637b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44637ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44637e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44636120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44633100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44633100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44633480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44633610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446337a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44633930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44633ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44633c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44633de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44631020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44631340"/>
        <function-ref name="set" scoped="" ref="0x7fbb446314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44631660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44631a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44631c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4462ed10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4462ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4462d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4462d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4462d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4462d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4462d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4462d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4462da40"/>
        <function-ref name="get" scoped="" ref="0x7fbb4462dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4462dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4462c020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4462c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4462c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4462c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4462c760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4462c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44629740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44629740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44629ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44629c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44629de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44628020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb446281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44628340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb446284d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44628660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44628980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44628b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44628ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44628e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44627120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44624100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44624100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44624480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44624610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446247a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44624930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44624ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44624c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44624de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44623020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44623340"/>
        <function-ref name="set" scoped="" ref="0x7fbb446234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44623660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44623a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44623c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44620d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44620d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4461f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4461f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4461f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4461f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4461f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4461f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4461fa40"/>
        <function-ref name="get" scoped="" ref="0x7fbb4461fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4461fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4461e020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4461e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4461e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4461e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4461e760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4461e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4461b740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4461b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4461bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4461bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4461bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4461a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4461a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4461a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4461a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4461a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4461a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4461a980"/>
        <function-ref name="set" scoped="" ref="0x7fbb4461ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4461aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4461ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44619120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44616100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44616100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44616480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44616610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446167a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44616930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44616ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44616c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44616de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44615020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44615340"/>
        <function-ref name="set" scoped="" ref="0x7fbb446154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44615660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44615a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44615c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44612d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44612d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb446110e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44611270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44611400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44611590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44611720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446118b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44611a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb44611bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44611d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44610020"/>
        <function-ref name="set" scoped="" ref="0x7fbb446101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44610340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44610760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb446108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4460c740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4460c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4460cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4460cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4460cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4460b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4460b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4460b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4460b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4460b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4460b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4460b980"/>
        <function-ref name="set" scoped="" ref="0x7fbb4460bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4460bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4460be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4460a120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4460a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44607100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44607100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44607480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44607610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb446077a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44607930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44607ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44607c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44607de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44606020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb446061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44606340"/>
        <function-ref name="set" scoped="" ref="0x7fbb446064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44606660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb446067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44606a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44606c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44603e60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44603e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44602210"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb446023a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44602530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb446026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44602850"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb446029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44602b70"/>
        <function-ref name="get" scoped="" ref="0x7fbb44602d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44601020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb446011b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44601340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb446014d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44601660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb446018f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44601a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445fe9f0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445fe9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445fed70"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445fd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445fd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445fd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445fd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445fd7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445fd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445fdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445fdca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb445fde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445fc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445fc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445fc440"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445fc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445f9460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445f9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445f97e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445f9970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445f9b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445f9c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445f9e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445f81b0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445f8340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445f84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445f8660"/>
        <function-ref name="set" scoped="" ref="0x7fbb445f87f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445f8980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445f8b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445f8da0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445f5e00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445f5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445f41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445f4350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445f44e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445f4670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445f4800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445f4b20"/>
        <function-ref name="get" scoped="" ref="0x7fbb445f4cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445f4e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445f3020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445f3760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445f0740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445f0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445f0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445f0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445ef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445ef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445ef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445ef4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445ef660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445ef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445ef980"/>
        <function-ref name="set" scoped="" ref="0x7fbb445efb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445efca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445efe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445ee120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445eb100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445eb480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445eb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445eb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445eb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445ebac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445ebc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445ebde0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445e9340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445e9a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445e6d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445e6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445e50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445e5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445e5400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445e5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445e5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445e58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445e5a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb445e5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445e5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445e4020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445e4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445e1740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445e1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445e1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445e1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445e1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445e01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445e0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445e04d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445e0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445e07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445e0980"/>
        <function-ref name="set" scoped="" ref="0x7fbb445e0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445e0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445e0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445df120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445dc100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445dc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445dc480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445dc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445dc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445dc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445dcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445dcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445dcde0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445db340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445dba80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445d8d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445d8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445d70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445d7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445d7400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445d7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445d7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445d78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445d7a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb445d7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445d7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445d6020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445d6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445d3740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445d3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445d3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445d3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445d3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445d24d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445d2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445d2980"/>
        <function-ref name="set" scoped="" ref="0x7fbb445d2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445d2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445d2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445d1120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445ce100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445ce480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445ce610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445ce7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445ce930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445ceac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445cec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445cede0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445cd340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445cda80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445cad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445cad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445c90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445c9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445c9400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445c9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445c9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445c98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445c9a40"/>
        <function-ref name="get" scoped="" ref="0x7fbb445c9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445c9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445c8020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445c8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445c5740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445c5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445c5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445c5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445c34d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445c37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445c3980"/>
        <function-ref name="set" scoped="" ref="0x7fbb445c3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445c3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445c3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445c2120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445bf100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445bf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445bf480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445bf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445bf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445bf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445bfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445bfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445bfde0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445be340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445bea80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445bbd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445bbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445ba0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445ba270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445ba400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445ba590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445ba720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445ba8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445baa40"/>
        <function-ref name="get" scoped="" ref="0x7fbb445babd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445bad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445b9020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445b9760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445b6740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445b6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445b6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445b6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445b5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445b54d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445b5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445b5980"/>
        <function-ref name="set" scoped="" ref="0x7fbb445b5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445b5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445b5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445b4120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445b1100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445b1480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445b1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445b17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445b1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445b1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445b1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445b1de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445b0340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445b0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445add10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445add10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445ac0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445ac270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445ac400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445ac590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445ac720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445ac8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445aca40"/>
        <function-ref name="get" scoped="" ref="0x7fbb445acbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445acd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445ab020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445ab760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445a8740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445a8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445a8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445a8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445a74d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445a7980"/>
        <function-ref name="set" scoped="" ref="0x7fbb445a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445a6120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb445a3100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb445a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb445a3480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445a3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445a37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445a3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445a3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445a3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445a3de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb445a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb445a2340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb445a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445a2a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb4459ed10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb4459ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4459d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4459d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4459d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4459d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4459d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4459d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4459da40"/>
        <function-ref name="get" scoped="" ref="0x7fbb4459dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4459dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4459c020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4459c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4459c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4459c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4459c760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4459c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44599740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44599740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44599ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44599c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44599de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44598020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445981b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44598340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445984d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44598660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445987f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44598980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44598b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44598ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44598e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44597120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbb44594100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbb44594100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44594480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44594610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445947a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44594930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44594ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44594c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44594de0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44593020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb445931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44593340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44593660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44593a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44593c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb4451c2f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb4451c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4451c670"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4451c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4451c990"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4451cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4451ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4451ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4451b020"/>
        <function-ref name="get" scoped="" ref="0x7fbb4451b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4451b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4451b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbb4451b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4451b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4451b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4451bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4451bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb4452d020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb4452d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4452d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4452d530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4452d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4452d850"/>
        <function-ref name="get" scoped="" ref="0x7fbb4452d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4452db70"/>
        <function-ref name="set" scoped="" ref="0x7fbb4452dd00"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4451c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb44518de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb44518de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44517180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44517310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb445174a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44517630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445177c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44517950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44517ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44517c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44517e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44516020"/>
        <function-ref name="set" scoped="" ref="0x7fbb445161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44516340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb445164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44516760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb445168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb44519b90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb44519b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44518020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb445181b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44518340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb445184d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44518660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb445187f0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44518980"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44518b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb44513930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb44513930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44513cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44513e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44511020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb445111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44511340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb445114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44511660"/>
        <function-ref name="get" scoped="" ref="0x7fbb445117f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44511980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44511b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44511ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44511e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44510020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb445102b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44510440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb44514710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb44514710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44514a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44514c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44514db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44513020"/>
        <function-ref name="get" scoped="" ref="0x7fbb445131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44513340"/>
        <function-ref name="set" scoped="" ref="0x7fbb445134d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44513660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbb435fd020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb435fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb435fd3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb435fd530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb435fd6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb435fd850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb435fd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb435fdc30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb435fdc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb435fb020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb435fb1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb435fb340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb435fb4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb435fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb435fb8b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb435fb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb435fbc30"/>
        <function-ref name="source" scoped="" ref="0x7fbb435fbdc0"/>
        <function-ref name="address" scoped="" ref="0x7fbb435fa020"/>
        <function-ref name="destination" scoped="" ref="0x7fbb435fa1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb435fa340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb435fa4d0"/>
        <function-ref name="type" scoped="" ref="0x7fbb435fa660"/>
        <function-ref name="setType" scoped="" ref="0x7fbb435fa7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb435fa980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb435fab10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb435faca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbb435f9020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbb435f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb435f93a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb435f9530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb435f96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbb43114420" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb43114420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb431147a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43114930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43114ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43114c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43114de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb43113060" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb43113060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb431133e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb43113570"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43113700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43113890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb43113a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb43113c70" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb43113c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb43112020"/>
        <function-ref name="source" scoped="" ref="0x7fbb431121b0"/>
        <function-ref name="address" scoped="" ref="0x7fbb43112340"/>
        <function-ref name="destination" scoped="" ref="0x7fbb431124d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb43112660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb431127f0"/>
        <function-ref name="type" scoped="" ref="0x7fbb43112980"/>
        <function-ref name="setType" scoped="" ref="0x7fbb43112b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb43112ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb43112e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb43111020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbb431112b0" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbb431112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb43111630"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb431117c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb43111950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbb43107390" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb43107390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43107710"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb431078a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43107a30"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43107bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43107d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fbb43106060" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb43106060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb431063e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43106570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43106700"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43106890"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43106a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fbb43106c70" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="Relay_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb43106c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb43104020"/>
        <function-ref name="source" scoped="" ref="0x7fbb431041b0"/>
        <function-ref name="address" scoped="" ref="0x7fbb43104340"/>
        <function-ref name="destination" scoped="" ref="0x7fbb431044d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb43104660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb431047f0"/>
        <function-ref name="type" scoped="" ref="0x7fbb43104980"/>
        <function-ref name="setType" scoped="" ref="0x7fbb43104b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb43104ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb43104e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb43103020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb444c4940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb444c4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb444c4cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb444c4e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb444c1020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb444c11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb444c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fbb44477400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb44477400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb444777a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb44477930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44477ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb44477c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb44477de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb444784b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb444784b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb44478850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb444789e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44478b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb44478d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb44477020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbb44474720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb44474720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44474aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb44474c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb44474dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44473020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb444731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fbb44473480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fbb44473480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb44473800"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb44473990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fbb44473c60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fbb44473c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb44472020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb444721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fbb44475060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb44475060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb444753e0"/>
        <function-ref name="source" scoped="" ref="0x7fbb44475570"/>
        <function-ref name="address" scoped="" ref="0x7fbb44475700"/>
        <function-ref name="destination" scoped="" ref="0x7fbb44475890"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb44475a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb44475bb0"/>
        <function-ref name="type" scoped="" ref="0x7fbb44475d40"/>
        <function-ref name="setType" scoped="" ref="0x7fbb44474020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb444741b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb44474340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb444744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbb4446e140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbb4446e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb4446e4c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb4446e650"/>
        <function-ref name="start" scoped="" ref="0x7fbb4446e7e0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4446e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbb4446d1d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb4446d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4446d550"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4446d6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4446d870"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4446da00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4446db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fbb4446b020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fbb4446b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4446b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb4446b630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb4446b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4446b9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb4446bb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4446bcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4446be60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb44469020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fbb44463cd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb44463cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb4445e2e0"/>
        <function-ref name="clear" scoped="" ref="0x7fbb4445ea10"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb44466b60"/>
        <function-ref name="set" scoped="" ref="0x7fbb4445d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbb44452b20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb44452b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbb44458020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbb444581b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbb44458340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbb444584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb4446c3f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb4446c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4446c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbb44468990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44468990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb44468d10"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb44467020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb444671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb444692d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb444692d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb44469650"/>
        <function-ref name="source" scoped="" ref="0x7fbb444697e0"/>
        <function-ref name="address" scoped="" ref="0x7fbb44469970"/>
        <function-ref name="destination" scoped="" ref="0x7fbb44469b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb44469c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb44469e20"/>
        <function-ref name="type" scoped="" ref="0x7fbb44468020"/>
        <function-ref name="setType" scoped="" ref="0x7fbb444681b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb44468340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb444684d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb44468660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fbb4445ddc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb4445ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb4445a3f0"/>
        <function-ref name="clear" scoped="" ref="0x7fbb4445ab20"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb4445cca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb444592a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbb44444880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbb44444880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb44444c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb44444d90"/>
        <function-ref name="start" scoped="" ref="0x7fbb44443020"/>
        <function-ref name="stop" scoped="" ref="0x7fbb444431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbb4442bd40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb4442bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb444330e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb44433270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb44433400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb44433590"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb44433720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb444338b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fbb4441ed20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fbb4441ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fbb444201c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb4443f760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb4443f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4443fae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb4443fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4443fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4443e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb4443e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbb44443980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb44443980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb44443d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb44442020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb444421b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb44442340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb444424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fbb44441900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fbb44441900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb44441c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbb44436970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb44436970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb44436cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb44436e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb4443d030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb4443d1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb4443d350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb4443d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbb44433bb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb44433bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbb44431020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbb444311b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbb44431340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbb444314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb44442cb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb44442cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb444410a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbb4443d810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb4443d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb4443db90"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb4443dd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb4443c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbb44429020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbb44429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbb444293a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbb44429530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbb444296c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbb44429850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbb444299e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb44440020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb44440020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb444403a0"/>
        <function-ref name="source" scoped="" ref="0x7fbb44440530"/>
        <function-ref name="address" scoped="" ref="0x7fbb444406c0"/>
        <function-ref name="destination" scoped="" ref="0x7fbb44440850"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb444409e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb44440b70"/>
        <function-ref name="type" scoped="" ref="0x7fbb44440d00"/>
        <function-ref name="setType" scoped="" ref="0x7fbb4443f020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb4443f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb4443f340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb4443f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbb44432a80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb44432a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbb44432e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbb4441db70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbb4441db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb4441a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb4441a1b0"/>
        <function-ref name="start" scoped="" ref="0x7fbb4441a340"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4441a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbb4440f080" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4440f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbb4440f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbb4440e2e0" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbb4440e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbb4440e660"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbb4440e7f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbb4440e980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbb4440eb10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbb4440eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbb44411670" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb44411670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb444119f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb44411b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb44411d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb44410020"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb444101b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb44410340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fbb44412170" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fbb44412170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb444124f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb44412680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44412810"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb444129a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb44412b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbb4440f700" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb4440f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbb4440fa80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbb4440fc10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbb4440fda0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbb4440e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fbb44414d30" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fbb44414d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb444130e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbb44410670" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb44410670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb444109f0"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb44410b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb44410d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb44419210" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb44419210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44419590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb44419720"/>
        <function-ref name="request" scoped="" ref="0x7fbb444198b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb44419a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb44419bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fbb44414020" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fbb44414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb444143a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb44414530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb444146c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb44414850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb444149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fbb44413420" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fbb44413420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb444137a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb44413930"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb44413ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44413c50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb44413de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fbb44411020" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb44411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb444113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbb4440d9f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbb4440d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb4440dd70"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb4440a020"/>
        <function-ref name="start" scoped="" ref="0x7fbb4440a1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4440a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbb44409990" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb44409990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb44409d10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb44408020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb444081b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb44408340"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb444084d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb44408660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb4440a600" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb4440a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4440a980"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4440ab10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4440aca0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4440ae30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb44409020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb44409300" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb44409300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb44409680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbb44405690" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbb44405690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb44405a10"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb44405ba0"/>
        <function-ref name="start" scoped="" ref="0x7fbb44405d30"/>
        <function-ref name="stop" scoped="" ref="0x7fbb44404020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbb44403020" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb44403020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb444033a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb44403530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb444036c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb44403850"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb444039e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb44403b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fbb443f8ae0" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fbb443f8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb443f8e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb443f6020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb443f61b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb443f6340"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb443f64d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb443f6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbb443eb020" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb443eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb443eb3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb443eb530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb443eb6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb443eb850"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb443eb9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb443ebb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fbb443f0d30" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbb443f0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb443f80e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb443f8270"/>
        <function-ref name="modify" scoped="" ref="0x7fbb443f8400"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb443f8590"/>
        <function-ref name="resend" scoped="" ref="0x7fbb443f8720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb444042e0" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb444042e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb44404660"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb444047f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb44404980"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb44404b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb44404ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fbb443ef020" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbb443ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbb443ef3a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fbb443ef530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fbb443ff020" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fbb443ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb443ff3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb443ff530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb443e4660" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb443e4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb443e49e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb443e4b70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb443e4d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fbb443f93f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fbb443f93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fbb443f9770"/>
        <function-ref name="rfOff" scoped="" ref="0x7fbb443f9900"/>
        <function-ref name="rxOn" scoped="" ref="0x7fbb443f9a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7fbb443f9c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fbb443f9db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fbb44400020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fbb444001b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fbb44400340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb443ef7f0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb443ef7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb443efb70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb443efd00"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb443ee020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb443ee1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb443ee340"/>
        <function-ref name="get" scoped="" ref="0x7fbb443ee4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb443ee660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb443eeca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb443ee7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb443ee980"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb443eeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fbb44403e60" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb44403e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44401210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb444013a0"/>
        <function-ref name="request" scoped="" ref="0x7fbb44401530"/>
        <function-ref name="granted" scoped="" ref="0x7fbb444016c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb44401850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fbb443dfe40" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fbb443dfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb443e8310"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb443e84a0"/>
        <function-ref name="isState" scoped="" ref="0x7fbb443e8630"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb443e87c0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb443e8950"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb443e8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fbb443da9e0" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fbb443da9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb443dad60"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb443d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fbb443dca10" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fbb443dca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb443dcd90"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb443da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fbb443dda00" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fbb443dda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb443ddd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb443dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fbb44383b80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbb44383b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbb4438f020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbb4438f1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbb4438f340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbb4438f4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbb4438f660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbb4438f7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbb4438f980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbb4438fb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbb4438fca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbb4438fe30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbb4438e020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbb4438e1b0"/>
        <function-ref name="sync" scoped="" ref="0x7fbb4438e340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbb4438e5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbb4438e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fbb44381020" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fbb44381020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44381c10"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb443800d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fbb4438ea60" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fbb4438ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fbb4438ede0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fbb44382020"/>
        <function-ref name="rxOn" scoped="" ref="0x7fbb443821b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fbb44382340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fbb443824d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fbb44382660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fbb443827f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fbb44382980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb44393720" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb44393720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44393aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb44393c30"/>
        <function-ref name="request" scoped="" ref="0x7fbb44393dc0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb44390020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb443901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fbb44378970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbb44378970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbb44378cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbb44378e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbb44377030"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbb443771c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbb44377350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbb443774e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbb44377670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbb44377800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbb44377990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbb44377b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbb44377cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbb44377e40"/>
        <function-ref name="sync" scoped="" ref="0x7fbb44376020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbb443762b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbb44376440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fbb443508e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb443508e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44350c60"/>
        <function-ref name="write" scoped="" ref="0x7fbb44350df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fbb44371020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb44371020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fbb443713a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fbb44369d90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fbb44369d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb44367670"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4436f5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb44367020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb4436fa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb44367b30"/>
        <function-ref name="start" scoped="" ref="0x7fbb44370bc0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4436f110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fbb443545f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb443545f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44354970"/>
        <function-ref name="write" scoped="" ref="0x7fbb44354b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fbb44365380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fbb44365380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44365700"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44365890"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44365a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44365bb0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44365d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44364020"/>
        <function-ref name="set" scoped="" ref="0x7fbb443641b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44364340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fbb44375b40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fbb44375b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44374750"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb44374bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fbb4433e820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fbb4433e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb4433eba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb4433ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fbb4434f1c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbb4434f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb4434f540"/>
        <function-ref name="write" scoped="" ref="0x7fbb4434f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fbb4434fa70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb4434fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb4434fdf0"/>
        <function-ref name="write" scoped="" ref="0x7fbb4434e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fbb443593d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbb443593d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44359750"/>
        <function-ref name="write" scoped="" ref="0x7fbb443598e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fbb4435a810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb4435a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fbb4435ab90"/>
        <function-ref name="changed" scoped="" ref="0x7fbb4435ad20"/>
        <function-ref name="amGroup" scoped="" ref="0x7fbb44361020"/>
        <function-ref name="setAddress" scoped="" ref="0x7fbb443611b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fbb44366060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbb44366060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb443663e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44366570"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44366700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44366890"/>
        <function-ref name="get" scoped="" ref="0x7fbb44366a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44366bb0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44366d40"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44365020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fbb4434d120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb4434d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb4434d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fbb443646a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fbb443646a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44364a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44364bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44364d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44363020"/>
        <function-ref name="get" scoped="" ref="0x7fbb443631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44363340"/>
        <function-ref name="set" scoped="" ref="0x7fbb443634d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44363660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb443794a0" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb443794a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb44379820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fbb44350020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb44350020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb443503a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb44350530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fbb4434da40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbb4434da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb4434ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbb4434c1d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbb4434c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb4434c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb4434c6e0"/>
        <function-ref name="request" scoped="" ref="0x7fbb4434c870"/>
        <function-ref name="granted" scoped="" ref="0x7fbb4434ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb4434cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fbb4434ad90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fbb4434ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44349180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb44349310"/>
        <function-ref name="request" scoped="" ref="0x7fbb443494a0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb44349630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb443497c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fbb44376740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fbb44376740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fbb44376ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fbb44376c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7fbb44376de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fbb44375020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fbb443751b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fbb44375340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fbb443754d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fbb44375660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fbb44359c80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbb44359c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb443540a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb44354230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fbb44351b00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbb44351b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44351e80"/>
        <function-ref name="write" scoped="" ref="0x7fbb44359030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fbb4434b2b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbb4434b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb4434b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb44349a80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb44349a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb44349e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb44347020"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb443471b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb44347340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb443474d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44347660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb443477f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb44347e30"/>
        <function-ref name="set" scoped="" ref="0x7fbb44347980"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb44347b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb44347ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fbb4433f940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fbb4433f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb4433fcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb4433fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb44379b10" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb44379b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44378020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb443781b0"/>
        <function-ref name="request" scoped="" ref="0x7fbb44378340"/>
        <function-ref name="granted" scoped="" ref="0x7fbb443784d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb44378660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fbb4435d520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbb4435d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb4435d8a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb4435da30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fbb44355a90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbb44355a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb4435d020"/>
        <function-ref name="write" scoped="" ref="0x7fbb4435d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fbb443620e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fbb443620e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44362460"/>
        <function-ref name="disable" scoped="" ref="0x7fbb443625f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbb44362780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbb44362910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fbb4434a020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fbb4434a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb4434a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb4434a530"/>
        <function-ref name="request" scoped="" ref="0x7fbb4434a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb4434a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb4434a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fbb4434b9c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbb4434b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb4434bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb442c87e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb442c87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb442c8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fbb442c5220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442c5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb442c3b30"/>
        <function-ref name="fired" scoped="" ref="0x7fbb442c4a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb442c34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb442c3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb442c1020"/>
        <function-ref name="start" scoped="" ref="0x7fbb442c4090"/>
        <function-ref name="stop" scoped="" ref="0x7fbb442c45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb442bf490" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb442bf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb442bf810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fbb442bfd20" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbb442bfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb441c6670"/>
        <function-ref name="fired" scoped="" ref="0x7fbb441c7550"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb441c6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb441c7a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb441c6b30"/>
        <function-ref name="start" scoped="" ref="0x7fbb441c9b60"/>
        <function-ref name="stop" scoped="" ref="0x7fbb441c7090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb4308c8b0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb4308c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb430880d0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4308a0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb4308aa50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb4308a590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb43088590"/>
        <function-ref name="start" scoped="" ref="0x7fbb4308b6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4308bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb4308c060" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb4308c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb4308c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb43084870" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb43084870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43081090"/>
        <function-ref name="fired" scoped="" ref="0x7fbb43082090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb43082a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb43082550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb43081550"/>
        <function-ref name="start" scoped="" ref="0x7fbb430836a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43083bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb43084020" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb43084020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb430843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbb4306b020" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4306b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb4306b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb4306b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb4306b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb4306b850"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4306b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbb4306e570" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb4306e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4306e8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb4306ea80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4306ec10"/>
        <function-ref name="get" scoped="" ref="0x7fbb4306eda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4306d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4306d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb4306d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4306d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4306d660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb4306d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb4306d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbb4306dc10" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4306dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb4306c020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb4306c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4306c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb4306c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb4306c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4306c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb4306c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb4306cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb4306cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbb4429dba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb4429dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb4429c020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb4429c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb4429c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb4429c4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4429c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbb442a14d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb442a14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb442a1850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb442a19e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb442a1b70"/>
        <function-ref name="get" scoped="" ref="0x7fbb442a1d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb442a0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb442a01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb442a0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb442a04d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb442a0660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb442a07f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb442a0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbb4429e280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb4429e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb4429e600"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb4429e790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4429e920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb4429eab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb4429ec40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4429edd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb4429d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb4429d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb4429d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fbb43062da0" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb43062da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb43061180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb43061310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb430614a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb43061630"/>
        <function-ref name="fired" scoped="" ref="0x7fbb430617c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbb430644c0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb430644c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb43064840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb430649d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb43064b60"/>
        <function-ref name="get" scoped="" ref="0x7fbb43064cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb43064e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb43063030"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb430631c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb43063350"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb430634e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb43063670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb43063800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb43068340" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb43068340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43065ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb43067b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb43065550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb43065090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb43064090"/>
        <function-ref name="start" scoped="" ref="0x7fbb430671b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb430676c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb43069a30" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb43069a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb43069db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbb43063a90" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb43063a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb43063e10"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb43062020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb430621b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb43062340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb430624d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb43062660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb430627f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb43062980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb43062b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbb4424c020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb4424c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb4424ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4424b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4424b340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4424bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fbb44242020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbb44242020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb44242e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb44241800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44241340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44241cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbb4422f2c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb4422f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4422f640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb4422f7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb4422f960"/>
        <function-ref name="get" scoped="" ref="0x7fbb4422faf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb4422fc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4422fe10"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb4422e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4422e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4422e340"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb4422e4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb4422e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbb442310a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb442310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb44230020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb442309a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb442304e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb44230e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fbb4420d540" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fbb4420d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb4420c3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4420cd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4420c890"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4420a260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbb442100f0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb442100f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb4420e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4420e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4420e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4420ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb4307fa90" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb4307fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb4307b2e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4307c2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb4307cc60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb4307c7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb4307b7a0"/>
        <function-ref name="start" scoped="" ref="0x7fbb4307e8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4307ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fbb43077210" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fbb43077210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43075b30"/>
        <function-ref name="fired" scoped="" ref="0x7fbb43076a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb430754e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb43075020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb43074020"/>
        <function-ref name="start" scoped="" ref="0x7fbb43076090"/>
        <function-ref name="stop" scoped="" ref="0x7fbb430765a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbb4307be10" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb4307be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb4307aca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb43079670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb430791b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb43079b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fbb441bf090" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fbb441bf090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441bf410"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441bf5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441bf730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441bf8c0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441bfa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441bfbe0"/>
        <function-ref name="set" scoped="" ref="0x7fbb441bfd70"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fbb441be390" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fbb441be390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441be710"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441be8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441bea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441bebc0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441bed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441bd020"/>
        <function-ref name="set" scoped="" ref="0x7fbb441bd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fbb441bd6a0" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fbb441bd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441bda20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441bdbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441bdd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441bc020"/>
        <function-ref name="get" scoped="" ref="0x7fbb441bc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441bc340"/>
        <function-ref name="set" scoped="" ref="0x7fbb441bc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fbb441c1e60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbb441c1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441c0210"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441c03a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441c0530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441c06c0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441c0850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441c09e0"/>
        <function-ref name="set" scoped="" ref="0x7fbb441c0b70"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441c0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fbb441bbce0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fbb441bbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441ba230"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441ba3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441ba550"/>
        <function-ref name="get" scoped="" ref="0x7fbb441ba6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441ba870"/>
        <function-ref name="set" scoped="" ref="0x7fbb441baa00"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441bab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fbb441c4c70" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fbb441c4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441c1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441c14d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441c1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441c17f0"/>
        <function-ref name="set" scoped="" ref="0x7fbb441c1980"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fbb441bc9b0" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fbb441bc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441bcd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441bb340"/>
        <function-ref name="get" scoped="" ref="0x7fbb441bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441bb660"/>
        <function-ref name="set" scoped="" ref="0x7fbb441bb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441bb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb441b62f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441b62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441b6670"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441b6800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb441b6990"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441b6b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441b6cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb441b6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441b5020"/>
        <function-ref name="get" scoped="" ref="0x7fbb441b51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb441b5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb441b54d0"/>
        <function-ref name="set" scoped="" ref="0x7fbb441b5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb441b57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb441b5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb441b5c10"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441b5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb441b8020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441b8530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441b86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441b8850"/>
        <function-ref name="get" scoped="" ref="0x7fbb441b89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441b8b70"/>
        <function-ref name="set" scoped="" ref="0x7fbb441b8d00"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb441b2de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441b2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441b1180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441b1310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb441b14a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441b1630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441b17c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb441b1950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441b1ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441b1c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb441b1e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb441b0020"/>
        <function-ref name="set" scoped="" ref="0x7fbb441b01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb441b0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb441b04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb441b0760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441b08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb441b3b60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441b3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441b2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441b21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441b2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441b24d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441b2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441b27f0"/>
        <function-ref name="set" scoped="" ref="0x7fbb441b2980"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441b2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb441ad930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441ad930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441adcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441ade40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb441ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441ac340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb441ac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441ac660"/>
        <function-ref name="get" scoped="" ref="0x7fbb441ac7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb441ac980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb441acb10"/>
        <function-ref name="set" scoped="" ref="0x7fbb441acca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb441ace30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb441ab020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb441ab2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441ab440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb441ae710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441ae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441aea90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441aec20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441aedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441ad020"/>
        <function-ref name="get" scoped="" ref="0x7fbb441ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441ad340"/>
        <function-ref name="set" scoped="" ref="0x7fbb441ad4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441ad660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb441a8480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441a8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441a8800"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441a8990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb441a8b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441a8cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441a8e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb441a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441a71b0"/>
        <function-ref name="get" scoped="" ref="0x7fbb441a7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb441a74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb441a7660"/>
        <function-ref name="set" scoped="" ref="0x7fbb441a77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb441a7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb441a7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb441a7da0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb441a91d0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441a91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441a9550"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441a96e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441a9870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441a9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb441a9b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441a9d20"/>
        <function-ref name="set" scoped="" ref="0x7fbb441a8020"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb441a3020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb441a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441a33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441a3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb441a36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441a3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441a39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb441a3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441a3d00"/>
        <function-ref name="get" scoped="" ref="0x7fbb441a1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb441a11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb441a1340"/>
        <function-ref name="set" scoped="" ref="0x7fbb441a14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb441a1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb441a17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb441a1a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441a1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb441a5d70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441a5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb441a4180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb441a4310"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441a44a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441a4630"/>
        <function-ref name="get" scoped="" ref="0x7fbb441a47c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441a4950"/>
        <function-ref name="set" scoped="" ref="0x7fbb441a4ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441a4c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb4419ede0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb4419ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4419d180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4419d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb4419d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4419d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4419d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb4419d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4419dae0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4419dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb4419de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb4419c020"/>
        <function-ref name="set" scoped="" ref="0x7fbb4419c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb4419c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb4419c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb4419c760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4419c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb4419fb60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb4419fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4419e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4419e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4419e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb4419e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb4419e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb4419e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fbb4419e980"/>
        <function-ref name="clr" scoped="" ref="0x7fbb4419eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb44199930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb44199930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44199cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44199e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44198020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb441981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44198340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb441984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44198660"/>
        <function-ref name="get" scoped="" ref="0x7fbb441987f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb44198980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44198b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb44198ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44198e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44197020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb441972b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44197440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb4419a710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb4419a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb4419aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb4419ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb4419adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb44199020"/>
        <function-ref name="get" scoped="" ref="0x7fbb441991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb44199340"/>
        <function-ref name="set" scoped="" ref="0x7fbb441994d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb44199660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fbb44184150" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fbb44184150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fbb441844d0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44184660"/>
        <function-ref name="captured" scoped="" ref="0x7fbb441847f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fbb44184980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fbb44184d60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fbb44184d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44182180"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44182310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbb441824a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbb44182630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fbb44182a20" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbb44182a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44182da0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4417e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbb4417e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbb4417e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fbb441678f0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fbb441678f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb44167c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbb44167e00"/>
        <function-ref name="captured" scoped="" ref="0x7fbb44166020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb441661b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb44166340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbb441664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbb4417ba20" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbb4417ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fbb4417bda0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44168020"/>
        <function-ref name="captured" scoped="" ref="0x7fbb441681b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fbb44168340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbb441685d0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb441685d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb44168950"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb44168ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb44168c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb44168e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb44167020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb441671b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb44167340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb441674d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb44167660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fbb441667a0" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb441667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb44166b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb44166cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb44166e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb44165020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb441651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb44165340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb441654d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb44165660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb441657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb44165980"/>
        <function-ref name="set" scoped="" ref="0x7fbb44165b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb44165ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb44165e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb44164120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb441642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fbb441578a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fbb441578a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44157c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44157db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44156020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441561b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44156340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fbb4414ca30" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fbb4414ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4414cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4414b020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4414b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4414b340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4414b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4414b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fbb441538a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fbb441538a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44153c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44153db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44152020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441521b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44152340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fbb441518a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fbb441518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44151c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44151db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44150020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441501b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44150340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fbb4415d8a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fbb4415d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4415dc20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4415ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44158020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441581b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44158340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fbb4414e8a0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fbb4414e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4414ed20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4414d020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4414d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4414d340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4414d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4414d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fbb441568a0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fbb441568a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44156c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44156db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44155020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441551b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44155340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441554d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fbb4414ba30" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fbb4414ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4414bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4414a020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4414a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4414a340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4414a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4414a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fbb441598f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fbb441598f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44159c70"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44159e00"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4415e020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4415e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4415e340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4415e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fbb441508a0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fbb441508a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44150c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44150db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4414f020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4414f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4414f340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4414f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fbb441588a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fbb441588a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44158c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44158db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44157020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441571b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44157340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fbb4414da30" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fbb4414da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4414ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4414c020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4414c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4414c340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4414c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4414c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fbb441558a0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fbb441558a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44155c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44155db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44153020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441531b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44153340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fbb441528a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fbb441528a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44152c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44152db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44151020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441511b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44151340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fbb4415e8a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fbb4415e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4415ec20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4415edb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4415d020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4415d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4415d340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4415d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fbb4414f8a0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fbb4414f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4414fc20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4414fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4414e020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4414e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4414e340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4414e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fbb441438a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fbb441438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44143c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44143db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44142020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441421b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44142340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fbb44138a30" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fbb44138a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44138db0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44137020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb441371b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb44137340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb441374d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb44137660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fbb441408a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fbb441408a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44140c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44140db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4413f020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4413f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4413f340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4413f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fbb4413e8a0" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fbb4413e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4413ec20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4413edb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4413d020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4413d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4413d340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4413d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fbb441458a0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fbb441458a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44145c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44145db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44144020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441441b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44144340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fbb4413b8a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fbb4413b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4413bd20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44139020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb441391b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb44139340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb441394d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb44139660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fbb441428a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fbb441428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44142c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44142db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44141020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441411b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44141340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fbb44137a30" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fbb44137a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44137db0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44136020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb441361b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb44136340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb441364d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb44136660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fbb44149810" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fbb44149810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44149b90"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44149d20"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44146020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441461b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44146340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fbb4413d8a0" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fbb4413d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4413dc20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4413ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4413c020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4413c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4413c340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4413c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fbb441448a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fbb441448a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44144c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44144db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44143020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441431b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44143340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fbb44139a30" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fbb44139a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44139db0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44138020"/>
        <function-ref name="disable" scoped="" ref="0x7fbb441381b0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb44138340"/>
        <function-ref name="enable" scoped="" ref="0x7fbb441384d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb44138660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fbb441418a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fbb441418a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44141c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44141db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44140020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441401b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44140340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fbb4413f8a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fbb4413f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4413fc20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4413fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4413e020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4413e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4413e340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4413e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fbb441468a0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fbb441468a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44146c20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44146db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44145020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb441451b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44145340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb441454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fbb4413c8a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fbb4413c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4413cc20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4413cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb4413b020"/>
        <function-ref name="edge" scoped="" ref="0x7fbb4413b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fbb4413b340"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb4413b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fbb44064610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fbb44064610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44064990"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44064b20"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44064cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb44064e40"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44057020"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb440571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fbb44065a30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbb44065a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44065db0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44064020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbb440641b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbb44064340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fbb44055610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fbb44055610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb44055990"/>
        <function-ref name="fired" scoped="" ref="0x7fbb44055b20"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44055cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fbb44055e40"/>
        <function-ref name="enable" scoped="" ref="0x7fbb44053020"/>
        <function-ref name="getValue" scoped="" ref="0x7fbb440531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fbb44056a70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbb44056a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb44056df0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb44055020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbb440551b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbb44055340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbb43c05e50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43c05e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c04410"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c045a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbb43c11160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbb43c11160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c114e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbb43c0be50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43c0be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c09210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbb43c03880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43c03880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c03c00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c03d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbb43bfa0a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbb43bfa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfa420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfa5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbb43c020a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbb43c020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c02420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c025b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbb43bef500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbb43bef500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bef880"/>
        <function-ref name="write" scoped="" ref="0x7fbb43befa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbb43bf1500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb43bf1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf1880"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbb43c0f490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43c0f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbb43bf7880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbb43bf7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf7c00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbb43bf2500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43bf2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf2880"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbb43c09e50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbb43c09e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c08210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbb43c08e50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43c08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c05210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbb43bfd880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43bfd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfdc00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbb43bfe0a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbb43bfe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfe420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfe5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbb43c02880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43c02880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c02c00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c02d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb43c13a90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43c13a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb43c13e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb43c12020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb43c121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbb43c0ee00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43c0ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbb43c0d490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbb43c0d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbb43bf6c80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb43bf6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf50a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbb43c0dbe0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43c0dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbb43bf2ce0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb43bf2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf10a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbb43c0e160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43c0e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbb43bf70a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbb43bf70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf7420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbb43c08670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43c08670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c089f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c08b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbb43c09670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43c09670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c099f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c09b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbb43c12ad0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43c12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c12e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbb43bf80a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43bf80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf8420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbb43bfa880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbb43bfa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfac00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbb43bf8880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43bf8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf8c00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbb43bf0ce0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43bf0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bef0a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bef230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbb43bf1ce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb43bf1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf00a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbb43bfe880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbb43bfe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfec00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbb43bf90a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbb43bf90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf9420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbb43bf3ce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbb43bf3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf20a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbb43c00880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43c00880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c00c00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c00d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbb43befce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbb43befce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43bee0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43bee230"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bee3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43bee550"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43bee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbb43c12480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb43c12480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c12800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbb43c0b670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbb43c0b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c0b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c0bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbb43c05670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43c05670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c059f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c05b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbb43bfc0a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43bfc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfc420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbb43c000a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43c000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c00420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c005b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbb43bfc880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43bfc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfcc00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbb43c04870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43c04870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c04bf0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c04d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbb43c117b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbb43c117b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c11b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbb43c030a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43c030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43c03420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43c035b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43c14e20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43c14e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43c131c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43c13350"/>
        <function-ref name="request" scoped="" ref="0x7fbb43c134e0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43c13670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43c13800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbb43c0c2f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43c0c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbb43c0b020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbb43c0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbb43bf3500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbb43bf3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf3880"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbb43bf5ce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43bf5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf30a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbb43c0e7b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43c0e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbb43bf5500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb43bf5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf5880"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbb43bf0500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbb43bf0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf0880"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbb43bfd0a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43bfd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bfd420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bfd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbb43bf9880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbb43bf9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf9c00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbb43c11e00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbb43c11e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbb43c0fae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43c0fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbb43bff0a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43bff0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bff420"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bff5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbb43c0c940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbb43c0c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43c0ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbb43bff880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbb43bff880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bffc00"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bffd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbb43bf60a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbb43bf60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bf6820"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bf69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbb43bee9b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43bee9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43beed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43bec020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bec1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43bec340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43bec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fbb44014630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fbb44014630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb440149b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb44014b40"/>
        <function-ref name="write" scoped="" ref="0x7fbb44014cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb44014e60"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb44013020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb44015680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb44015680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb44015a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb44015b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb44015d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fbb440138c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fbb440138c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44013c40"/>
        <function-ref name="write" scoped="" ref="0x7fbb44013dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fbb440116f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fbb440116f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44011a70"/>
        <function-ref name="write" scoped="" ref="0x7fbb44011c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb44018960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb44018960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44018ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb44018e70"/>
        <function-ref name="request" scoped="" ref="0x7fbb44015030"/>
        <function-ref name="granted" scoped="" ref="0x7fbb440151c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb44015350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fbb44010510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fbb44010510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb44010890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fbb43ffa680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43ffa680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43ffaa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43ffab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fbb4400bbb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fbb4400bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb4400a020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb4400a1b0"/>
        <function-ref name="write" scoped="" ref="0x7fbb4400a340"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb4400a4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb4400a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb4400f920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb4400f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb4400fca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb4400fe30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb4400c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fbb44004080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbb44004080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbb44004400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fbb44003020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fbb44003020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb440033a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb44003530"/>
        <function-ref name="isState" scoped="" ref="0x7fbb440036c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb44003850"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb440039e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb44003b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbb44006400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbb44006400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb44006780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb44006910"/>
        <function-ref name="request" scoped="" ref="0x7fbb44006aa0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb44006c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb44006dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fbb44008020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fbb44008020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb440083a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb44008530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fbb44008db0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fbb44008db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb44007180"/>
        <function-ref name="write" scoped="" ref="0x7fbb44007310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb44003df0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb44003df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb440021c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb44002350"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb440024e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb44002670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb44002800"/>
        <function-ref name="get" scoped="" ref="0x7fbb44002990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb44002b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb43ffc1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb44002cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb44002e40"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb43ffc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb4400c810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb4400c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb4400cb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb4400cd20"/>
        <function-ref name="request" scoped="" ref="0x7fbb4400b020"/>
        <function-ref name="granted" scoped="" ref="0x7fbb4400b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb4400b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fbb43ff6120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fbb43ff6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb43ff64a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb43ff6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fbb44007ba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fbb44007ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb44006020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbb43f9b770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb43f9b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb43f9baf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb43f9bc80"/>
        <function-ref name="isState" scoped="" ref="0x7fbb43f9be10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb43f98020"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb43f981b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb43f98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbb43f97280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb43f97280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb43f97600"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb43f97790"/>
        <function-ref name="isState" scoped="" ref="0x7fbb43f97920"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb43f97ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb43f97c40"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb43f97dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb43f92020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb43f92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb43f923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbb43f92b70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb43f92b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb43f91020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb43f911b0"/>
        <function-ref name="isState" scoped="" ref="0x7fbb43f91340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb43f914d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb43f91660"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb43f917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbb43c3c020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43c3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43c3c3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43c3c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbb43f798f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbb43f798f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbb43f79c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43f7ac40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43f7ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43f79020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43f791b0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43f79340"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43f794d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43f79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbb42f868f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42f868f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbb42f86c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb42f86e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbb42f842b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbb42f842b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb42f84630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb42f847c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fbb42f84a50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb42f84a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbb42f84dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbb42f850c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbb42f850c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbb42f85440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb42f88c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb42f88c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb42f86020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb42f861b0"/>
        <function-ref name="request" scoped="" ref="0x7fbb42f86340"/>
        <function-ref name="granted" scoped="" ref="0x7fbb42f864d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb42f86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fbb42f856d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb42f856d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fbb42f85a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fbb42f85be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fbb42f85d70"/>
        <function-ref name="write" scoped="" ref="0x7fbb42f84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fbb43f145e0" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43f145e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbb43f14960"/>
        <function-ref name="configure" scoped="" ref="0x7fbb43f14af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbb43f10510" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43f10510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43f10890"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43f10a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fbb43f0e600" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb43f0e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbb43f0e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbb43f14dd0" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbb43f14dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbb43f13180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fbb43f0f370" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fbb43f0f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43f0f6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43f0f880"/>
        <function-ref name="request" scoped="" ref="0x7fbb43f0fa10"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43f0fba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43f0fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43f1aa20" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43f1aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43f1ada0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43f15020"/>
        <function-ref name="request" scoped="" ref="0x7fbb43f151b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43f15340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43f154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fbb43f13480" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb43f13480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fbb43f13800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fbb43f13990"/>
        <function-ref name="splitRead" scoped="" ref="0x7fbb43f13b20"/>
        <function-ref name="write" scoped="" ref="0x7fbb43f13cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fbb43f096a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbb43f096a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43f09a20"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43f09bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fbb43e99c40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43e99c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbb43e97020"/>
        <function-ref name="configure" scoped="" ref="0x7fbb43e971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbb43e96700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbb43e96700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43e96aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43e96c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fbb43e95e00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbb43e95e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbb43e941c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbb43e97440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbb43e97440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbb43e977c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fbb43e94490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fbb43e94490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbb43e94810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbb43e949a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbb43e94b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbb43e94cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbb43e94e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbb43e93020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbb43e931b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbb43e93340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbb43e934d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbb43e93660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbb43e937f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbb43e93980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbb43e93b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbb43e93da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbb43e92020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbb43e921b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbb43e92340"/>
        <function-ref name="isUart" scoped="" ref="0x7fbb43e924d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbb43e92660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbb43e927f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbb43e92980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbb43e92b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbb43e92ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbb43e92e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb43e91020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbb43e913b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbb43e91540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbb43e916d0"/>
        <function-ref name="tx" scoped="" ref="0x7fbb43e91860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbb43e919f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbb43e91b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbb43e91d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbb43e90020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbb43e901b0"/>
        <function-ref name="rx" scoped="" ref="0x7fbb43e90340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbb43e904d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbb43e90660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbb43e907f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbb43e90980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbb43e90b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb43e8f5a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb43e8f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb43e8f920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb43e8fab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb43e8fc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb43e8fdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb43e8e020"/>
        <function-ref name="get" scoped="" ref="0x7fbb43e8e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb43e8e340"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb43e8e980"/>
        <function-ref name="set" scoped="" ref="0x7fbb43e8e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb43e8e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb43e8e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fbb43e95060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fbb43e95060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43e95400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43e95590"/>
        <function-ref name="request" scoped="" ref="0x7fbb43e95720"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43e958b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43e95a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43e9ae80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43e9ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43e99240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43e993d0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43e99560"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43e996f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43e99880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fbb43e97a50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fbb43e97a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fbb43e97dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fbb43e96020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fbb43e961b0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43e96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fbb43e90de0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbb43e90de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43e8f180"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43e8f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fbb43e8ec50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fbb43e8ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb43e8d020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb43e8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fbb43e7e8a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbb43e7e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb43e7ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fbb43e813b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbb43e813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43e81730"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43e818c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fbb43e88860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbb43e88860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbb43e88be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbb43e88d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbb43e85020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbb43e851b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbb43e85340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbb43e854d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbb43e85660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbb43e857f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbb43e85980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbb43e85b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbb43e85ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbb43e85e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbb43e84020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbb43e842b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbb43e84440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbb43e845d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbb43e84760"/>
        <function-ref name="isUart" scoped="" ref="0x7fbb43e848f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbb43e84a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbb43e84c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbb43e84da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbb43e83020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbb43e831b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbb43e83340"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb43e834d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbb43e83860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbb43e839f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbb43e83b80"/>
        <function-ref name="tx" scoped="" ref="0x7fbb43e83d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbb43e82020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbb43e821b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbb43e82340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbb43e824d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbb43e82660"/>
        <function-ref name="rx" scoped="" ref="0x7fbb43e827f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbb43e82980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbb43e82b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbb43e82ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbb43e82e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbb43e81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fbb43e44670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fbb43e44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43e449f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43e44b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43e44d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43e43020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43e431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43e43340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43e434d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43e43660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43e437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43e43980"/>
        <function-ref name="set" scoped="" ref="0x7fbb43e43b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43e43ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43e43e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43e42120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43e422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbb43e77dc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbb43e77dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43e76180"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43e76310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fbb43e42670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fbb43e42670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43e429f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43e42b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43e42d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43e41020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43e411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43e41340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43e414d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43e41660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43e417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43e41980"/>
        <function-ref name="set" scoped="" ref="0x7fbb43e41b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43e41ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43e41e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43e40120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43e402b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fbb43e40670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fbb43e40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43e409f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43e40b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43e40d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43e3f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43e3f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43e3f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43e3f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43e3f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43e3f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43e3f980"/>
        <function-ref name="set" scoped="" ref="0x7fbb43e3fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43e3fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43e3fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43e3e120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43e3e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fbb43e7b020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fbb43e7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbb43e7b3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbb43e7b530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbb43e7b6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbb43e7b850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbb43e7b9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbb43e7bb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbb43e7bd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbb43e7a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbb43e7a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbb43e7a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbb43e7a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbb43e7a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbb43e7a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbb43e7aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbb43e7ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbb43e7ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbb43e79020"/>
        <function-ref name="isUart" scoped="" ref="0x7fbb43e791b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbb43e79340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbb43e794d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbb43e79660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbb43e797f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbb43e79980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbb43e79b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb43e79ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbb43e78220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbb43e783b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbb43e78540"/>
        <function-ref name="tx" scoped="" ref="0x7fbb43e786d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbb43e78860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbb43e789f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbb43e78b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbb43e78d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbb43e77020"/>
        <function-ref name="rx" scoped="" ref="0x7fbb43e771b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbb43e77340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbb43e774d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbb43e77660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbb43e777f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbb43e77980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fbb43e4d5b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fbb43e4d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbb43e4d930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbb43e4dac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbb43e4dc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbb43e4dde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbb43e74020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbb43e741b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbb43e74340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbb43e744d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb43e74660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbb43e747f0"/>
        <function-ref name="getData" scoped="" ref="0x7fbb43e74980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbb43e74b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbb43e74ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbb43e73020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbb43e731b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fbb43e73340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbb43e734d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbb43e73660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbb43e737f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbb43e73980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbb43e73b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbb43e73ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbb43e73e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbb43e4c020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbb43e4c1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbb43e4c540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbb43e4c6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbb43e4c860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbb43e4c9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbb43e4cb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbb43e4cd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbb43e4b020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbb43e4b1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbb43e4b340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbb43e4b4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbb43e4b660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbb43e4b7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbb43e4b980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbb43e4bb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbb43e4bca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbb43e4be30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbb43e4a020"/>
        <function-ref name="setData" scoped="" ref="0x7fbb43e4a1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbb43e4a340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbb43e4a4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbb43e4a660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbb43e4a7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbb43e4a980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbb43e4ab10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbb43e49420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbb43e495b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbb43e49740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbb43e498d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbb43e49a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbb43e49bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbb43e49d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbb43e48020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbb43e481b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbb43e48340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fbb43e46670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fbb43e46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43e469f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43e46b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43e46d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43e45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43e451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43e45340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43e454d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43e45660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43e457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43e45980"/>
        <function-ref name="set" scoped="" ref="0x7fbb43e45b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43e45ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43e45e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43e44120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43e442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbb43e76750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43e76750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb43e76ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fbb43e48700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fbb43e48700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43e48a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43e48c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43e48da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43e47020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43e471b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43e47340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43e474d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43e47660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43e477f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43e47980"/>
        <function-ref name="set" scoped="" ref="0x7fbb43e47b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43e47ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43e47e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43e46120"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43e462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbb42f7c2c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42f7c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbb42f7c640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb42f7c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fbb42f73440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbb42f73440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb42f737c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbb42f6c760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb42f6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbb42f6cae0"/>
        <function-ref name="configure" scoped="" ref="0x7fbb42f6cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fbb42f73a50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbb42f73a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbb42f73dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbb42f72020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbb42f721b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbb42f72340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbb42f724d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbb42f72660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbb42f727f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbb42f72980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb42f72b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbb42f72ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fbb42f72e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbb42f71020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbb42f711b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbb42f71440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbb42f715d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fbb42f71760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbb42f718f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbb42f71a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbb42f71c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbb42f71da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbb42f70020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbb42f701b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbb42f70340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbb42f704d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbb42f70660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbb42f709f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbb42f70b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbb42f70d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbb42f6f020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbb42f6f1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbb42f6f340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbb42f6f4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbb42f6f660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbb42f6f7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbb42f6f980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbb42f6fb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbb42f6fca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbb42f6fe30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbb42f6e020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbb42f6e1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbb42f6e340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbb42f6e4d0"/>
        <function-ref name="setData" scoped="" ref="0x7fbb42f6e660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbb42f6e7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbb42f6e980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbb42f6eb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbb42f6eca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbb42f6ee30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbb42f6d020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbb42f6d5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbb42f6d740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbb42f6d8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbb42f6da60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbb42f6dbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbb42f6dd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbb42f6c020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbb42f6c1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbb42f6c340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbb42f6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fbb42f74c10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbb42f74c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb42f73020"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb42f731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb42f7d640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb42f7d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb42f7d9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb42f7db50"/>
        <function-ref name="request" scoped="" ref="0x7fbb42f7dce0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb42f7de70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb42f7c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fbb42f7b2b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbb42f7b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbb42f7b630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbb42f7b7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbb42f7b950"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbb42f7bae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbb42f7bc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbb42f7be00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbb42f79020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbb42f791b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbb42f79340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbb42f794d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbb42f79660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbb42f797f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbb42f79980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbb42f79c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbb42f79da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbb42f76020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbb42f761b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbb42f76340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbb42f764d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbb42f76660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbb42f767f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbb42f76980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbb42f76b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbb42f76ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb42f76e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbb42f75220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbb42f753b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbb42f75540"/>
        <function-ref name="tx" scoped="" ref="0x7fbb42f756d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbb42f75860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbb42f759f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbb42f75b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbb42f75d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbb42f74020"/>
        <function-ref name="rx" scoped="" ref="0x7fbb42f741b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbb42f74340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbb42f744d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbb42f74660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbb42f747f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbb42f74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbb42f7ca60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb42f7ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbb42f7cde0"/>
        <function-ref name="userId" scoped="" ref="0x7fbb42f7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbb43d9d8a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb43d9d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbb43d9dc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb43d9ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbb43d9a020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43d9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbb43d9a3a0"/>
        <function-ref name="configure" scoped="" ref="0x7fbb43d9a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbb43da2a80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbb43da2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43da2e00"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43d9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43d9e5c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43d9e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43d9e940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43d9ead0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43d9ec60"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43d9edf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43d9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbb43d9f9a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43d9f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb43d9fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbb43d9b130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d9b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbb43d9b4b0"/>
        <function-ref name="userId" scoped="" ref="0x7fbb43d9b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fbb43d854b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d854b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbb43d85830"/>
        <function-ref name="userId" scoped="" ref="0x7fbb43d859c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbb43d985c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbb43d985c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43d98960"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43d98af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fbb43d87e70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fbb43d87e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb43d85220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbb43d87020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbb43d87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb43d873c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fbb43d87690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fbb43d87690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbb43d87a10"/>
        <function-ref name="txDone" scoped="" ref="0x7fbb43d87ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbb43d0cbf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb43d0cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbb43d0b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb43d0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbb43d0a930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb43d0a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbb43d0acd0"/>
        <function-ref name="configure" scoped="" ref="0x7fbb43d0ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fbb43d0b400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbb43d0b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43d0b780"/>
        <function-ref name="requested" scoped="" ref="0x7fbb43d0b910"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43d0baa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43d0bc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb43d0bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43d0de60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43d0de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43d0c230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43d0c3c0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43d0c550"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43d0c6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43d0c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbb43d0a060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb43d0a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbb43d0a3e0"/>
        <function-ref name="userId" scoped="" ref="0x7fbb43d0a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb42f02140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb42f02140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb42f024c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fbb42f02750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fbb42f02750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbb42f02ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbb42f02c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbb42f02df0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbb42f01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbb42efe850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbb42efe850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbb42efebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb42efed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbb42efc590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbb42efc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbb42efc930"/>
        <function-ref name="configure" scoped="" ref="0x7fbb42efcac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbb42efcd50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbb42efcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbb42efb100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbb42efb290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbb42efb420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbb42efb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fbb42efd020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbb42efd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb42efd3a0"/>
        <function-ref name="requested" scoped="" ref="0x7fbb42efd530"/>
        <function-ref name="granted" scoped="" ref="0x7fbb42efd6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb42efd850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbb42efd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb42efb800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb42efb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb42efbb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb42efbd10"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb42efa020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb42efa1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb42efa340"/>
        <function-ref name="get" scoped="" ref="0x7fbb42efa4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb42efa660"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb42efaca0"/>
        <function-ref name="set" scoped="" ref="0x7fbb42efa980"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb42efa7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb42efab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb42eff970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb42eff970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb42effd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb42efe020"/>
        <function-ref name="request" scoped="" ref="0x7fbb42efe1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb42efe340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb42efe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbb42efdc30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbb42efdc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbb42efc020"/>
        <function-ref name="userId" scoped="" ref="0x7fbb42efc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fbb42ef9020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fbb42ef9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb42ef93a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb42ef9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fbb43d02880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbb43d02880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbb43d02c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbb43d02d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbb43cff020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbb43cff1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbb43cff340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbb43cff4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbb43cff660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbb43cff7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb43cff980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbb43cffb10"/>
        <function-ref name="getData" scoped="" ref="0x7fbb43cffca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbb43cffe30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbb43cfe020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbb43cfe2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbb43cfe440"/>
        <function-ref name="getIV" scoped="" ref="0x7fbb43cfe5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbb43cfe760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbb43cfe8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbb43cfea80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbb43cfec10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbb43cfeda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbb43cfd020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbb43cfd1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbb43cfd340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbb43cfd4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbb43cfd860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbb43cfd9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbb43cfdb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbb43cfdd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbb43cfc020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbb43cfc1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbb43cfc340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbb43cfc4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbb43cfc660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbb43cfc7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbb43cfc980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbb43cfcb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbb43cfcca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbb43cfce30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbb43cfb020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbb43cfb1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbb43cfb340"/>
        <function-ref name="setData" scoped="" ref="0x7fbb43cfb4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbb43cfb660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbb43cfb7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbb43cfb980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbb43cfbb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbb43cfbca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbb43cfbe30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbb43cfa420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbb43cfa5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbb43cfa740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbb43cfa8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbb43cfaa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbb43cfabf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbb43cfad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbb43cf9020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbb43cf91b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbb43cf9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fbb43cef250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fbb43cef250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbb43cef5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbb43cef760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbb43cef8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbb43cefa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbb43cefc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbb43cefda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbb43cee020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbb43cee1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbb43cee340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbb43cee4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbb43cee660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbb43cee7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbb43cee980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbb43ceec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbb43ceeda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbb43ced020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbb43ced1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbb43ced340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbb43ced4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbb43ced660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbb43ced7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbb43ced980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbb43cedb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbb43cedca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb43cede30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbb43cec220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbb43cec3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbb43cec540"/>
        <function-ref name="tx" scoped="" ref="0x7fbb43cec6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbb43cec860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbb43cec9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbb43cecb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbb43cecd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbb43ceb020"/>
        <function-ref name="rx" scoped="" ref="0x7fbb43ceb1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbb43ceb340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbb43ceb4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbb43ceb660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbb43ceb7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbb43ceb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fbb43ce9cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fbb43ce9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43ce80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43ce8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43ce83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43ce8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43ce86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43ce8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43ce8a00"/>
        <function-ref name="get" scoped="" ref="0x7fbb43ce8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43ce8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43ce7020"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ce71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43ce7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43ce74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43ce7760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43ce78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fbb43cf6430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fbb43cf6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbb43cf67b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbb43cf6940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbb43cf6ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbb43cf6c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbb43cf6df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbb43cf5020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbb43cf51b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbb43cf5340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb43cf54d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbb43cf5660"/>
        <function-ref name="getData" scoped="" ref="0x7fbb43cf57f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbb43cf5980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbb43cf5b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbb43cf5da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbb43cf4020"/>
        <function-ref name="getIV" scoped="" ref="0x7fbb43cf41b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbb43cf4340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbb43cf44d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbb43cf4660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbb43cf47f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbb43cf4980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbb43cf4b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbb43cf4ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbb43cf4e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbb43cf3020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbb43cf33b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbb43cf3540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbb43cf36d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbb43cf3860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbb43cf39f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbb43cf3b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbb43cf3d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbb43cf2020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbb43cf21b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbb43cf2340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbb43cf24d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbb43cf2660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbb43cf27f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbb43cf2980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbb43cf2b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbb43cf2ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbb43cf2e30"/>
        <function-ref name="setData" scoped="" ref="0x7fbb43cf1020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbb43cf11b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbb43cf1340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbb43cf14d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbb43cf1660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbb43cf17f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbb43cf1980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbb43cf0020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbb43cf01b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbb43cf0340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbb43cf04d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbb43cf0660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbb43cf07f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbb43cf0980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbb43cf0b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbb43cf0ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbb43cf0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fbb43cebd40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fbb43cebd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43cea0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43cea270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43cea400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43cea590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43cea720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43cea8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43ceaa40"/>
        <function-ref name="get" scoped="" ref="0x7fbb43ceabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43cead60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43ce9020"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ce91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43ce9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43ce94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43ce9760"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43ce98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbb43bd4c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43bd4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd3210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbb43bdfda0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbb43bdfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bde180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbb43bd8b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43bd8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd7020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbb43bd2670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43bd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd29f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbb43bcbe50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbb43bcbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bca210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbb43bd2e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbb43bd2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd1210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbb43bbe2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbb43bbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bbe670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bbe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbb43bc12f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb43bc12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc1670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbb43bdd120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43bdd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbb43bc6670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbb43bc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc69f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbb43bc22f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43bc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc2670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbb43bd7c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbb43bd7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd6020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbb43bd6c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43bd6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd4020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbb43bcc670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43bcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcc9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbb43bcfe50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbb43bcfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcd210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbb43bd1670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43bd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd19f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb43be0760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43be0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb43be0ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb43be0c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb43be0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbb43bdcaa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43bdcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbb43bda120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbb43bda120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bda5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbb43bc5a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb43bc5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc5df0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbb43bda870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43bda870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbb43bc2ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb43bc2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc2e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbb43bdddc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43bdddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbb43bc8e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbb43bc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc6210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbb43bd6480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43bd6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd6800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbb43bd7480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43bd7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd7800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbb43bdf750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43bdf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdfad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbb43bc9e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43bc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc8210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbb43bca670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbb43bca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bca9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbb43bc8670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43bc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc89f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbb43bbfad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43bbfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bbfe50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbb43bc1ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb43bc1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc1e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbb43bcd670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbb43bcd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbb43bcae50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbb43bcae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc9210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbb43bc3ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbb43bc3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc3e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbb43bd0670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43bd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd09f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbb43bbead0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbb43bbead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43bbee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43bbd020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bbd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43bbd340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43bbd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbb43bdf100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb43bdf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdf480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbb43bd8370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbb43bd8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd86f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbb43bd4480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43bd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd4800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbb43bcce50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43bcce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcb210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbb43bd1e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43bd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd0210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbb43bcb670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43bcb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbb43bd3670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43bd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd39f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbb43bde450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbb43bde450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bde7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbb43bd3e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43bd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bd2210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43be1a80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43be1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43be1e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43be0020"/>
        <function-ref name="request" scoped="" ref="0x7fbb43be01b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43be0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43be04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbb43bd9020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43bd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbb43bd9cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbb43bd9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bd80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbb43bc32f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbb43bc32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc3670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbb43bc4ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43bc4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc4e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbb43bdc450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43bdc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbb43bc42f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb43bc42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc4670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbb43bbf2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbb43bbf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bbf670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bbf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbb43bcde50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43bcde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcc210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbb43bc9670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbb43bc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc99f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbb43bdeaa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbb43bdeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bdee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbb43bdd770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43bdd770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bddaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbb43bd0e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43bd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcf210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbb43bd9670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbb43bd9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bd99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbb43bcf670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbb43bcf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bcf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bcfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbb43bc6e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbb43bc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bc5610"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bc57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbb43bbd7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43bbd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43bbdb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43bbdcb0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bbde40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43bbc020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43bbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbb43ba8c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43ba8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba7210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbb43bb3da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbb43bb3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbb43babb50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43babb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43baa020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43baa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbb43ba6670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43ba6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba69f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbb43b9fe50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbb43b9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9d210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbb43ba6e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbb43ba6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba4210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbb43b922f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbb43b922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b92670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b92800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbb43b942f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb43b942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b94670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b94800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbb43bb0120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43bb0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbb43b9a670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbb43b9a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbb43b952f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43b952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b95670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b95800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbb43baac60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbb43baac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba9020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbb43ba9c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43ba9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba8020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbb43ba0670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43ba0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba09f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbb43ba2e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbb43ba2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba1210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbb43ba4670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43ba4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba49f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb43bb4760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43bb4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb43bb4ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb43bb4c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb43bb4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbb43bafaa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43bafaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bafe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbb43bae120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbb43bae120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bae5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbb43b99a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb43b99a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b99df0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbb43bae870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43bae870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43baebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbb43b95ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb43b95ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b95e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbb43bb0dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43bb0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43baf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbb43b9be50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbb43b9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9a210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbb43ba9480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43ba9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba9800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbb43baa480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43baa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43baa800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43baa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbb43bb3750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43bb3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbb43b9ce50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43b9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9b210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbb43b9d670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbb43b9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbb43b9b670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43b9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbb43b93ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43b93ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b93e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbb43b94ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb43b94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b94e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbb43ba1670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbb43ba1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba19f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbb43b9de50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbb43b9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9c210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbb43b96ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbb43b96ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b96e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbb43ba3670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43ba3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba39f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbb43b92ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbb43b92ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43b92e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43b91020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b911b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43b91340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43b914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbb43bb3100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb43bb3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbb43bab370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbb43bab370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43bab6f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43bab880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbb43ba8480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43ba8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba8800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbb43ba0e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43ba0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9f210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbb43ba4e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43ba4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba3210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbb43b9f670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43b9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbb43ba7670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43ba7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba79f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbb43bb1450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbb43bb1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbb43ba7e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43ba7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba6210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43bb59e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43bb59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43bb5d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43bb4020"/>
        <function-ref name="request" scoped="" ref="0x7fbb43bb41b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43bb4340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43bb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbb43bad020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43bad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbb43badcc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbb43badcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bab0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbb43b962f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbb43b962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b96670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b96800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbb43b98ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbb43b98ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b98e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbb43baf450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43baf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43baf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbb43b982f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb43b982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b98670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbb43b932f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbb43b932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b93670"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b93800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbb43ba1e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43ba1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba0210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbb43b9c670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbb43b9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbb43bb1aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbb43bb1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbb43bb0770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43bb0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bb0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbb43ba3e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43ba3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba2210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbb43bad670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbb43bad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43bad9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbb43ba2670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbb43ba2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ba29f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ba2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbb43b9ae50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbb43b9ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b99610"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b997a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbb43b917a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43b917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43b91b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43b91cb0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b91e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43b8f020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43b8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fbb43b88b30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb43b88b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fbb43b85020"/>
        <function-ref name="changed" scoped="" ref="0x7fbb43b851b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fbb43b85340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fbb43b854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fbb43b87d30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb43b87d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fbb43b710e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fbb43b6c310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbb43b6c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fbb43b6c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fbb43b69880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b69880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b69c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fbb43b5e020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fbb43b54bd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fbb43b54bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b58020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fbb43b58530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fbb43b58530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb43b588b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43b58a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fbb43b59140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fbb43b59140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b594c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fbb43b5dc50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fbb43b5dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b44020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fbb43b44540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fbb43b44540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43b448c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43b44a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43b44be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43b44d70"/>
        <function-ref name="get" scoped="" ref="0x7fbb43b43020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43b431b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43b43340"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43b434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fbb43b3b950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b3b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fbb43b3e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fbb43b40150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fbb43b40150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43b404d0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43b40660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fbb43b409f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fbb43b409f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43b40d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43b3f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43b3f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43b3f340"/>
        <function-ref name="get" scoped="" ref="0x7fbb43b3f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43b3f660"/>
        <function-ref name="set" scoped="" ref="0x7fbb43b3f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43b3f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fbb43b42ca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b42ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fbb43b1aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fbb43b18a90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fbb43b18a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fbb43b178d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbb43b08020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb43b08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43b08e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb43b06800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb43b06340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb43b06cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fbb43b02530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fbb43b02530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43b013d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb43b01d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb43b01890"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb43b00260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbb43afb020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb43afb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb43afb3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb43afb530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb43afb6c0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43afb850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb43afb9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb43afbb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb43afbd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb43afa020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb43afa1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb43afa340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb43afa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbb43afee50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb43afee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44933d70"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbb44932180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43afdca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb43afc670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb43afc1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb43afcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fbb43af8590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fbb43af8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43af8910"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43af8aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43af8c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43af8dc0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43af5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43af51b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43af5340"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43af54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbb43af3c50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbb43af3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43af2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43af21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbb43af2340"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43af24d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43af2660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbb43af27f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43af2980"/>
        <function-ref name="get" scoped="" ref="0x7fbb43af2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbb43af2ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbb43af2e30"/>
        <function-ref name="set" scoped="" ref="0x7fbb43af1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbb43af11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbb43af1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbb43af15d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43af1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbb43af49e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbb43af49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43af4d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43af3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43af31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43af3340"/>
        <function-ref name="get" scoped="" ref="0x7fbb43af34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43af3660"/>
        <function-ref name="set" scoped="" ref="0x7fbb43af37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43af3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbb43af6a20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbb43af6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb43af6da0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43aec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbb43addcb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb43addcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb43adc0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb43adc230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb43adc3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb43adc550"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb43adc6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb43adc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fbb43ad9990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbb43ad9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbb43ad9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fbb43add020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbb43add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43add3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43add530"/>
        <function-ref name="modify" scoped="" ref="0x7fbb43add6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43add850"/>
        <function-ref name="resend" scoped="" ref="0x7fbb43add9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbb43ae06c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbb43ae06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb43ae0a40"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43ae0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fbb43adb150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fbb43adb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbb43adb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbb43acf970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb43acf970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb43acfcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb43acfe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb43ace030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb43ace1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb43ace350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb43ace4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fbb43ac7950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbb43ac7950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb43ac5020"/>
        <function-ref name="clear" scoped="" ref="0x7fbb43ac5750"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb43ac6780"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ac5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fbb43aae020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43aae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43aae3a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43aae530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fbb43aae890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb43aae890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43aaec10"/>
        <function-ref name="write" scoped="" ref="0x7fbb43aaeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fbb43ace900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbb43ace900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbb43acec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fbb43ab1530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43ab1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43ab18b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fbb43ac2880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fbb43ac2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fbb43ac2c00"/>
        <function-ref name="disable" scoped="" ref="0x7fbb43ac2d90"/>
        <function-ref name="captured" scoped="" ref="0x7fbb43abf020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fbb43abf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fbb43acdae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fbb43acdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43ac9390"/>
        <function-ref name="fired" scoped="" ref="0x7fbb43acb360"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb43acbce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb43acb820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb43ac9850"/>
        <function-ref name="start" scoped="" ref="0x7fbb43acc970"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43acce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbb43ac9d00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43ac9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb43ac80a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb43ac8230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb43ac83c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb43ac8550"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb43ac86e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb43ac8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fbb43ab3550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb43ab3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ab38d0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ab3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fbb43ab3e00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43ab3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ab21c0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ab2350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fbb43aa7d40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb43aa7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb43aaa0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fbb43aaa270"/>
        <function-ref name="sfd" scoped="" ref="0x7fbb43aaa400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb43ad0bc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb43ad0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43acf020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43acf1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fbb43acf340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43acf4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fbb43acf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fbb43ab5d10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43ab5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb43ab40e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb43ab4270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb43ab4400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fbb43ab1c60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43ab1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43ab0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fbb43ab9820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbb43ab9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43ab9ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43ab9d30"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43ab7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43ab71b0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43ab7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43ab74d0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ab7660"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43ab77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb43ad2c60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb43ad2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb43ad0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb43ac8bb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb43ac8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43ac7020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb43ac71b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb43ac7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fbb43ababe0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb43ababe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43ac2020"/>
        <function-ref name="isSet" scoped="" ref="0x7fbb43ac21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43ac2340"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ac24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fbb43ab03e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43ab03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43ab0960"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ab0af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbb43ab5020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbb43ab5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43ab53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43ab5530"/>
        <function-ref name="request" scoped="" ref="0x7fbb43ab56c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43ab5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43ab59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fbb43abf500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fbb43abf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43abf980"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43abfb10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43abfca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43abfe30"/>
        <function-ref name="get" scoped="" ref="0x7fbb43ab9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43ab91b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ab9340"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43ab94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fbb43aad130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb43aad130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43aad4b0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43aad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fbb43aad9c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbb43aad9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43aadd40"/>
        <function-ref name="write" scoped="" ref="0x7fbb43aac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fbb43ab26d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb43ab26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43ab2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fbb43ab7b40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fbb43ab7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb43ab6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb43ab61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb43ab6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb43ab64d0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43ab6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb43ab67f0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43ab6980"/>
        <function-ref name="clr" scoped="" ref="0x7fbb43ab6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb43aaa6c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb43aaa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb43aaaa40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb43aaabd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb43aaad60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb43aa9020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb43aa91b0"/>
        <function-ref name="get" scoped="" ref="0x7fbb43aa9340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb43aa94d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb43aa9b10"/>
        <function-ref name="set" scoped="" ref="0x7fbb43aa9660"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb43aa97f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb43aa9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fbb43aaf5e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43aaf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43aaf960"/>
        <function-ref name="write" scoped="" ref="0x7fbb43aafaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbb43ad0320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbb43ad0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb43ad06a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43ad0830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fbb43ab4780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbb43ab4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb43ab4b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb43ab4c90"/>
        <function-ref name="write" scoped="" ref="0x7fbb43ab4e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb43ab3020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb43ab31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fbb43ab2de0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbb43ab2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43ab1180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fbb43ab0e80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbb43ab0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43aaf220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fbb43acd0f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fbb43acd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbb43acd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbb43a0dc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb43a0dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0c210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbb43a17020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbb43a17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbb43a10c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb43a10c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0f020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbb43a0b670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb43a0b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbb43a04e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbb43a04e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a02210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbb43a0be50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbb43a0be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a09210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbb439f72f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbb439f72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439f7670"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbb439f92f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb439f92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439f9670"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbb43a15370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbb43a15370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a156f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbb439ff670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbb439ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439ff9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb439ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbb439fa2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb439fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fa670"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbb43a0fc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbb43a0fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0e020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbb43a0ec60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb43a0ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0d020"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbb43a05670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbb43a05670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a059f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a05b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbb43a07e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbb43a07e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a06210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbb43a09670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbb43a09670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a099f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a09b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb43a198f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb43a198f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb43a19c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb43a19e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb43a18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbb43a14d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb43a14d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbb43a13370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbb43a13370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbb439fea70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb439fea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fedf0"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbb43a13ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbb43a13ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a13e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbb439faad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb439faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fae50"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbb43a14060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb43a14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a143e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbb43a00e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbb43a00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439ff210"/>
        <function-ref name="write" scoped="" ref="0x7fbb439ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbb43a0e480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb43a0e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0e800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbb43a0f480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb43a0f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0f800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbb43a18940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbb43a18940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a18cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbb43a01e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb43a01e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a00210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbb43a02670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbb43a02670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a029f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a02b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbb43a00670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb43a00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a009f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a00b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbb439f8ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbb439f8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439f8e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbb439f9ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb439f9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439f9e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbb43a06670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbb43a06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a069f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a06b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbb43a02e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbb43a02e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a01210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbb439fbad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbb439fbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fbe50"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbb43a08670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbb43a08670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a089f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a08b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbb439f7ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbb439f7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb439f7e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb439f6020"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb439f6340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb439f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbb43a182f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb43a182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a18670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbb43a10490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbb43a10490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a10810"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a109a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbb43a0d480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb43a0d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0d800"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbb43a05e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbb43a05e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a04210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbb43a09e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbb43a09e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a08210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbb43a04670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbb43a04670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a049f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a04b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbb43a0c670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbb43a0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbb43a17670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbb43a17670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a179f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbb43a0ce50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb43a0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a0b210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a0b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43a1ac30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43a1ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43a19020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43a191b0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43a19340"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43a194d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43a19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbb43a12160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbb43a12160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a124e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbb43a12e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbb43a12e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a101c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbb439fb2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbb439fb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fb670"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbb439fdad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbb439fdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fde50"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbb43a146b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb43a146b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a14a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbb439fd2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb439fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fd670"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbb439f82f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbb439f82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439f8670"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbb43a06e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb43a06e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a05210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbb43a01670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbb43a01670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a019f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a01b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbb43a17cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbb43a17cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a150a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbb43a159c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbb43a159c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a15d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbb43a08e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbb43a08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a07210"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbb43a127b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbb43a127b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb43a12b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbb43a07670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbb43a07670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb43a079f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb43a07b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbb439ffe50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbb439ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439fe610"/>
        <function-ref name="write" scoped="" ref="0x7fbb439fe7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbb439f67a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbb439f67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb439f6b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb439f6cb0"/>
        <function-ref name="write" scoped="" ref="0x7fbb439f6e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb439f4020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb439f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fbb439e9df0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb439e9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb439e51c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fbb439e5350"/>
        <function-ref name="sfd" scoped="" ref="0x7fbb439e54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb439e57c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb439e57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb439e5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fbb439e4020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fbb439e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbb439e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbb439e95c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbb439e95c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb439e9940"/>
        <function-ref name="stop" scoped="" ref="0x7fbb439e9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fbb439dd380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fbb439dd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb439dd700"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb439dd890"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb439dda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb439ddbb0"/>
        <function-ref name="get" scoped="" ref="0x7fbb439ddd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb439dc020"/>
        <function-ref name="set" scoped="" ref="0x7fbb439dc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb439dc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fbb439d6b90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbb439d6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbb439d4020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbb439d41b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbb439d4340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbb439d44d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbb439d4660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbb439d47f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbb439d4980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbb439d4b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbb439d4ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbb439d4e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbb439d3020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbb439d31b0"/>
        <function-ref name="sync" scoped="" ref="0x7fbb439d3340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbb439d35d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbb439d3760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fbb439be9d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fbb439be9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb439bed50"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb439bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fbb439d3d70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbb439d3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb439d1330"/>
        <function-ref name="clear" scoped="" ref="0x7fbb439d1a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb439d2ba0"/>
        <function-ref name="set" scoped="" ref="0x7fbb439d0210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fbb439dc6b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fbb439dc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb439dca30"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb439dcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb439dcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb439db020"/>
        <function-ref name="get" scoped="" ref="0x7fbb439db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb439db340"/>
        <function-ref name="set" scoped="" ref="0x7fbb439db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbb439db660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fbb439cecb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb439cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439cd0a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb439cd230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fbb439cd590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb439cd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439cd910"/>
        <function-ref name="write" scoped="" ref="0x7fbb439cdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fbb439cc6d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbb439cc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439cca50"/>
        <function-ref name="write" scoped="" ref="0x7fbb439ccbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbb439d7330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb439d7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb439d76b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb439d7840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb439d79d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb439d7b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb439d7cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb439d7e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fbb439e0550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fbb439e0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb439e08d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fbb439e0a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fbb439e0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fbb439d83a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbb439d83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb439d8720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fbb439de020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbb439de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbb439de3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbb439de530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbb439de6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbb439de850"/>
        <function-ref name="get" scoped="" ref="0x7fbb439de9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbb439deb70"/>
        <function-ref name="set" scoped="" ref="0x7fbb439ded00"/>
        <function-ref name="clr" scoped="" ref="0x7fbb439dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fbb439cb020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb439cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439cb3a0"/>
        <function-ref name="write" scoped="" ref="0x7fbb439cb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb439e1620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb439e1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb439e19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb439d61e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb439d61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb439d6560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb439d66f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb439d6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb439df020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb439df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb439df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbb439da6e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbb439da6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb439daa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb439dabf0"/>
        <function-ref name="request" scoped="" ref="0x7fbb439dad80"/>
        <function-ref name="granted" scoped="" ref="0x7fbb439d9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb439d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fbb439cde00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb439cde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439cc1c0"/>
        <function-ref name="write" scoped="" ref="0x7fbb439cc350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fbb439d9530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbb439d9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb439d98b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb439d9a40"/>
        <function-ref name="write" scoped="" ref="0x7fbb439d9bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb439d9d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb439d8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fbb439cb8b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb439cb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb439cbe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fbb439df7c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fbb439df7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbb439dfb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb439ca150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb439ca150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb439ca4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb439ca660"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb439ca7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb439ca980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb439cab10"/>
        <function-ref name="get" scoped="" ref="0x7fbb439caca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb439cae30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb439c94d0"/>
        <function-ref name="set" scoped="" ref="0x7fbb439c9020"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb439c91b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb439c9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fbb439ce3e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb439ce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb439ce760"/>
        <function-ref name="write" scoped="" ref="0x7fbb439ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fbb439d0b10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbb439d0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb439ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fbb439dba50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbb439dba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbb439dbdd0"/>
        <function-ref name="disable" scoped="" ref="0x7fbb439da020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbb439da1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbb439da340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fbb439d8ad0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb439d8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb439d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbb439e1ca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbb439e1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbb439e00a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb439e0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbb4395ea70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4395ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbb4395edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbb43962670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43962670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb439629f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb43962b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb43962d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb4395f020"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb4395f1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb4395f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fbb4395d550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4395d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb4395bb00"/>
        <function-ref name="clear" scoped="" ref="0x7fbb4395a2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb4395b3d0"/>
        <function-ref name="set" scoped="" ref="0x7fbb4395a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fbb4395e0c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4395e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4395e440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb4395e5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb4395e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fbb43955480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb43955480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43955800"/>
        <function-ref name="isSet" scoped="" ref="0x7fbb43955990"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43955b20"/>
        <function-ref name="set" scoped="" ref="0x7fbb43955cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fbb43959660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb43959660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb43958ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fbb43956460"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb439585b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43956b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbb4395f6e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbb4395f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb4395fa60"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb4395fbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb4395fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbb4394e020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbb4394e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbb4394e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbb43954d20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb43954d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb439510e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb43951270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb43951400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb43951590"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb43951720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb439518b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbb439454a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb439454a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb43945820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb439459b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43945b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43945cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb43945e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fbb4394ea80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbb4394ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb4394c020"/>
        <function-ref name="clear" scoped="" ref="0x7fbb4394c750"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb4394d8d0"/>
        <function-ref name="set" scoped="" ref="0x7fbb4394ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fbb4394f640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4394f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4394f9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb4394fb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb4394fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fbb439478b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbb439478b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43947c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fbb43947dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43945020"/>
        <function-ref name="set" scoped="" ref="0x7fbb439451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fbb43941820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fbb43941820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb439434c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fbb43943b80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fbb43943b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb439427d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fbb4394baf0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbb4394baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbb439480d0"/>
        <function-ref name="clear" scoped="" ref="0x7fbb43948800"/>
        <function-ref name="isValid" scoped="" ref="0x7fbb43949970"/>
        <function-ref name="set" scoped="" ref="0x7fbb43947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbb43951c50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbb43951c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb4394f020"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb4394f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb4394f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbb438f04e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbb438f04e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb438e7150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbb438e77c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb438e77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb438e6620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb438e5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb438e6ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb438e54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fbb438e0020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fbb438e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb438dc630"/>
        <function-ref name="fired" scoped="" ref="0x7fbb438dea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb438dd920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb438dd4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb438db020"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb438dcab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb438dd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb438e0c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb438dc020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb438de110"/>
        <function-ref name="stop" scoped="" ref="0x7fbb438de5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbb438db610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbb438db610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb438d93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb438e1130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb438e1130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb438e14b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb438ac870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb438ac870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb438a8090"/>
        <function-ref name="fired" scoped="" ref="0x7fbb438a9090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb438a9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb438a9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb438a8550"/>
        <function-ref name="start" scoped="" ref="0x7fbb438ab6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb438abbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb438ac020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb438ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb438ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb42dd1260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb42dd1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb42dceb30"/>
        <function-ref name="fired" scoped="" ref="0x7fbb42dd0a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb42dce4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb42dce020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb42dcd020"/>
        <function-ref name="start" scoped="" ref="0x7fbb42dd0090"/>
        <function-ref name="stop" scoped="" ref="0x7fbb42dd05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb42dd29d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb42dd29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb42dd2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbb42db8a80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb42db8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb42db8e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb42db7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb42db71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb42db7340"/>
        <function-ref name="fired" scoped="" ref="0x7fbb42db74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbb42dbb020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb42dbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb42dbb3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb42dbb530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb42dbb6c0"/>
        <function-ref name="get" scoped="" ref="0x7fbb42dbb850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb42dbb9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb42dbbb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb42dbbd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb42db9020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb42db91b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb42db9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb42db94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbb42db9760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb42db9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb42db9ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb42db9c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb42db9e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb42db8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb42db81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb42db8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb42db84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb42db8660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb42db87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fbb42dae760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbb42dae760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbb42daeae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbb42daec70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbb42daee00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbb42dad020"/>
        <function-ref name="fired" scoped="" ref="0x7fbb42dad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbb42db2dd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbb42db2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb42db0180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbb42db0310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb42db04a0"/>
        <function-ref name="get" scoped="" ref="0x7fbb42db0630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb42db07c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb42db0950"/>
        <function-ref name="getMode" scoped="" ref="0x7fbb42db0ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb42db0c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb42db0e00"/>
        <function-ref name="setMode" scoped="" ref="0x7fbb42daf020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbb42daf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb42db5bf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb42db5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb42db24e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb42db34e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb42db3e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb42db39a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb42db29a0"/>
        <function-ref name="start" scoped="" ref="0x7fbb42db4a80"/>
        <function-ref name="stop" scoped="" ref="0x7fbb42db3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb42db5360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb42db5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb42db56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbb42daf440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbb42daf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbb42daf7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbb42daf950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbb42dafae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbb42dafc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbb42dafe00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbb42dae020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbb42dae1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbb42dae340"/>
        <function-ref name="setControl" scoped="" ref="0x7fbb42dae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbb438cbb70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb438cbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb438c89b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb438c7360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb438c8e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb438c7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fbb438c0b90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fbb438c0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb438bf9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb438be4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb438be020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb438be9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbb438c3610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb438c3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb438c25b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb438c0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb438c2a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb438c04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbb42dcb5f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb42dcb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb42dc9e50"/>
        <function-ref name="fired" scoped="" ref="0x7fbb42dcae00"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb42dc9800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb42dc9340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb42dc7340"/>
        <function-ref name="start" scoped="" ref="0x7fbb42dca430"/>
        <function-ref name="stop" scoped="" ref="0x7fbb42dca940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fbb42dc5d20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fbb42dc5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb449335c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbb44933930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb42dc2670"/>
        <function-ref name="fired" scoped="" ref="0x7fbb42dc3550"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb42dc2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb42dc3a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb42dc2b30"/>
        <function-ref name="start" scoped="" ref="0x7fbb42dc4b60"/>
        <function-ref name="stop" scoped="" ref="0x7fbb42dc3090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbb42dc79b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb42dc79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb42dc67e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb42dc51b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb42dc6ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb42dc5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fbb438779c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fbb438779c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb43877d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb43875020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fbb4387a850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbb4387a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43877090"/>
        <function-ref name="fired" scoped="" ref="0x7fbb43878090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbb43878a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb43878550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbb43877550"/>
        <function-ref name="start" scoped="" ref="0x7fbb438796a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43879bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbb4387f2f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb4387f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb4387c870"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4387ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb4387dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb4387d780"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb4387a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb4387ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb4387d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb4387e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb4387c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb4387e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4387e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fbb43825a00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fbb43825a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb43825d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb43824020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fbb4382a640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fbb4382a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43826c40"/>
        <function-ref name="fired" scoped="" ref="0x7fbb438281e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb43826020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb43828ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb43825590"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb43825110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb43828660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb43829390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb43826630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb43829860"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43829d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbb43830150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb43830150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb4382c700"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4382fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb4382da50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb4382d5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb4382a090"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb4382cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb4382d110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb43830d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb4382c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb4382f2a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4382f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbb438222b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbb438222b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb43821020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbb43821690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbb43821690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbb4381f5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbb4381e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbb4381fa70"/>
        <function-ref name="overflow" scoped="" ref="0x7fbb4381e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbb438188c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb438188c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb43804cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fbb43805320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb438040d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb43805c20"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb43803660"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb438031e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb438057a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb438064e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb438046e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb438069b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb43806e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fbb4380f2c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fbb4380f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb4380b870"/>
        <function-ref name="fired" scoped="" ref="0x7fbb4380ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb4380cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb4380c780"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb4380a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb4380bcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb4380c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb4380e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb4380b260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb4380e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb4380e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbb437f2c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbb437f2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f1210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbb437fc020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbb437fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbb437f6c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbb437f6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f5020"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbb437f0670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbb437f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f09f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbb437e9e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbb437e9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e8210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbb437f0e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbb437f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ef210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbb437dc2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbb437dc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437dc670"/>
        <function-ref name="write" scoped="" ref="0x7fbb437dc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbb437df2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbb437df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437df670"/>
        <function-ref name="write" scoped="" ref="0x7fbb437df800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbb437fb370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbb437fb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbb437e4670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbb437e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e49f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbb437e02f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbb437e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e0670"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbb437f5c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbb437f5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f4020"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbb437f4c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbb437f4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f2020"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbb437ea670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbb437ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ea9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437eab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbb437ede50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbb437ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437eb210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbb437ef670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbb437ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ef9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbb437fe970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbb437fe970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbb437fecf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbb437fee80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbb437fd030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbb437fad00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbb437fad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437f80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbb437f8370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbb437f8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbb437e3a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbb437e3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e3df0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbb437f8ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbb437f8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437f8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbb437e0ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbb437e0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e0e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb437df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbb437fa060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbb437fa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fa3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbb437e5e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbb437e5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e4210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbb437f4480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbb437f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f4800"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbb437f5480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbb437f5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f5800"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbb437fd950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbb437fd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbb437e7e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbb437e7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e5210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbb437e8670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbb437e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e89f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbb437e5670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbb437e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e59f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbb437ddad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbb437ddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437dde50"/>
        <function-ref name="write" scoped="" ref="0x7fbb437dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbb437dfad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbb437dfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437dfe50"/>
        <function-ref name="write" scoped="" ref="0x7fbb437dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbb437eb670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbb437eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437eb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbb437e8e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbb437e8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e7210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbb437e1ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbb437e1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e1e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbb437ee670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbb437ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ee9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437eeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbb437dcad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbb437dcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb437dce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb437db020"/>
        <function-ref name="write" scoped="" ref="0x7fbb437db1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb437db340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb437db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbb437fd300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbb437fd300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fd680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbb437f6490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbb437f6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f6810"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbb437f2480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbb437f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f2800"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbb437eae50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbb437eae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e9210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbb437efe50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbb437efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ee210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbb437e9670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbb437e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e99f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbb437f1670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbb437f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f19f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbb437fc670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbb437fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbb437f1e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbb437f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437f0210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb437ffd00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb437ffd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb437fe0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb437fe230"/>
        <function-ref name="request" scoped="" ref="0x7fbb437fe3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbb437fe550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb437fe6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbb437f7160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbb437f7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437f74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbb437f7e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbb437f7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437f61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbb437e12f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbb437e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e1670"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbb437e2ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbb437e2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e2e50"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbb437fa6b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbb437fa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437faa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbb437e22f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbb437e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e2670"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbb437dd2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbb437dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437dd670"/>
        <function-ref name="write" scoped="" ref="0x7fbb437dd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbb437ebe50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbb437ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ea210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437ea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbb437e7670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbb437e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e79f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbb437fccc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbb437fccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbb437fb9c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbb437fb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437fbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbb437eee50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbb437eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ed210"/>
        <function-ref name="write" scoped="" ref="0x7fbb437ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbb437f77b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbb437f77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbb437f7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbb437ed670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbb437ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437ed9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbb437e4e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbb437e4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbb437e3610"/>
        <function-ref name="write" scoped="" ref="0x7fbb437e37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbb437db7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbb437db7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbb437dbb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbb437dbcb0"/>
        <function-ref name="write" scoped="" ref="0x7fbb437dbe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbb437da020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbb437da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fbb437b1a20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbb437b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbb437b1da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fbb437b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fbb437af920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fbb437af920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb437b1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb437b59a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb437b59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb437b5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fbb437aba20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbb437aba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbb437abda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fbb437aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fbb437ac940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fbb437ac940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb437ab560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb437ac080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb437ac080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb437ac400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbb437b3aa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb437b3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb437b3e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb4379d020"/>
        <function-ref name="isState" scoped="" ref="0x7fbb4379d1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb4379d340"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb4379d4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb4379d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb4378f020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb4378f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4378f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4378f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4378f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4378f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4378f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb43790220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb43790220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb437905a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43790730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb437908c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43790a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43790be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb4378be60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb4378be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4378a210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4378a3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4378a530"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4378a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4378a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb4378ea20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb4378ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4378eda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4378b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4378b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4378b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4378b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fbb437898f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbb437898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbb43789c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fbb43789e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb4378b750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb4378b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb4378bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb43788170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb43788170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb437884f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb43788680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb43788810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fbb4378aae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb4378aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb4378ae60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb43789020"/>
        <function-ref name="isState" scoped="" ref="0x7fbb437891b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb43789340"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb437894d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb43789660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbb4378c690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb4378c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb4378ca10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb4378cba0"/>
        <function-ref name="isState" scoped="" ref="0x7fbb4378cd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb43777020"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb437771b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb43777340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbb43771950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbb43771950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb43771cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb43774aa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb43774aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb43774e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fbb43771200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbb43771200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb43771580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbb4376b3f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbb4376b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4376b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb4376cb70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb4376cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb4376b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb4376fe30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb4376fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4376c1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb4376ba70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4376ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4376bdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb4376a020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb4376a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fbb4376c570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbb4376c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4376c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbb4373c020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbb4373c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4373c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb4373c6b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb4373c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4373ca30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4373cbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4373cd50"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4373b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4373b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb437408e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb437408e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43740c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43740df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4373f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4373f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4373f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fbb4373fc90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fbb4373fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4373e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4373e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4373e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4373e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4373e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb4373f5e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb4373f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4373f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb43741be0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb43741be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43740020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb437401b0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43740340"/>
        <function-ref name="granted" scoped="" ref="0x7fbb437404d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43740660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fbb4373ea50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb4373ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4373edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fbb4373d170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fbb4373d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb4373d4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb4373d680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4373d810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4373d9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb4373db30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb43732d70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb43732d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43731180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43731310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb437314a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43731630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb437317c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbb43731b10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbb43731b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb43730020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fbb43703db0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fbb43703db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbb43701180"/>
        <function-ref name="runTask" scoped="" ref="0x7fbb43701310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbb437302f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb437302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb43730670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb43730800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb43730990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb43730b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb43730cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb43730e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fbb43734a20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fbb43734a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43734da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb43733020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb437331b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43733340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb437334d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbb4372fb70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbb4372fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbb4372e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbb4372e1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbb4372e340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbb4372e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb4372f170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4372f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4372f4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb4372f680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb4372f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fbb43734370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fbb43734370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb437346f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbb437367b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbb437367b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43736b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43736cc0"/>
        <function-ref name="request" scoped="" ref="0x7fbb43736e50"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43735020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb437351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fbb437354d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fbb437354d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb43735850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb437359e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43735b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb43735d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb43734020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fbb43733840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fbb43733840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb43733bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fbb43732020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fbb43732020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb437323a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb43732530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb437326c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb43732850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb437329e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbb436e3dd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbb436e3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbb436e2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fbb436e2410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fbb436e2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbb436e2790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbb436e2920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbb436e2ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbb436e2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbb436d6b80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbb436d6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb436d5020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb436d51b0"/>
        <function-ref name="start" scoped="" ref="0x7fbb436d5340"/>
        <function-ref name="stop" scoped="" ref="0x7fbb436d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb436d4860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb436d4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb436d4be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb436d4d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb436d3020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb436d31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb436d3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbb436d3690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbb436d3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb436d3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb436dace0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb436dace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb436d70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb436d7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb436d73c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb436d7550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb436d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbb436d6080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb436d6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbb436d6400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbb436d6590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbb436d6720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbb436d68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fbb436d5800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fbb436d5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb436d5b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb436d5d10"/>
        <function-ref name="isState" scoped="" ref="0x7fbb436d4020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb436d41b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb436d4340"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb436d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fbb436d3d90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fbb436d3d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbb436d2180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbb436d2310"/>
        <function-ref name="start" scoped="" ref="0x7fbb436d24a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbb436d2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb436d7980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb436d7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb436d7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbb436cf2d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbb436cf2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbb436cf650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbb436cf7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbb436cf970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbb436cfb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbb436d1580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbb436d1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbb436d1900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbb436d1a90"/>
        <function-ref name="isState" scoped="" ref="0x7fbb436d1c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbb436d1db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbb436d0020"/>
        <function-ref name="forceState" scoped="" ref="0x7fbb436d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb436c2d70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb436c2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb436c0180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb436c0310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb436c04a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb436c0630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb436c07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbb436c5350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbb436c5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb436c56d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb436c5860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb436c59f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb436c5b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb436c5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbb436c2020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbb436c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbb436c23a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbb436c2530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbb436c26c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbb436c2850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbb436c29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fbb436bc1c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbb436bc1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbb436bc540"/>
        <function-ref name="noAck" scoped="" ref="0x7fbb436bc6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbb436bc860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbb436bf410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbb436bf410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbb436bf790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbb436bf920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbb436bfab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbb436bfc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbb436bfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbb4369d690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbb4369d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb4369da10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbb4369e860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbb4369e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb4369ebe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4369ed70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb4369d020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb4369d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb4369d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fbb4369b610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbb4369b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbb4369b990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbb4369bb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbb4369bcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbb4369be40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbb43699020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbb436991b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbb43699340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbb436994d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbb43699660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbb436997f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbb43699980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbb43699b10"/>
        <function-ref name="sync" scoped="" ref="0x7fbb43699ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbb43698020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbb436981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbb4369f8b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbb4369f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb4369fc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb4369fdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb4369e020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb4369e1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb4369e340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb4369e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fbb436a0ce0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fbb436a0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fbb4369f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fbb436971f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fbb436971f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbb43697570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbb43697700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbb43697890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbb43697a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fbb43697bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbb43697d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb436a1a80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb436a1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb436a1e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb436a0020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb436a01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb436a0340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb436a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbb436a5020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbb436a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbb436a53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb436a5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb436a56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbb436a5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbb436a59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fbb436a3df0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fbb436a3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb436a21c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbb4369dce0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbb4369dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbb4369c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbb4369c230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbb4369c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbb4369c550"/>
        <function-ref name="getPower" scoped="" ref="0x7fbb4369c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbb4369c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fbb436984d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbb436984d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fbb43698950"/>
        <function-ref name="changed" scoped="" ref="0x7fbb43698ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fbb43698c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fbb43698e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbb4369cb70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbb4369cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbb4369b020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbb4369b1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbb4369b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb436a3210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb436a3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb436a3590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbb43696d30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbb43696d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbb436950e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbb43695270"/>
        <function-ref name="led1On" scoped="" ref="0x7fbb43695400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbb43695590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbb43695720"/>
        <function-ref name="get" scoped="" ref="0x7fbb436958b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbb43695a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbb436941b0"/>
        <function-ref name="set" scoped="" ref="0x7fbb43695bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbb43695d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fbb43694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb436a2470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb436a2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb436a27f0"/>
        <function-ref name="source" scoped="" ref="0x7fbb436a2980"/>
        <function-ref name="address" scoped="" ref="0x7fbb436a2b10"/>
        <function-ref name="destination" scoped="" ref="0x7fbb436a2ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb436a2e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb436a1020"/>
        <function-ref name="type" scoped="" ref="0x7fbb436a11b0"/>
        <function-ref name="setType" scoped="" ref="0x7fbb436a1340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb436a14d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb436a1660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb436a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fbb436960f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fbb436960f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbb43696470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbb43696600"/>
        <function-ref name="request" scoped="" ref="0x7fbb43696790"/>
        <function-ref name="granted" scoped="" ref="0x7fbb43696920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbb43696ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb435f0020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb435f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb435f03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb435f0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb435f06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb435f0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb435f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb435f6910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb435f6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb435f6c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb435f0c30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb435f0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb435ee020"/>
        <function-ref name="source" scoped="" ref="0x7fbb435ee1b0"/>
        <function-ref name="address" scoped="" ref="0x7fbb435ee340"/>
        <function-ref name="destination" scoped="" ref="0x7fbb435ee4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb435ee660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb435ee7f0"/>
        <function-ref name="type" scoped="" ref="0x7fbb435ee980"/>
        <function-ref name="setType" scoped="" ref="0x7fbb435eeb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb435eeca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb435eee30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb435ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbb435eb780" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbb435eb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbb435ebb00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbb435ebc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbb435ebe20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbb435ea020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbb435ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbb435eb1b0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbb435eb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbb435eb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbb435ea400" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="Relay_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbb435ea400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbb435ea780"/>
        <function-ref name="source" scoped="" ref="0x7fbb435ea910"/>
        <function-ref name="address" scoped="" ref="0x7fbb435eaaa0"/>
        <function-ref name="destination" scoped="" ref="0x7fbb435eac30"/>
        <function-ref name="setSource" scoped="" ref="0x7fbb435eadc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbb435e9020"/>
        <function-ref name="type" scoped="" ref="0x7fbb435e91b0"/>
        <function-ref name="setType" scoped="" ref="0x7fbb435e9340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbb435e94d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbb435e9660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbb435e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbb435e7560" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Relay_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbb435e7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbb44b0edb0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbb44933180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbb435e3a20"/>
        <function-ref name="fired" scoped="" ref="0x7fbb435e5020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbb435e5da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbb435e5920"/>
        <function-ref name="getdt" scoped="" ref="0x7fbb435e24a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbb435e2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbb435e54a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbb435e61b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbb435e3410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbb435e6680"/>
        <function-ref name="stop" scoped="" ref="0x7fbb435e6b50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fbb44b09020" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fbb44b0dc10" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fbb44adb020" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fbb44add270" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fbb44adc840" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fbb44adfb00" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fbb44add9e0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fbb44ae2d10" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fbb44adf420" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fbb44adc120" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fbb44c2a020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fbb44eefc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fbb44a89020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fbb44a8acc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fbb44a8d390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fbb44ad4b60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fbb44ad2650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fbb44a89890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fbb44a887b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fbb44a8a560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fbb44a88020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fbb44a8db30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fbb44a8c350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fbb44a8cda0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fbb44ad4b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fbb44ad2650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbb44a8cb20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fbb44ad4b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fbb44ad2650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fbb44a7c0e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fbb44a79730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fbb44a794b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fbb44a782e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbb44a78060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fbb44a7aca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fbb44a7a3e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fbb44a7ca90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fbb44a7c810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fbb44a833e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fbb44a83d60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbb44a83ae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fbb44a81790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fbb44a81510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fbb44a802a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fbb44a80020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbb44a80990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fbb44a93810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fbb44a902a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fbb44a90020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fbb44a91020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbb44a99ab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fbb44a91760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fbb44a959b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fbb44a93120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fbb44a95270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fbb44a940e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fbb44a949f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbb44a94770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fbb44a90cb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fbb44a90a30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbb44a521f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fbb44b4da80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fbb44b4c1f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fbb44b4d2b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fbb44d66810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fbb44fa8020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fbb44fa7020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fbb44fa8790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fbb44f9c270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fbb44f9cac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fbb448cb9c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448cb060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fbb448cb3b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb448cb6e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fbb448b6730" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbb448b64b0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fbb448b4c80" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbb448b4a00" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fbb448b9a80" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbb448b4020" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fbb448b28a0" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448b2620" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fbb448b0950" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448b06d0" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fbb448add30" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448ad730" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb448ada60" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fbb448afda0" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fbb448aedd0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448ae810" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb448aeb40" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7fbb448d22c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fbb448d3940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fbb448d3cc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb448d2020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fbb448ce970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448ce370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb448ce6a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fbb448cda60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbb448d0630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448d03b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbb448cfb80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb448cf5a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fbb448cf8f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb449226f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb449226f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fbb448be420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbb448c3d60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fbb448c1b10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fbb448c1540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fbb448c1880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fbb448c2d60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fbb448bd460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fbb448bebb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fbb448c2570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fbb448c42a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbb448c4020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fbb448bfaa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fbb448bf4d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fbb448bf810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fbb448c4d60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbb448c4ae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbb448c3650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fbb4492a530" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fbb4492ace0" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fbb449294e0" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fbb44928490" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fbb44927bd0" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbb44925420" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fbb44929c70" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbb44924020" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fbb44925d10" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fbb4492cd60" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fbb44928c70" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fbb44927420" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fbb44767a60" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fbb447661f0" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fbb44768bb0" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fbb44765070" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbb44767350" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fbb44766910" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbb4476cdd0" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fbb447684c0" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fbb4473bc20" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fbb4473a390" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fbb44736c10" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbb44736990" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fbb4473c4a0" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fbb44739270" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fbb44735520" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fbb4473aad0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbb4473b480" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fbb44737940" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fbb4473cc40" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbb4473e5f0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fbb447399f0" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fbb44736120" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fbb447371f0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fbb4473ed20" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fbb444f3840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444f35c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fbb444fd400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444fd180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fbb444ff840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fbb444fe350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444fe0d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fbb444f9d00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444f9720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fbb444f9a70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fbb444fb800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444fb220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fbb444fb570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fbb444f62e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444f6060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fbb444f5680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444f50d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fbb444f53f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbb448e6d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fbb444f80b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444fae00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fbb444f1d00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbb444f1720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fbb444f1a70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fbb444f0b50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fbb444ed5f0" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444ed370" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fbb444ec7d0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444ec550" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fbb444ea940" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444ea6c0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbb444db020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444dfa30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb444dfd60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fbb444d8660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444d8060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb444d8390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fbb444d6790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbb444da350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444da0d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbb444d9870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444d9290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fbb444d95e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb44467920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb44467920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbb44467b60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb44467b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fbb44462970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb44467b60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444626f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fbb44461b40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444618c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fbb44464750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444644d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbb44463020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb44467b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb4445f8a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fbb4445fc00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb44467b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fbb44453030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444549e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fbb44454d70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fbb444522a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb44452020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fbb444541f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fbb444567f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fbb44456570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fbb4442b430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb4442b1b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fbb4442d720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb4442d4a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fbb44430dc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fbb44430b40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fbb444302a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fbb44430020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fbb4442e880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fbb4442e600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fbb4442c5e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb4442c360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fbb4441fe60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fbb4441f850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fbb4441fbd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fbb444390c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb4443baa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fbb4443bdf0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fbb444366d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb444360d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fbb44436440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fbb44439ba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fbb456d7110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb44439920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fbb44437600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb44437380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fbb4443b2a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb4443b020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fbb44438720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb444384a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fbb44423630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444233b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fbb444276f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444270d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fbb44427460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fbb444245f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb44424370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fbb44426af0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444264d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fbb44426860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fbb44422630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb444223b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fbb444320b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb4443cde0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fbb44416cc0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fbb44417cc0" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fbb44417350" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fbb444164f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fbb444158b0" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbb443f5ca0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb443f56e0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fbb443f5a10" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbb443f2020" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fbb443f0930" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fbb443f1ab0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fbb443f0360" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb443f0690" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbb443f12b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbb443f2bb0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fbb443f1020" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fbb443f4780" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fbb443f4500" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fbb443edb50" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fbb443ed350" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fbb443f7270" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbb443f7a80" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fbb443e5020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb443e7c90" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fbb443e7490" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fbb44920720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fbb4491d090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb443e7190" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fbb443e4360" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fbb4491db90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fbb4491b4f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb443e4060" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fbb443fc070" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fbb443f90e0" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fbb443fb8f0" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fbb443fe730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fbb443fd7e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fbb443fc8e0" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fbb443fb120" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fbb443fd020" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fbb443dfa70" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fbb443e1020" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fbb443df2a0" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fbb443df020" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fbb443e1790" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fbb443e9ca0" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fbb443e9a20" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fbb443e27a0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fbb443e2520" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fbb44384640" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fbb44384060" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fbb443843b0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fbb44385020" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fbb44387690" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fbb44387020" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fbb44387400" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fbb4438da40" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbb4438d7c0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fbb443858a0" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fbb44389540" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fbb443892c0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fbb4438cb90" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fbb4438c910" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fbb443838a0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fbb443886b0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fbb44388430" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fbb44383070" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fbb4438a350" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fbb4444f670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fbb4444fdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fbb4438ab40" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fbb4438d020" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fbb4438c1f0" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fbb44389ce0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fbb4437f2b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbb4437f2b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fbb4437fb70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fbb4437d8f0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbb4437f2b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fbb4437d340" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fbb4437d660" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbb4437f2b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fbb44353c10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb44353990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbb44351710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb44351490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fbb44372c50" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fbb4444f670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fbb4444fdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb4436e020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb4436e020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbb4436e260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fbb4436ae00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbb4436de40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fbb4436a460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fbb4436ce60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fbb4436a1d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fbb4436c640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fbb44369620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fbb4436edc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbb4436eb40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4436e260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbb4436d680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fbb4435b560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fbb4435a4f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fbb4435bd40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fbb4435ccd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fbb4435c6f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbb448e5180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fbb4435ca40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbb448e5560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fbb4434ee40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fbb44357e80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fbb44357020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fbb44357890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb44357be0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbb44355610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fbb44356770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fbb44355020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb44355370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbb4435ec30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fbb4435e470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fbb44360ce0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fbb44360420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb4424a4f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb4424a4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbb4424a730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4424a730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fbb44249070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb4424a730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fbb44247190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fbb442498f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fbb442478f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fbb44181bb0" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fbb44180d70" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fbb441805c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbb44180340" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fbb44181350" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fbb4415ba60" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbb44159540" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fbb4415b2d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fbb4415acf0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fbb4415aa70" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fbb4415fb00" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fbb4415a2b0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fbb44047270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fbb44047ac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fbb44046350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fbb44020b60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb44020580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb440208d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fbb4401bdd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb4401b490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb4401b7e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbb4401bb30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbb4401c6b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb4401c0d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb4401c420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fbb44021730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbb4492f8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb44021150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb440214a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fbb4401d2c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb4401f930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbb4401fc80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbb4401d020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbb44001df0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fbb44001480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fbb44001810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb44001b50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbb43ffe3c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fbb43ffd6a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fbb43ffda30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb43ffdd70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbb43ffe110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fbb44005c90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fbb44005a10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fbb43f216f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fbb43f20070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fbb43f18710" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fbb43f54020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fbb43f54440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fbb43f1e2a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb43f1e020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fbb43f1d680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb43f1d400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fbb43f1eb10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbb43f1b2a0" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb43f1b020" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fbb43f12ca0" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fbb43f12480" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fbb43f092a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb43f09020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fbb43f0a780" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fbb43ee6af0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fbb43ef1790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fbb43efe610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f70080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fbb43f708c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbb43efe390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f70080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fbb43f708c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fbb43ef4800" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fbb43efba90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f6b080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fbb43f6b8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbb43efb810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f6b080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fbb43f6b8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fbb43eebe70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fbb43ee7480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fbb43efb070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f6e020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fbb43f6e7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fbb43efa2b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f6b080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fbb43f6b8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fbb43ef6020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fbb43ef8d30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fbb43ef8610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fbb43eeb740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fbb43efd840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f6e020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fbb43f6e7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbb43efd5c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f6e020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fbb43f6e7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fbb43ef9420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fbb43eea5d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fbb43ef9e00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fbb43ef9b80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fbb43ef58c0" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fbb43ef4070" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fbb43eec840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fbb43eef790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fbb43ef27a0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fbb43eeb020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fbb43ef0020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fbb43eeacf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fbb43ef6800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbb43f76dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fbb43f72680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fbb43ee84c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fbb43ee6350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fbb43efac50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fbb43efa9d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fbb43ee54d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb43ee5250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fbb43efedf0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbb43f70080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fbb43f708c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fbb43ef2020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fbb43ef0770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fbb43eec020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbb43f42e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fbb43f412b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbb43eedcf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbb43f42e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fbb43f412b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fbb43eed2a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fbb43f54020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fbb43f54440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbb43eed020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fbb43f54020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fbb43f54440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fbb43ee5d90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fbb43ee8cb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fbb43ef5020" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fbb43ee7be0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fbb43eef020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fbb43ef1020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbb43e7e600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fbb43e56070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fbb43e69b10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fbb43e5ed50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fbb43e5ead0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fbb43e71270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fbb43e5a350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fbb43e63cf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fbb43e6ac50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fbb43e689c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fbb43e6cc00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fbb43e6c980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fbb43e6d120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fbb43e65790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fbb43e5cc80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fbb43e578f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fbb43e5e390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fbb43e52b60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fbb43e4d270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fbb43e6f0e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fbb43e65020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fbb43e64910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fbb43e6a500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fbb43e72020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fbb43e5fba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fbb43e5f920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fbb43e757e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fbb43e5bb80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fbb43e567d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fbb43e50350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fbb43e4ea90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fbb43e58270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fbb43e55020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fbb43e5c520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fbb43e53bb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fbb43e6f800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fbb43e60020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fbb43e53020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fbb43e57190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fbb43e63520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fbb43e632a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fbb43e50af0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fbb43e5f1f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fbb43e5aac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fbb43e72aa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbb43f2eb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fbb43f2d020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbb43e72820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbb43f2eb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fbb43f2d020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fbb43e66870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fbb43e6e980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbb43e6e700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fbb43e64120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbb43e65e70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fbb43e523b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fbb43e6c270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fbb43e6e020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fbb43e609e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fbb43e60760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbb456d6520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fbb43e719a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fbb43e55740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fbb43e589e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fbb43e5b420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fbb43e61740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fbb43e614c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fbb43e66120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fbb43e693b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fbb43e4e2b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fbb43e6daa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbb43e6d820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fbb43e51350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fbb43e68270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fbb43e51b10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fbb43db1780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fbb43daf020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fbb43d7a900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fbb43d79a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fbb43d7a070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fbb43d791f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fbb43d78390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fbb43d6eb50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbb43d76b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fbb43d6e8d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbb43d76b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fbb43d72b80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fbb43d6f6b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbb43d76b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fbb43d6f430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbb43d76b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fbb43d6e020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fbb43d76b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fbb43b695e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fbb43b69360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fbb43b56b00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fbb43b561c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fbb43b56530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb43b56860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbb43b54880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fbb43b542c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbb43b545f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb43b3c530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb43b3c530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbb43b3c770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb43b3c770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fbb43b3b2e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb43b3c770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbb43b3b060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbb43b3c770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fbb43ad9580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fbb43aa79e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fbb43aa7020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fbb43aa7750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fbb43aa87f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fbb43aa8020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbb43aacd30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fbb43abd3d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbb456d6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb43abd150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fbb43abe3d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbb44fac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb43abe150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbb43aba350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb43aba0d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbb43abb390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbb43abb110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbb448d6ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7fbb448d3180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbb43944910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbb43944910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fbb43941270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbb456d6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fbb437b25e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fbb437b25e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fbb437af2a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbb44fa3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fbb437b25e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fbb437af020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fbb437b25e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
