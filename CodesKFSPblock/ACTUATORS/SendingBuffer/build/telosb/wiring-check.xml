<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:SendingBuffer_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5ed052ec40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5ed070a080"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5ed070a080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5ed054a590"/></to>
    </wire>
    <wire loc="19:SendingBuffer_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ed04c88f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ecf12e020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ecf12e020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ece9aeb40"/></to>
    </wire>
    <wire loc="20:SendingBuffer_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f5ed04ac7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ed0023140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ed0023140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ecfffa880"/></to>
    </wire>
    <wire loc="21:SendingBuffer_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ed0522590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed031ebc0"/></to>
    </wire>
    <wire loc="22:SendingBuffer_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f5ed04bb9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ecf119830"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ecf119830"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:SendingBuffer_AppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f5ed04b7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ecf112140"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ecf112140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:SendingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ed04a25f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ecf12ec30"/></to>
    </wire>
    <wire loc="31:SendingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ed04a25f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ecf121020"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ecf121020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ed0020630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ecf12ec30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ece9ad8b0"/></to>
    </wire>
    <wire loc="29:SendingBuffer_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7f5ed04c4220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf122910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecf122910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ed00213f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:SendingBuffer_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7f5ed04c48e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf11d3a0"/></to>
    </wire>
    <wire loc="32:SendingBuffer_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7f5ed04c48e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf11d3a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecf11d3a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ed00213f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:SendingBuffer_AppC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ed049e810"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecee83160"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecee83160"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f5ecef52d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SendingBuffer_AppC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f5ecee7f020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f5ed0477c40"/></to>
    </wire>
    <wire loc="37:SendingBuffer_AppC.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f5ed047e3a0"/></from>
      <to><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f5ecee82d30"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f5ecee82d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f5ecf0eb2e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece5553b0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf0e3020"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf214dd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf29db70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf2bc750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf2dc080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf412130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf513620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf600c60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecfdf87e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece79b140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecfac6020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecfea8510"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5ed054ac00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5ed0ba23a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5ed0ba23a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5ed0750140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5ed053d6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed07094e0"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ed07094e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed07056d0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed053ddc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f5ed0705de0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f5ed0702be0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f5ed0702be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed06e3b60"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5ed07014e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed0704a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f5ed0701bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed02f5600"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ed06e3b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed06ca940"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5ed06d92c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5ed06c9020"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ed08284c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ed06c8360"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f5ed06855a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05c26d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f5ed0673020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05bbb30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f5ed067c700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05c8160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f5ed0660a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05a1cb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f5ed0683aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05c9480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f5ed0666020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05a1020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f5ed065da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed058acb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f5ed066d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed059b220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f5ed0686b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed06189d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f5ed0662a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05b02f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f5ed06683e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05b1610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f5ed06725a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05b2220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f5ed067b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05c07a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f5ed065fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05992f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f5ed0671be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05ab6d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f5ed0682890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05c1ac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f5ed0696060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed0626540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f5ed0666da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed059a610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f5ed068c0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05ca020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f5ed066ca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05936d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f5ed06766d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05d0a90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f5ed0661a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05a97a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f5ed067ecf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05d1de0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f5ed06671f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05aaac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f5ed065ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05917a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f5ed066e0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed05a3b30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f5ed0665b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed0592ac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f5ed0663a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ed05b9cb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f5ed0664a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed058a020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f5ed0669570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ed05b9020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f5ed066a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5ed058cb30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5ed0624450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed0625d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5ed0624aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5ed0584a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5ed0622120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5ed0581260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05cf930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed0626540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05cd020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed0625d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05c7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed0626540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05c57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed0625d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05bf610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed0626540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05bec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed0625d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5ed061c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5ed061c940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5ed05819f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5ed061b020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5ed0580240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05b8b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05b52f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05af160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05ae7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05a8610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05a7c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed05a0b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed059e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed0598160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05977a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed0590610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed058fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ed0589b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5ed05872f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed074e040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f5ed074a490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f5ed0b3c3b0"/></to>
    </wire>
    <wire loc="589:SendingBufferC.nc">
      <from><interface-ref name="getData" scoped="" ref="0x7f5ed0364380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:SendingBufferC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f5ed046d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:SendingBufferC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7f5ed04692a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:SendingBufferC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7f5ed046e4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:SendingBufferC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7f5ed046c3b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:SendingBufferC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7f5ed04682b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:SendingBufferC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7f5ed046a2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ed02f5600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ed031e5c0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5ed03141d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5ed031fd90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5ed031fd90"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ed00de440"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5ed031a4d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5ed02f7020"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5ed02f7020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ed00c9020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5ed03197f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5ed02f6380"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5ed02f6380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ed00c4b90"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ed00cd610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f5ed029e9a0"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f5ed029e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed017ad10"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ed00c82f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f5ed029c9a0"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f5ed029c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0175740"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ed00c3de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f5ed029a9a0"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f5ed029a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0170100"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5ed02df810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0214740"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5ed02cb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01e3100"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f5ed0281ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01d5100"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f5ed025dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed014a740"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f5ed027fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01d1d10"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f5ed02c7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01da740"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f5ed02b29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01aa460"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f5ed028e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0153100"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f5ed0279cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01c7100"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f5ed0269cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0167740"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f5ed0254cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0145100"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5ed02d9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0205740"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f5ed0277cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01c2d10"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5ed02d5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01fcd10"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f5ed02c1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01cc740"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f5ed02ac9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed019b100"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f5ed02989a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed016cd10"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f5ed02879a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0145100"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5ed02e3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed021d100"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5ed02cf810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01eed80"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f5ed02bb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01bd740"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f5ed0283cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01d5100"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f5ed0263cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0159740"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f5ed0256cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0145100"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f5ed026fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed017f100"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f5ed02b6810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01b4e60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f5ed02a29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0184740"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f5ed02929a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed015ed10"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f5ed0261cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0153100"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f5ed0275cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed018d100"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5ed02dd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed020f100"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5ed02c9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01dfd10"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f5ed02969a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0167740"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f5ed02c5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01d5100"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f5ed02b09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01a6e00"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f5ed028c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed014fd10"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f5ed0271cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0184740"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5ed02e6870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed024dd10"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5ed02d3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01f7740"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f5ed02bf810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01c7100"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f5ed02aa9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0197d10"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f5ed026dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01bd740"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f5ed0267cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0162100"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f5ed025bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0145100"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f5ed02a69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed018d100"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f5ed026bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01b8100"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5ed02e1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0219d10"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5ed02cd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01e8740"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f5ed02b9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01b8100"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f5ed0273cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0189d10"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f5ed025fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed014fd10"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f5ed02b49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01af9f0"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f5ed02a09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed017f100"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f5ed02909a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0159740"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5ed02db810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed020ad10"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f5ed02949a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0162100"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5ed02d7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0200100"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f5ed02c3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01d1d10"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f5ed02ae9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01a1740"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f5ed028a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed014a740"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5ed02ef810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0222740"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5ed02d1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01f2100"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f5ed02bd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01c2d10"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f5ed02a89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0192740"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f5ed027bca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01cc740"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f5ed0265cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed015ed10"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f5ed027dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01cc740"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f5ed02a49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed0189d10"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f5ed0258cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed014a740"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f5ed0252cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed016cd10"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f5ed02859f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ed01da740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ece9aeb40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ece9a1bc0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ece9ad8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ed0020630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf12d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ece9ac590"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ece9ac590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ecf12b020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ece9abc10"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ece9abc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ed001d990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ed0020630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ecfff5760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ecfff6020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ed001d990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecfff3810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ece9a0910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ed0079940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ece99e590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ed0079940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ed002d4b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ed002c400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ed00221d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ed00221d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ecfff9980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ed002a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ed0029720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ed0020630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5ed0028480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5ed0028c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ecfffa880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff48b70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ecfff9980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ecf1d6020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ed0020020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ecfff7900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ecfff7900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ecf1d5df0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ecfff5760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ecf1d3a80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ed0018cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf48e550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf48e550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf480a80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ed0007b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecff5ebb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecff5ebb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecff3e080"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ed00213f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecfff8cb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecfff8cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf1d5210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecfff3810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecff3f020"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ecfff6020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf1d4470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ed0012dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ecf48a660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ecf48a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ecf47caf0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff48b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ecf208b80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff56d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf1d18b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5ecff49d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5ecf1d2ce0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecffec970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecff40140"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecff40140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecff3e080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecf208080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecff3f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ecf4906e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ecff54020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5ecff3eb70"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ecff3eb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5ecf1f3020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecff5da80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecff3f9d0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecff3f9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecf48fa70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f5ecf1c80f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecff45d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf1d0860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecff42d10"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecff42d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecf271c90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf1ce690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecff41a90"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecff41a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecf270a50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecf1ca4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecf6b9b30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf1cece0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf485d20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf1cdb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf481640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecf1cc610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecfeb2dc0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecfeb2dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecfea7970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5ecf1c91f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff37330"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff37330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff327e0"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ecf1c8d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ecf208b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5ecf205d90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecf48fa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecf480020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ecf1f3020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5ecf1f1410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecf271c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecf266a20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecf208080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecf2002d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5ecff43820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf2715e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecf2715e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f5ecf266370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ecf4906e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ecf482c50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecff45d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf273be0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf273be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf2687b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5ecff44a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecf2728e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ecf2728e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5ecf2674d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5ecff42020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5ecf26e170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5ecf26e170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5ecf264020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecf270a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecf265840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5ecf205d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff39390"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff39390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff36e80"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf26d6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecf2c1220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ecf2c1220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecf2bfa20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf2c0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecf1f6350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ecf1f6350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ecf1f3d70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf1f3d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecf20cce0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ecf20cce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ecf206860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf206860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecff39e80"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ecff39e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecff33990"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf26d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf209980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecf209980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf205690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf205690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf2a4aa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecf2a4aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf2a0e30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf2a1950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecff38b40"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecff38b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf5177c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ecf5177c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ecf511020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecff31640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfec2950"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecfec2950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfea8b80"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecff28b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecfebdbf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecfebdbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecfea5740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5ecff25760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ecf6116c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5ecff25760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ecf51a5c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ecf51a5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ecf513ca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ecf6116c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ecf5ff320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5ecff1d2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5ecf60e020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5ecf60e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ecf5ffbc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5ecff26060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf60ecb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf60ecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf5fe970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecff1b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecff13920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ecff1a420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ecf2e2a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ecf2e2a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ecf2dba20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f5ecff17110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecf2e4aa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5ecf2e4aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecfaca280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ecff1abf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f5ecff09b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f5ecff0aba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f5ecff0bc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f5ecfeae0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f5ecfea4b40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f5ecfe99d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdf5220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdf5220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdef5f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5ecfe96060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5ecfcf2690"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5ecfcf2690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfce4520"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5ecfe95380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f5ecfced020"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5ecfced020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcd5710"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5ecfe936a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f5ecfceb6a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5ecfceb6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcccd70"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5ecfe910e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f5ecfcb6210"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5ecfcb6210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5ecfb9aa30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5ecfe7c1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf745e20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf745e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5ecfe7a2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f5ecf7417b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5ecf7417b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecfe7a9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf740ae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf740ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecfe7da40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf742ad0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf742ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecfe7d120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf73f160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf73f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecfe81b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf737870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf737870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecfe883d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf734880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf734880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecfe88c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf7330a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf7330a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecfe835f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf73be50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf73be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecfe80020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf73a670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf73a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5ecfe8d520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f5ecf726500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5ecf726500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecfe85a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf727ce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf727ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecfe808e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf738e50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf738e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5ecfe7f1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f5ecf73ae50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5ecf73ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecfe7fa70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf739e50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf739e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f5ecfe79d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf712a80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf712a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f5ecfe79020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf6e69e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf6e69e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecfe89810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecf6b9b30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecfea1020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecf6b8d30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecf6b8d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecf69e310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f5ecfe6e820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f5ecfe6f940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ecfdf87e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecfdf0d40"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ecfdf0d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece9269d0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdef5f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece925260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ece9269d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece91ea10"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ece925260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece9185f0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ece91ea10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece902510"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f5ece912d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece91d2a0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ece91d2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece902da0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ece9149b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecfd7c020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ecfd7c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecfd5aad0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece8fd020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece9071b0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece9071b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece8fc760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece9068f0"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece9068f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece8fba80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece905c10"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece905c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f5ed0673020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f5ed0669570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f5ed0671be0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f5ed06671f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f5ed066e0c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f5ed0666020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f5ed066d5a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f5ed0666da0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f5ed066ca50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f5ed0665b80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f5ed066a020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f5ed0664a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5ecfd3c020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5ecfd73020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5ecfd73020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecfd6e0a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfd602c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5ecfcf09c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcdf060"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5ecfcefcf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcdbb70"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5ecfcf33e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfce9a20"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5ecfcec370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcd01b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfce8c50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5ed02df810"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfce37a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f5ed02b29a0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcde2f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5ed02e1810"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcd9de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5ed02e6870"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcd4930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f5ed02aa9a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfccf480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f5ed02b49a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcca020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f5ed02ac9a0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5ecfcb15a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ecfc9d020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5ecfcb6e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f5ecfb8aa70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfc9dae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f5ed06725a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f5ecfc9bda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f5ed0662a20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfc9ac20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f5ed02b49a0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5ecfb99610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5ecfc8bc40"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5ecfc8bc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5ecfc78a30"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f5ecfb89610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5ecfc8ee70"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5ecfc8ee70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5ecfc7e9c0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5ecfc81bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f5ecfc6dbc0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5ecfc88bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f5ecfc74a30"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5ecfc86bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f5ecfc72a30"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5ecfc91d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f5ecfc7aa30"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5ecfc83bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f5ecfc6fa30"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5ecfc8abc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f5ecfc76a30"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5ecfc80bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f5ecfc6cbc0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5ecfc85bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f5ecfc71a30"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5ecfc8cc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5ecfc79a30"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5ecfc82c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f5ecfc6ebc0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5ecfc89bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f5ecfc75a30"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5ecfc87bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f5ecfc73a30"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5ecfc92dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f5ecfc7ba30"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5ecfc84bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f5ecfc70a30"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf741160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf735880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf72d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf7340a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf721500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf724500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf740490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5ecf72a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf725500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf72f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5ecf7310a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf744a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb44920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf73fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5ecf73e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf728c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf73ebe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf725ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf72a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf739670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf72b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf72d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf72b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf723ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf724ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5ecf731880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf72c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf726ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf733880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf721ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf742480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5ecf73b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf738670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf72e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf72e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf7350a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf73c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5ecf73b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf73f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf727500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5ecf723500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf72f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf72c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5ecf741e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf7320a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5ecf73c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf732880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf7280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf7209b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb40bb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb3d020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb3ddb0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfb41810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb3cba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f5ecfb38020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecfacf770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5ecfacf770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecfaca280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5ecfb3b400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfaadc40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecfaadc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ece821c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfb39080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfaac8f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfaac8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5ece81e0c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecfb2f680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecf76a020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecf76a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5ece81d2b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ecfb38df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f5ecfb2a120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5ecfaca280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecfac6b70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5ece81d2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecfa3c510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5ece81e0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfa3fdd0"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ece821c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfa45a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece81f8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece8152c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece8152c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecf8c98a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfa3fdd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5ecf9c3440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ece81e6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ecfa3e480"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ecfa3e480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ecf9c3a50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ecfa39600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ece81da50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece805760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecfa3f5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5ecfa3b370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ece816640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ece816640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf8ca5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5ecfa356a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5ece80fc10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5ece80fc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf8cfa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecfa3f5e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf9c4c40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecfa3c510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecf9c2700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecfa45a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf9c5e80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ecf9c1e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ecfa39600"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5ecf9c1060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f5ecfa3b370"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5ecf9bcde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5ecfa356a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5ecf9c0490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5ecf9b3860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5ecf9b3860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5ecf9a7020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ecf9ba5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f5ecf9b9c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5ecf9a98a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf9a2750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5ecf9ac3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf9a3dc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5ecf974700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f5ed0283cc0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f5ecf972670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f5ed027fcc0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5ecf970670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f5ed027dcc0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f5ecf96e670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f5ed0277cc0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5ecf96b670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f5ed0279cc0"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f5ecf9795b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f5ecf823430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5ece80e440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf8cc9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5ece80ea50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5ecf82f880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5ecf82f880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f5ecf823430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5ece8132b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5ecf9b3860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ece815a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf8c8130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf8c8130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf837060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf8c7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece805760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecf8c98a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecf839bf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecf839bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece797850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf8cfa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf8c55c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf8ca5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf83ae60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf83ae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ece798970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf8cc9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf8b3020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf837060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ece796c30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf837930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf8c7020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf8b24b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf837060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5ecf8b3690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5ecf9ac3b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5ecf8b3e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5ecf9a98a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5ecf838400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5ece796020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece795590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf837930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5ece795d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ece79b750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5ece792020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f5ecf81c250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5ecf9a7020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5ecf818d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f5ed0283cc0"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5ecf816cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f5ed027dcc0"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf705c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf710da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf709b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf703670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf6fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf703e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf6ef2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf6f12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf70d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5ecf6f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf6f22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5ecf707c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf706c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf6fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5ecf6ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf702670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf711760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf70caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5ecf70b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf6f6a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf70b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf6f2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf70ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf6f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf706480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf707480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf710750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf6f9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf6fb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf6f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf6f0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf6f1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5ecf6fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf6fbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf6f4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf700670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf6efad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf710100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5ecf709370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf705480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf6fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf702e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf6fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf704670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5ecf70f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf704e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf70a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5ecf70acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5ecf6f42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf6f5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf70c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf6f52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5ecf6f02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf6fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf6f9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5ecf70faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf70d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf700e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5ecf70a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf6ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf6f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf6ee7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf6d9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf6e3da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf6dcb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf6d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf6cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf6d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf6c22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf6c52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf6e1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5ecf6ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf6c62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5ecf6dbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf6dac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf6d0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5ecf6d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf6d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf6e4760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf6e0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5ecf6df120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf6c9a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf6df870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf6c6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf6e1dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf6cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf6da480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf6db480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf6e3750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf6cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf6ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf6cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf6c4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf6c5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5ecf6d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf6cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf6c7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf6d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf6c2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf6e3100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5ecf6dc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf6d9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf6d0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf6d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf6cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf6d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5ecf6e2450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf6d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf6dd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5ecf6ddcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5ecf6c72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf6c8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf6e0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf6c82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5ecf6c42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf6d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf6cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5ecf6e2aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf6e1770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf6d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5ecf6dd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf6d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf6cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf6c17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf69b880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf690020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf690020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf68a140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f5ecf686bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f5ecf68fc50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f5ecf68fc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f5ecf671150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f5ecf689530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ecf628a20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f5ecf676540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f5ecf677590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f5ecf677590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecf6269e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf66c950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf673ca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf673ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf64aa90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f5ecf6719f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f5ecf676540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ecf639020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f5ecf634530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f5ecf634530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecf630e50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecf62c020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f5ed0696060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecf625c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f5ed02cf810"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5ecf60a990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5ecf5fd900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f5ecf60b150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f5ecf5fc0f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f5ecf5fcae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdf5220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5ecf5f0500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f5ecfcf33e0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5ecf5e9820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5ecfcf2690"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5ecf5e8b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f5ecfcec370"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5ecf5f1880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f5ecfcb15a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5ecf5e6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf54bc30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf54bc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf5e6d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf5498f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf5498f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf5e36d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f5ecf5482f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf5482f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5ecf5e3de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f5ecf547cc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5ecf547cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf5e2530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf546370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf546370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf5e2c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf545d00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf545d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf5e4e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf53fc60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf53fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf5e5780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf5267a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf5267a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf5e4550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf52b2f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf52b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf5e03e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf540480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf540480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf5df5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf53ce50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf53ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf5de020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf53b670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf53b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5ecf5e0e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f5ecf5427b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5ecf5427b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf5dd9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf529ad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf529ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf5de890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5ecf52a2f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf52a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf5dd130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f5ecf52aad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf52aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf5d8d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf51adf0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf51adf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf512550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf5f8d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf5f7bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ecf5f6950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf48e550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf5ebbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf486480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf486480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf4788b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ecf5db6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf53ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf547020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf541c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf534e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf53be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf5272f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5ecf52f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5ecf540c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf535670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5ecf538e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf53a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5ecf544370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf52ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf544ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf52bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf545060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf531e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf53f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf548940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf532e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf533670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf531670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5ecf537670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf533e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf52cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf539670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf527ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5ecf541490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf53e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf535e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf53ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf534670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf53c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5ecf547670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf542160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5ecf542e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5ecf52c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf52dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf5456b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf52d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5ecf5292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf537e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf532670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf5469c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf539e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf538670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf52fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f5ecf516020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f5ecf5117c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ecf4fc150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5ecf510020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5ecfcf2690"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5ecf50f380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f5ecfcf09c0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5ecf50e6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f5ecfcefcf0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5ecf50ca50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5ecfcb6e30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5ecf50b6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf330d00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf330d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf50a530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf30dad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf30dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf509ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf32a6b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf32a6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5ecf5093a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f5ecf329370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5ecf329370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf508330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf5071e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ecf505d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf48e550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecf507b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecfeb2dc0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf5003e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf322e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf322e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf500cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf321670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf321670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf501b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf328160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf328160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf4fe6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf30d2f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf30d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf4ff590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5ecf30f2f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5ecf30f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf4ffe00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f5ecf30fad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5ecf30fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf4fd020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf310ad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf310ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf4fd8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f5ecf32e300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5ecf32e300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f5ecf4f09d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ecf4197c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecfd7c020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5ecf473820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf4224e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5ecf475b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf40c610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf40c610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf3522b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf411020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ecf361150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ecf412130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf3dc020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ecf3dc020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece68e9d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f5ecf35b640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ecf3b02f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ecf3ab850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ecf3dc870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ecf3dc870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece6875f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ecf351690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecf3fdb70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ecf3fdb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecf3f3610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ece68e9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ece64e360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f5ece681d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece68d260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ece68d260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ece64ebf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ece6839b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ecf3fdb70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece64bdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece654020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece654020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece648440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece652760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece652760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece647760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece651a80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece651a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5ecf3f1b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5ecfd73020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f5ecf3a79c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f5ecf356a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ecf3488c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf411020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf323c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf32d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf327c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf31ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf321e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf32b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5ecf315670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf3102f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5ecf325c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf324c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf31b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5ecf31de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf320670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf32f970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf32ad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf314a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf329ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf32a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf316e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf324480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf325480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf32e950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf317e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf318670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf316670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf30ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5ecf31c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf318e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf312ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf31e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5ecf327490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf323480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf31be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf320e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf31a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf322670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5ecf32d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5ecf328e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5ecf3122f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf313ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf3132f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f5ecf30e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf31ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf317670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5ecf32dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf32b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf31ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5ecf3287b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf31d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf315e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf30c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f5ecf2e0920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f5ecf2dc940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ecf2e69a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ecf2dc080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf2bce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ecf2c0020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5ecf2bbae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecf2bd690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5ecf2bd690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecfaca280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ecf2ba8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ecf2e2a20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf2b8170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5ecf2a1200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5ecf29d570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf29c3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf2a1950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf29ca70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ecf264d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ecf26d6b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf263b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf26d020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf2622f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf260170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5ecf260b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ecf213410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f5ecf234db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f5ecf207800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecf202580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5ecf202580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5ecfaca280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecf1ee1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecff3f020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf121c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ecf11d970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ed0020630"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf11c5a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f5ecee83d70"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f5ecf0edb10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f5ecee81650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f5ecf0e92c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f5ecef4e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecf0ee7c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f5ece572490"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f5ecee7f020"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ecef4d740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f5ece574200"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f5ecf0eb2e0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f5ecf0e0370"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f5ecf0e5a70"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f5ecf0de1d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5ecf0e92c0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f5ecf0df320"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f5ecf0edb10"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f5ecf0e3d00"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecf0ee7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ecef6b520"/></to>
    </wire>
    <wire loc="98:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ecef6b520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ece5529d0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f5ecf0deaf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecef6ab20"/></to>
    </wire>
    <wire loc="100:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecef6ab20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ece550020"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f5ecf0cd8d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f5eceffb0c0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f5ecf0c76d0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f5ed02969a0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f5ecf0c5640"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f5ed02949a0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f5ecf0c3540"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f5ed02929a0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f5ecf0c1540"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f5ed02909a0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f5ecf0bf540"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f5ed028e9a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f5ecf0bd540"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f5ed028c9a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f5ecf0bb540"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f5ed028a9a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f5ecf0b9540"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f5ed02879a0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f5ecf0db780"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f5ed0696060"/></to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f5ecf0cb020"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f5ed0686b10"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f5ecf0ca560"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f5ed068c0c0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f5ecf0c99e0"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f5ed067ecf0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f5ecf0c8850"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f5ed0683aa0"/></to>
    </wire>
    <wire loc="99:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecef6a3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece551850"/></to>
    </wire>
    <wire loc="101:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece550910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecef69570"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5ece54f120"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f5ece5559c0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5ece54fc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f5ecef52d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f5eceee8cb0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f5eceee4030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f5ecef4e1d0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5eceee0020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ecef4d740"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f5eceee4d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f5ecef48240"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f5eceee39c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f5ecef48e00"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f5ecef45a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5eceeaf4e0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5eceeaf4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f5ecef3f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5eceea8020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5eceea8020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f5ecef3a6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5eceea2b40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5eceea2b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f5ecef479a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f5eceffb0c0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f5eceede7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SendingBufferC" loc="4:SendingBufferC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SendingBuffer_AppC.AMSenderC" loc="47(SendingBuffer_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AMSenderC.SenderC" loc="47(SendingBuffer_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingBuffer_AppC.R_A" loc="43(SendingBuffer_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.R_B" loc="43(SendingBuffer_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.Timer1" loc="44(SendingBuffer_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.Timer2" loc="44(SendingBuffer_AppC.Timer2):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AutoAdc" loc="43(SendingBuffer_AppC.AutoAdc):../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../..//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../..//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../..//tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC" loc="42(SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC):../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f5ed0658890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f5ed0658c30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f5ed0657020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f5ed06573a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f5ed0657720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f5ed0657a90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f5ed0657e20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f5ed0655200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f5ed06555d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f5ed061ae70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f5ed0617270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f5ed024c190" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f5ed024c540" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f5ed024c8f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f5ed024cca0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f5ed024b060" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5ed00b7e00" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5ed009d020" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5ed0099ac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f5ed0075c80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5ecfdb09d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5ecfdb09d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5ecfd6d120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5ecfd6d120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5ecfd59270" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5ecfd59270"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5ecfd59a40" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5ecfd59a40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5ecfd59e30" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5ecfd59e30"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5ecfd58650" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5ecfd58650"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5ecfd58a20" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f5ecfd57290" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f5ecfd57290"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5ecfd37500" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5ecfd37500"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5ecfd37cd0" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5ecfd37cd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5ecfd35120" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5ecfd35120"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5ecfd35900" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5ecfd35900"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5ecfd35cd0" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5ecf8ad020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f5ecf8a00d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f5ecf885800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecf648020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecf648020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ecf6487b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecf6487b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecf424a60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecf424a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecf3d8cc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecf3d8cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecf3a2230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecf3a2230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5ecf3a2560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5ecf127390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../..//tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5ecefc4850" loc="83:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../..//tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f5ecefbc3d0" loc="42:../../../..//tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../..//tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f5ed0707520" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed0707520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed07078a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5ed070a080" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5ed070a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5ed070a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ed07094e0" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed07094e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0709860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5ed07014e0" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f5ed07014e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0701860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ed07056d0" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed07056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0705a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f5ed0705de0" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f5ed0705de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0701180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f5ed0701bc0" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f5ed0701bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0700020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ed0704a20" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed0704a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0704da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f5ed0702be0" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f5ed0702be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed06e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5ed06d92c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5ed06d92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5ed06df1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5ed06d97d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5ed06d9960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5ed06d9af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5ed06d9640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5ed06d9c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5ed06d9e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5ed06df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ed06e3b60" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed06e3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed06e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5ed06c9020" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5ed06c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5ed06c8020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5ed06c9530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5ed06c96c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5ed06c9850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5ed06c93a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5ed06c99e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5ed06c9b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5ed06c9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f5ed06c8360" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ed06c8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5ed06c86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ed06ca940" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed06ca940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed06cacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f5ed06855a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f5ed06855a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed0685920"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed0685ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0685c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed0685dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed0684020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed06841b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed0684340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed06844d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed0684660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f5ed0673020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f5ed0673020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed06733a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed0673530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed06736c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed0673850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed06739e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0673b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed0673d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed0672020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed06721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f5ed067c700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f5ed067c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed067ca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed067cc10"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed067cda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed067b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed067b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed067b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f5ed0660a20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f5ed0660a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0660da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed065f020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed065f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed065f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed065f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed065f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f5ed0683aa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f5ed0683aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0683e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0682020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed06821b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0682340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed06824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f5ed0666020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f5ed0666020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed06663a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0666530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed06666c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0666850"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed06669e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f5ed065da20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f5ed065da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed065dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed065c020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed065c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed065c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed065c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed065c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f5ed066d5a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f5ed066d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed066d920"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed066dab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed066dc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed066ddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed066c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed066c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed066c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed066c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed066c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f5ed0686b10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f5ed0686b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed068d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed068d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed068d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed068d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed068d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed068d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed068d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed068db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed068dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f5ed0662a20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f5ed0662a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0662da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0661020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed06611b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0661340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed06614d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0661660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f5ed06683e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f5ed06683e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0668760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed06688f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed0668a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0668c10"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed0668da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f5ed06725a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f5ed06725a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed0672a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed0672bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0672d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed0671020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed06711b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0671340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed06714d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed0671660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed06717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f5ed067b700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f5ed067b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed067ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed067bc10"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed067bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0675020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed06751b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0675340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f5ed065fa20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f5ed065fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed065fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed065e020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed065e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed065e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed065e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed065e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f5ed0671be0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f5ed0671be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed066f020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed066f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed066f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed066f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed066f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed066f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed066f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed066fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed066fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f5ed0682890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f5ed0682890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0682c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0682da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed067d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed067d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed067d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f5ed0696060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f5ed0696060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed06963e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed0696570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0696700"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0696890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0696a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0696bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed0696d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed0695020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed06951b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed0695340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed06954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f5ed0666da0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f5ed0666da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0665180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0665310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed06654a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0665630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed06657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f5ed068c0c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f5ed068c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed068c440"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed068c5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed068c760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed068c8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed068ca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed068cc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed068cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed0685020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed06851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f5ed066ca50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f5ed066ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed066cdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed066b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed066b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed066b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed066b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed066b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed066b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed066b980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed066bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f5ed06766d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f5ed06766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0676a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0676be0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed0676d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed067c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed067c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed067c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f5ed0661a20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f5ed0661a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0661da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0660020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed06601b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0660340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed06604d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0660660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f5ed067ecf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f5ed067ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed06830a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0683230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed06833c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0683550"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed06836e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f5ed06671f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f5ed06671f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0667570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0667700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed0667890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0667a20"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed0667bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f5ed065ea20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f5ed065ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed065eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed065d020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed065d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed065d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed065d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed065d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f5ed066e0c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f5ed066e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed066e440"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed066e5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed066e760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed066e8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed066ea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed066ec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed066eda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed066d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed066d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f5ed06756c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f5ed06756c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed0675a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed0675bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0675d60"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0674020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed06741b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0674340"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed06744d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed0674660"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed06747f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed0674980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed0674b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f5ed0665b80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f5ed0665b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0664020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed06641b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed0664340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed06644d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed0664660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f5ed0663a20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f5ed0663a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0663da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0662020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed06621b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0662340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed06624d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0662660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f5ed0664a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f5ed0664a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0663020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed06631b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed0663340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed06634d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed0663660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f5ed0669570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f5ed0669570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed06698f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0669a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed0669c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0669da0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed0668020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f5ed066a020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f5ed066a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed066a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed066a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed066a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed066a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed066a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed066ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed066ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed0669020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed06691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5ed0624aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5ed0624aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed0624e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5ed0624450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5ed0624450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed06247d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5ed0622120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5ed0622120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed06224a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5ed0625d80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed0625d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed0624180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ed0626540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed0626540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed06268c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed0626a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0626be0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0626d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0625020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed06251b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed0625340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed06254d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed0625660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed06257f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed0625980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5ed061c940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5ed061c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed061ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5ed061c2f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5ed061c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed061c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5ed061b020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5ed061b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed061b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5ed061dbf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed061dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed061c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ed061e3e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed061e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed061e760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed061e8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed061ea80"/>
        <function-ref name="get" scoped="" ref="0x7f5ed061ec10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed061eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed061d020"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed061d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed061d340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed061d4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed061d660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed061d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05d0a90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05d0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05d0e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05cf020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05cf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05cf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05cf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed06189d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed06189d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed0618d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05d1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05d11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05d1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05d14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05d1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05d17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05d1980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05d1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05cd020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05d1de0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05d1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05d0180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05d0310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05d04a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05d0630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05d07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05cf930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05cf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05cfcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05cfe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05ce020"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05ce1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05ce340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05ce4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed05ce660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05ce7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05ce980"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed05ceb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05ceca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05c8160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05c8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05c84e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05c8670"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05c8800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05c8990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05c8b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05c8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05ca020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed05ca3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05ca530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05ca6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05ca850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05ca9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05cab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05cad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05c9020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05c57a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05c57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05c5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05c9480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05c9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05c9800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05c9990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05c9b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05c9cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05c9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05c7020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05c73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05c7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05c76c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05c7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05c79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05c7b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed05c7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05c5020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05c51b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed05c5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05c07a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05c07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05c0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05c0cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05c0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05bf020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05bf1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05bf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05c26d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05c26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed05c2a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05c2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05c2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05c1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05c11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05c1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05c14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05c1660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05c17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05bec50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05bec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05c1ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05c1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05c1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05c0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05c01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05c0340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05bf610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05bf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05bf990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05bfb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05bfcb0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05bfe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05be020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05be1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed05be340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05be4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05be660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed05be7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05be980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05b9cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05b9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05b80a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05b8230"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05b83c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05b8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05b86e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05b8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05bbb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05bbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed05ba020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05ba1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05ba340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05ba4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05ba660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05ba7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05ba980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05bab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05baca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05b52f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05b5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05b9020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05b93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05b9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05b96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05b9850"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05b99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05b8b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05b8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05b6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05b61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05b6340"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05b64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05b6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05b67f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed05b6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05b6b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05b6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed05b6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05b02f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05b0670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05b0800"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05b0990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05b0b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05b0cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05b0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05b2220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05b2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed05b25a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05b2730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05b28c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05b2a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05b2be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05b2d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05b1020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05b11b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05b1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05ae7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05ae7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05aeb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05b1610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05b1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05b1990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05b1b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05b1cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05b1e40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05af160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05af160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05af4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05af670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05af800"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05af990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05afb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05afcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed05afe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05ae020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05ae1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed05ae340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05a97a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05a97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05a9b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05a9cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05a9e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05a8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05a81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05ab6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05ab6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed05aba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05abbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05abd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05aa020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05aa1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05aa340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05aa4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05aa660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05a7c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05a7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05aaac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05aaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05aae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05a9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05a91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05a9340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05a8610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05a8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05a8990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05a8b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05a8cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05a8e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05a7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05a71b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed05a7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05a74d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05a7660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed05a77f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05a1cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05a1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05a00a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed05a0230"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05a03c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05a0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05a06e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed05a0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05a3b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05a3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed05a2020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed05a21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed05a2340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed05a24d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05a2660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed05a27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05a2980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed05a2b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05a2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed059e2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed059e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed059e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed05a1020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed05a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05a13a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed05a1530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05a16c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed05a1850"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05a19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed05a0b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed05a0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed059f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed059f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed059f340"/>
        <function-ref name="get" scoped="" ref="0x7f5ed059f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed059f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed059f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed059f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed059fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed059fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed059fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed059e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05992f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0599670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0599800"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed0599990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0599b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed0599cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0599e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed059b220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed059b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed059b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed059b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed059b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed059ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed059bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed059bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed059a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed059a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed059a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05977a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed0597b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed059a610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed059a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed059a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed059ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed059acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed059ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed0599020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed0598160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed0598160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed05984e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed0598670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0598800"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0598990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0598b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0598cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed0598e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed0597020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed05971b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed0597340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed05974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed05917a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed05917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0591b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0591cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed0591e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0590020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05901b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0590340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed05936d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed05936d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed0593a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed0593be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0593d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed0592020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed05921b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0592340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed05924d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed0592660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed05927f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed058fc50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed058fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed058e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed0592ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed0592ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed0592e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed0591020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed05911b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed0591340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed05914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed0590610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed0590610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed0590990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed0590b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0590cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0590e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed058f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed058f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed058f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed058f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed058f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed058f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed058f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ed058acb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ed058acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed05890a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ed0589230"/>
        <function-ref name="captured" scoped="" ref="0x7f5ed05893c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed0589550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed05896e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ed0589870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5ed058cb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5ed058cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ed058b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ed058b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed058b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ed058b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ed058b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed058b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ed058b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ed058bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ed058bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5ed05872f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5ed05872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed0587670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ed058a020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5ed058a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ed058a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ed058a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ed058a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ed058a850"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed058a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ed0589b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ed0589b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed0588020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ed05881b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ed0588340"/>
        <function-ref name="get" scoped="" ref="0x7f5ed05884d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ed0588660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ed05887f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ed0588980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ed0588b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ed0588ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ed0588e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ed0587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f5ed0580240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5ed0580240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05805c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f5ed0584a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5ed0584a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed0584e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f5ed0581260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5ed0581260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed05815e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f5ed05819f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5ed05819f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ed0581d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f5ed08284c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ed08284c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5ed0828840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f5ed0b3c3b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f5ed0b3c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f5ed0b3c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5ed0b3c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5ed0b3ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f5ed0964bc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f5ed0964bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5ed0aa0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f5ed06e1b40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5ed06e1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5ed0549b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5ed05491b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5ed0549340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5ed05494d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5ed0549020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5ed0549660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5ed05497f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5ed0549980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5ed053ddc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ed053ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed053c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5ed054a590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5ed054a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5ed054a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5ed053d6c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f5ed053d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed053da40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5ed054ac00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5ed054ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed053d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5ed053d1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5ed053d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5ed102d410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed102d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed102d790"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed102d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5ed0ba23a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5ed0ba23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed0ba2720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5ed0ba28b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5ed0ba2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5ed074e040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5ed074e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed074e3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed074e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f5ed074a490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f5ed074a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f5ed074a810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5ed074a9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5ed074ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5ed0750140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5ed0750140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed07504c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5ed0750650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5ed07507e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiChannel" ref="0x7f5ed047e3a0" loc="21:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f5ed047e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ed047e720"/>
        <function-ref name="configure" scoped="" ref="0x7f5ed047e8b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ed047ea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7f5ed04c4220" loc="11:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7f5ed04c4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ed04c45a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f5ed04ac7a0" loc="17:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f5ed04ac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ed04acb20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ed04accb0"/>
        <function-ref name="start" scoped="" ref="0x7f5ed04ace40"/>
        <function-ref name="stop" scoped="" ref="0x7f5ed04b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5ed052ec40" loc="8:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5ed052ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5ed052d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getData" ref="0x7f5ed0364380" loc="589:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getData" scoped="" ref="0x7f5ed0364380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed0364700"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed0364890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5ed04a25f0" loc="18:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ed04a25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed04a2970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ed04a2b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed04a2c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed04a2e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ed04b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5ed04c88f0" loc="10:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ed04c88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ed04c8c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed04c8e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed0521020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ed05211b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ed0521340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7f5ed046d480" loc="66:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f5ed046d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed046d800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed046d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7f5ed04692a0" loc="69:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7f5ed04692a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed0469620"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed04697b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f5ed04bb9e0" loc="13:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f5ed04bb9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ed04b8020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed04c6510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ed04b9300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ed04c6e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ed04b8920"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ed04b84a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ed04c6990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ed04d5670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ed04b9910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ed04d5b40"/>
        <function-ref name="stop" scoped="" ref="0x7f5ed04c6090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7f5ed04c48e0" loc="12:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7f5ed04c48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ed04c4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f5ed0477c40" loc="23:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f5ed0477c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f5ed047d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7f5ed046e4f0" loc="65:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7f5ed046e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed046e870"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed046ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ed0522590" loc="7:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ed0522590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ed0522910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ed0522aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ed0522c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ed0522dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ed052e020"/>
        <function-ref name="get" scoped="" ref="0x7f5ed052e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ed052e340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ed052e980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed052e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ed052e660"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ed052e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7f5ed046c3b0" loc="67:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7f5ed046c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed046c730"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed046c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5ed04799f0" loc="22:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ed04799f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ed0479d70"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ed049d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ed049d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5ed049e810" loc="20:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ed049e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ed049eb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ed049ed20"/>
        <function-ref name="request" scoped="" ref="0x7f5ed04ab020"/>
        <function-ref name="granted" scoped="" ref="0x7f5ed04ab1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ed04ab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f5ed04b7020" loc="14:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f5ed04b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ed04b3630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ed04b6a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ed04b4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ed04b44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ed04b2020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ed04b3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ed04b4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ed04b7c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ed04b3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ed04b6110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ed04b65e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7f5ed04682b0" loc="70:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7f5ed04682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed0468630"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed04687c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7f5ed046a2f0" loc="68:SendingBufferC.nc">
      <component-ref qname="SendingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7f5ed046a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed046a670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed046a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5ed0322260" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ed0322260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ed03225e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ed0322770"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ed0322900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ed0322a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ed0322c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0322db0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ed0321020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ed0321660"/>
        <function-ref name="set" scoped="" ref="0x7f5ed03211b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ed0321340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ed03214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f5ed03141d0" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5ed03141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0314550"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed03146e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0314870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0314a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0314b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0314d20"/>
        <function-ref name="set" scoped="" ref="0x7f5ed031a020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed031a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ed031e5c0" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed031e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed031e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f5ed031a4d0" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5ed031a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed031a850"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed031a9e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed031ab70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed031ad00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0319020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed03191b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0319340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed03194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5ed031ebc0" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ed031ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ed031c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ed031c1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ed031c340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ed031c4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ed031c660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed031c7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ed031c980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ed031b020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed031cb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ed031cca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ed031ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f5ed03197f0" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5ed03197f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0319b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0319d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0313020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed03131b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0313340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed03134d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0313660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed03137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5ed031fd90" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5ed031fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02f8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02f8310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02f84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02f8630"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02f87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02f8950"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02f8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02f8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5ed02f7020" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5ed02f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02f7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02f76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02f7850"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02f79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02f7b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02f7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f5ed02f5600" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ed02f5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ed02f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5ed02f6380" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5ed02f6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02f6700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02f6890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02f6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02f6bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02f6d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02f5020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5ed02df810" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5ed02df810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02dfb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02dfd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02de020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02de340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02de660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02de7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02de980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02deb10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02deca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02dee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02dd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02dd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02dd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5ed02cb810" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5ed02cb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02cbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02cbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02ca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02ca340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02ca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02ca660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02ca7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02ca980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02cab10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02caca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02cae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02c9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02c92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02c9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f5ed0281ca0" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f5ed0281ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0280230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02803c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0280550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02806e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0280870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0280a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0280b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0280d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed027f020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed027f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed027f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed027f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed027f760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed027f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f5ed025dcb0" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f5ed025dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed025c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed025c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed025c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed025c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed025c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed025c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed025ca00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed025cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed025cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed025b020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed025b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed025b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed025b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed025b760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed025b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f5ed027fcc0" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f5ed027fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed027e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed027e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed027e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed027e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed027e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed027e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed027ea00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed027eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed027ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed027d020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed027d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed027d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed027d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed027d760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed027d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f5ed02c7810" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f5ed02c7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02c7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02c7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02c61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02c6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02c64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02c6660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02c67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02c6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02c6b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02c6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02c6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02c5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02c52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02c5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f5ed02b29a0" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f5ed02b29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02b2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02b1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02b11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02b1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02b14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02b1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02b17f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02b1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02b1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02b1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02b1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02b0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02b01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02b0440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02b05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f5ed029e9a0" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f5ed029e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed029ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed029d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed029d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed029d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed029d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed029d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed029d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed029d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed029db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed029dca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed029de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed029c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed029c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed029c440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed029c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f5ed028e9a0" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f5ed028e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed028ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed028d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed028d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed028d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed028d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed028d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed028d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed028d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed028db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed028dca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed028de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed028c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed028c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed028c440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed028c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f5ed0279cc0" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f5ed0279cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0278230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02783c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0278550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02786e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0278870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0278a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0278b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0278d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0277020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0277340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0277760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f5ed0269cb0" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f5ed0269cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0268230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02683c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0268550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02686e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0268870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0268a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0268b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0268d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0267020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0267340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0267760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f5ed0254cc0" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f5ed0254cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02530a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0253230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02533c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0253550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02536e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0253870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0253a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0253b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0253d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0252020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02521b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0252340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02524d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0252760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02528f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5ed02d9810" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5ed02d9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02d9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02d9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02d81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02d8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02d84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02d8660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02d87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02d8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02d8b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02d8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02d8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02d7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02d72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02d7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f5ed0277cc0" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f5ed0277cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0276230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02763c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0276550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02766e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0276870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0276a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0276b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0276d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0275020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0275340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0275760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5ed02d5810" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5ed02d5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02d5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02d5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02d41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02d4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02d4660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02d47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02d4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02d4b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02d4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02d4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02d3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02d32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02d3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f5ed02c1810" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f5ed02c1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02c1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02c1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02c01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02c0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02c04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02c0660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02c07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02c0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02c0b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02c0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02c0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02bf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02bf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02bf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f5ed02ac9a0" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f5ed02ac9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02acd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02ab020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02ab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02ab340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02ab4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02ab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02ab7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02ab980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02abb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02abca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02abe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02aa020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02aa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02aa440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02aa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f5ed02989a0" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f5ed02989a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0298d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0297020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02971b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0297340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02974d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0297660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02977f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0297980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0297b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0297ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0297e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0296020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02961b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0296440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02965d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f5ed02879a0" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f5ed02879a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0287d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0286020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02861b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0286340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02864d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0286660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02867f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0286980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0286b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0286ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0286e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0285020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02851b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0285440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02855d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5ed02e3810" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5ed02e3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02e3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02e3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02e2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02e2660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02e27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02e2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02e2b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02e2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02e2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02e1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02e12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02e1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5ed02cf810" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5ed02cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02cfc90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02cfe20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02ce340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02ce660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02ce7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02ce980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02ceb10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02ceca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02cee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02cd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02cd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02cd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f5ed02bb810" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f5ed02bb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02bbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02bbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02ba340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02ba660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02ba7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02ba980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02bab10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02baca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02bae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02b9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02b92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02b9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f5ed0283cc0" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f5ed0283cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02820a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0282230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02823c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0282550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02826e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0282870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0282a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0282b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0282d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0281020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0281340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0281760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f5ed0263cb0" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f5ed0263cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0262230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02623c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0262550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02626e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0262870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0262a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0262b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0262d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0261020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0261340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0261760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f5ed0256cb0" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f5ed0256cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0255230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02553c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0255550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02556e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0255870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0255a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0255b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0255d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0254020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0254340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0254760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f5ed026fcc0" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f5ed026fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed026e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed026e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed026e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed026e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed026e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed026e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed026ea00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed026eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed026ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed026d020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed026d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed026d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed026d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed026d760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed026d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f5ed02b6810" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f5ed02b6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02b6d90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02b5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02b51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02b5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02b54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02b5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02b57f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02b5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02b5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02b5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02b5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02b4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02b41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02b4440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02b45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f5ed02a29a0" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f5ed02a29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02a2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02a1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02a11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02a14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02a17f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02a1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02a1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02a1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02a1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02a0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02a01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02a0440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02a05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f5ed02929a0" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f5ed02929a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0292d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0291020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02911b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0291340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02914d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0291660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02917f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0291980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0291b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0291ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0291e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0290020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02901b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0290440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02905d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f5ed0261cb0" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f5ed0261cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0260230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02603c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0260550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02606e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0260870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0260a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0260b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0260d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed025f020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed025f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed025f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed025f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed025f760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed025f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f5ed0275cb0" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f5ed0275cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0274230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02743c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0274550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02746e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0274870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0274a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0274b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0274d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0273020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0273340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0273760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5ed02dd810" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5ed02dd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02ddb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02ddd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02dc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02dc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02dc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02dc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02dc660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02dc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02dc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02dcb10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02dcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02dce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02db020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02db2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02db440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5ed02c9810" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5ed02c9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02c9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02c9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02c8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02c8660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02c87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02c8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02c8b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02c8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02c8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02c7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02c72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02c7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f5ed02969a0" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f5ed02969a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0296d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0295020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02951b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0295340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02954d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0295660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02957f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0295980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0295b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0295ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0295e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0294020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02941b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0294440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02945d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f5ed02c5810" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f5ed02c5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02c5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02c5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02c4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02c4660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02c47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02c4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02c4b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02c4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02c4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02c3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02c32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02c3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f5ed02b09a0" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f5ed02b09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02b0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02af020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02af1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02af340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02af4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02af660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02af7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02af980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02afb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02afca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02afe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02ae020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02ae1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02ae440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02ae5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f5ed029c9a0" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f5ed029c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed029cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed029b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed029b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed029b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed029b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed029b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed029b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed029b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed029bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed029bca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed029be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed029a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed029a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed029a440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed029a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f5ed028c9a0" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f5ed028c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed028cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed028b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed028b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed028b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed028b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed028b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed028b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed028b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed028bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed028bca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed028be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed028a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed028a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed028a440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed028a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f5ed0271cc0" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f5ed0271cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0270230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02703c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0270550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02706e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0270870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0270a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0270b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0270d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed026f020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed026f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed026f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed026f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed026f760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed026f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5ed02e6870" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5ed02e6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02e6bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02e6d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02f01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02f0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02f04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02f0660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02f07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02f0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02f0b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02f0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02f0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02ef020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02ef2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02ef440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5ed02d3810" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5ed02d3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02d3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02d3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02d2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02d21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02d2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02d24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02d2660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02d27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02d2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02d2b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02d2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02d2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02d1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02d12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02d1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f5ed02bf810" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f5ed02bf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02bfb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02bfd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02be020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02be340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02be4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02be660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02be7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02be980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02beb10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02beca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02bee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02bd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02bd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02bd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f5ed02aa9a0" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f5ed02aa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02aad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02a9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02a91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02a9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02a94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02a9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02a97f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02a9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02a9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02a9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02a9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02a81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02a8440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02a85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f5ed026dcc0" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f5ed026dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed026c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed026c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed026c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed026c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed026c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed026c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed026ca00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed026cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed026cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed026b020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed026b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed026b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed026b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed026b760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed026b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f5ed0267cb0" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f5ed0267cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0266230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02663c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0266550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02666e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0266870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0266a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0266b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0266d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0265020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0265340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0265760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f5ed025bcb0" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f5ed025bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0259230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02593c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0259550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02596e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0259870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0259a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0259b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0259d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0258020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02581b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0258340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02584d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0258760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f5ed02a69a0" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f5ed02a69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02a6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02a5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02a51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02a5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02a54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02a5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02a57f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02a5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02a5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02a5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02a5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02a4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02a41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02a4440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02a45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f5ed026bcc0" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f5ed026bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed026a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed026a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed026a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed026a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed026a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed026a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed026aa00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed026ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed026ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0269020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0269340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0269760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5ed02e1810" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5ed02e1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02e1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02e1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02e01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02e0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02e0660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02e07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02e0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02e0b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02e0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02e0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02df020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02df2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02df440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5ed02cd810" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5ed02cd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02cdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02cdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02cc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02cc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02cc660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02cc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02cc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02ccb10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02ccca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02cce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02cb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02cb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02cb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f5ed02b9810" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f5ed02b9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02b9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02b9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02b7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02b7660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02b77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02b7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02b7b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02b7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02b7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02b6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02b62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02b6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f5ed0273cc0" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f5ed0273cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02720a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0272230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02723c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0272550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02726e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0272870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0272a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0272b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0272d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0271020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0271340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0271760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f5ed025fcb0" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f5ed025fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed025e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed025e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed025e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed025e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed025e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed025e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed025ea00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed025eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed025ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed025d020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed025d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed025d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed025d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed025d760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed025d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f5ed02b49a0" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f5ed02b49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02b4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02b3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02b31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02b3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02b34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02b3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02b37f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02b3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02b3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02b3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02b3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02b2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02b21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02b2440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02b25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f5ed02a09a0" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f5ed02a09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02a0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed029f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed029f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed029f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed029f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed029f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed029f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed029f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed029fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed029fca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed029fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed029e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed029e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed029e440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed029e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f5ed02909a0" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f5ed02909a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0290d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed028f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed028f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed028f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed028f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed028f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed028f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed028f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed028fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed028fca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed028fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed028e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed028e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed028e440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed028e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5ed02db810" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5ed02db810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02dbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02dbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02da020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02da340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02da660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02da7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02da980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02dab10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02daca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02dae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02d9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02d92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02d9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f5ed02949a0" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f5ed02949a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0294d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0293020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02931b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0293340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02934d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0293660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02937f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0293980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0293b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0293ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0293e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0292020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02921b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0292440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02925d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5ed02d7810" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5ed02d7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02d7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02d7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02d6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02d6660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02d67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02d6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02d6b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02d6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02d6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02d5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02d52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02d5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f5ed02c3810" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f5ed02c3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02c3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02c3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02c2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02c2660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02c27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02c2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02c2b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02c2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02c2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02c1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02c12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02c1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f5ed02ae9a0" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f5ed02ae9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02aed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02ad020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02ad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02ad340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02ad4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02ad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02ad7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02ad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02adb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02adca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02ade30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02ac020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02ac1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02ac440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02ac5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f5ed029a9a0" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f5ed029a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed029ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0299020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0299340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0299660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02997f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0299980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0299b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0299ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0299e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0298020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02981b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0298440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02985d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f5ed028a9a0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f5ed028a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed028ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0288020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0288340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02884d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0288660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02887f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0288980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0288b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0288ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0288e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0287020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02871b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0287440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02875d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5ed02ef810" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5ed02ef810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02efb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02efd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02e4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02e41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02e4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02e44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02e4660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02e47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02e4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02e4b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02e4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02e4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02e3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02e32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02e3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5ed02d1810" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5ed02d1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02d1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02d1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02d0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02d0660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02d07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02d0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02d0b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02d0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02d0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02cf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02cf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02cf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f5ed02bd810" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f5ed02bd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02bdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02bdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02bc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02bc660"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02bc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02bc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02bcb10"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02bcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02bce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02bb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02bb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02bb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f5ed02a89a0" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f5ed02a89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02a8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02a7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02a7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02a74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02a7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02a77f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02a7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02a7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02a7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02a7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02a6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02a61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02a6440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02a65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f5ed027bca0" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f5ed027bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed027a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed027a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed027a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed027a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed027a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed027a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed027aa00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed027ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed027ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0279020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0279340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0279760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f5ed0265cb0" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f5ed0265cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0264230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02643c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0264550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02646e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0264870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0264a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0264b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0264d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0263020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0263340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0263760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f5ed027dcc0" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f5ed027dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed027c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed027c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed027c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed027c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed027c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed027c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed027ca00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed027cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed027cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed027b020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed027b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed027b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed027b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed027b760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed027b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f5ed02a49a0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f5ed02a49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02a4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed02a3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02a31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed02a3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02a34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02a3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02a37f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed02a3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02a3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed02a3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02a3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed02a2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02a21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed02a2440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02a25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f5ed0258cb0" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f5ed0258cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02570a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0257230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02573c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0257550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02576e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0257870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0257a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0257b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0257d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0256020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0256340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0256760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f5ed0252cc0" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f5ed0252cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0251230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02513c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0251550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02516e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0251870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0251a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0251b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0251d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0250020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0250340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0250760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f5ed02859f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f5ed02859f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02841c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0284350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02844e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0284670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0284800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0284990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0284b20"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0284cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0284e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0283020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02831b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0283340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02834d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0283760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02838f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed024dd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed024dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02260e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0226270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0226400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0226590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0226720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02268b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0226a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0226bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0226d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0225020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0225340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0225760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0222740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0222740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0222ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0222c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0222de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0221020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0221340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02214d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0221660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0221980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0221b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0221ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0221e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0220120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed021d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed021d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed021d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed021d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed021d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed021d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed021dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed021dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed021dde0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed021c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed021c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed021c340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed021c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed021c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed021c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed021ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed021cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0219d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0219d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02180e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0218270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0218400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0218590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0218720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02188b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0218a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0218bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0218d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0217020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0217340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0217760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0214740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0214740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0214ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0214c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0214de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0213020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0213340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02134d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0213660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0213980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0213b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0213ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0213e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0212120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed020f100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed020f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed020f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed020f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed020f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed020f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed020fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed020fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed020fde0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed020d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed020d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed020d340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed020d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed020d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed020d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed020da80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed020dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed020ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed020ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed02090e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0209270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0209400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0209590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0209720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed02098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0209a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0209bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0209d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0208020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed02081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0208340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed02084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0208760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0205740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0205740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0205ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0205c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0205de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0204020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed02041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0204340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed02044d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0204660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed02047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0204980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0204b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0204ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0204e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0203120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed02032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0200100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0200100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0200480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0200610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed02007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0200930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0200ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0200c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0200de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01ff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01ff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01ff340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01ff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01ff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01ff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01ffa80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01ffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01fcd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01fcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01fb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01fb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01fb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01fb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01fb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01fb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01fba40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01fbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01fbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01fa020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01fa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01fa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01fa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01fa760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01fa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01f7740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01f7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01f7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01f7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01f7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01f61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01f6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01f64d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01f6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01f67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01f6980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01f6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01f6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01f6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01f5120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01f2100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01f2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01f2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01f2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01f27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01f2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01f2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01f2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01f2de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01f1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01f11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01f1340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01f14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01f1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01f17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01f1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01f1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01eed80" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01eed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01ed180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01ed310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01ed4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01ed630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01ed7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01ed950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01edae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01edc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01ede00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01ec020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01ec760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01e8740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01e8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01e8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01e8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01e8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01e7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01e71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01e7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01e74d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01e7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01e77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01e7980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01e7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01e7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01e7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01e6120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01e3100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01e3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01e3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01e37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01e3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01e3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01e3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01e3de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01e2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01e21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01e2340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01e24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01e2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01e27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01e2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01e2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01dfd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01dfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01de0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01de270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01de400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01de590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01de720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01de8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01dea40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01debd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01ded60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01dd020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01dd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01dd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01dd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01dd760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01dd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01da740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01daac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01dac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01dade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01d94d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01d9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01d9980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01d9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01d9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01d9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01d8120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01d5100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01d5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01d5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01d57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01d5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01d5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01d5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01d5de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01d4340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01d4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01d1d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01d00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01d0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01d0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01d0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01d0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01d08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01d0a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01d0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01d0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01cf020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01cf760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01cc740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01ccac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01ccc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01ccde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01cb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01cb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01cb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01cb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01cb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01cb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01cb980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01cbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01cbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01cbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01ca120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01c7100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01c7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01c7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01c7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01c77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01c7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01c7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01c7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01c7de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01c5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01c51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01c5340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01c54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01c5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01c57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01c5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01c5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01c2d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01c2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01c10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01c1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01c1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01c1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01c1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01c18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01c1a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01c1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01c1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01c0020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01c01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01c0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01c04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01c0760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01c08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01bd740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01bd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01bdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01bdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01bdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01bc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01bc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01bc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01bc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01bc980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01bcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01bcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01bce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01bb120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01b8100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01b8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01b8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01b87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01b8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01b8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01b8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01b8de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01b7340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01b4e60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01b4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01b3210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01b33a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01b3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01b36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01b3850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01b39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01b3b70"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01b3d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01b2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01b21b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01b2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01b24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01b2660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01b28f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01b2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01af9f0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01af9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01afd70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01ae020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01ae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01ae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01ae4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01ae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01ae7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01ae980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01aeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01aeca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01aee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01ad020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01ad1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01ad440"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01ad5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01aa460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01aa460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01aa7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01aa970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01aab00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01aac90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01aae20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01a91b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01a9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01a94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01a9660"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01a97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01a9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01a9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01a9da0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01a6e00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01a6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01a51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01a5350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01a54e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed01a5670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01a5800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01a5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01a5b20"/>
        <function-ref name="get" scoped="" ref="0x7f5ed01a5cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01a5e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed01a4020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed01a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed01a4760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed01a1740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed01a1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01a1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed01a1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01a1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed019f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed019f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed019f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed019f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed019f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed019f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed019f980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed019fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed019fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed019fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed019e120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed019e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed019b100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed019b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed019b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed019b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed019b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed019b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed019bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed019bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed019bde0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed019a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed019a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed019a340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed019a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed019a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed019a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed019aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed019ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0197d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0197d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0196270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0196400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0196590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0196720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0196a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0196bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0196d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0195020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0195340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0195760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0192740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0192740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0192ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0192c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0192de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0191020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0191340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01914d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0191660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0191980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0191b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0191ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0191e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0190120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed018d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed018d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed018d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed018d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed018d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed018d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed018dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed018dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed018dde0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed018c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed018c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed018c340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed018c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed018c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed018c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed018ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed018cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0189d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0189d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01880e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0188270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0188400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0188590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0188720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01888b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0188a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0188bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0188d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0187020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01871b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0187340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01874d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0187760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01878f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0184740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0184740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0184ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0184c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0184de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0183020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01831b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0183340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01834d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0183660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01837f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0183980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0183b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0183ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0183e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0182120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed017f100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed017f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed017f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed017f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed017f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed017f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed017fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed017fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed017fde0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed017e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed017e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed017e340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed017e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed017e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed017e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed017ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed017ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed017ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed017ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed01790e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0179270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0179400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0179590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0179720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed01798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0179a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0179bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed0179d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0178020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0178340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0178760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0175740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0175740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0175ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0175c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0175de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0174020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0174340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01744d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0174660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0174980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0174b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0174ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0174e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0173120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0170100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0170100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0170480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0170610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01707a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0170930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0170ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0170c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0170de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed016f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed016f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed016f340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed016f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed016f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed016f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed016fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed016fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed016cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed016cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed016b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed016b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed016b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed016b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed016b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed016b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed016ba40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed016bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed016bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed016a020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed016a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed016a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed016a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed016a760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed016a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0167740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0167740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0167ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0167c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0167de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0166020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01661b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0166340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01664d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0166660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01667f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0166980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0166b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0166ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0166e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0165120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0162100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0162100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0162480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0162610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01627a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0162930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0162ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0162c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0162de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0161020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0161340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0161660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0161a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed0161c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed015ed10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed015ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed015d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed015d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed015d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed015d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed015d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed015d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed015da40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed015dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed015dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed015c020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed015c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed015c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed015c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed015c760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed015c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0159740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0159740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0159ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0159c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed0159de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0157020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0157340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01574d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0157660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0157980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0157b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0157ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0157e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0156120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0153100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0153100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0153480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0153610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01537a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0153930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0153ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0153c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0153de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0152020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0152340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0152660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0152a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed0152c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed014fd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed014fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed014e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed014e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed014e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed014e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed014e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed014e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed014ea40"/>
        <function-ref name="get" scoped="" ref="0x7f5ed014ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed014ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed014d020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed014d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed014d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed014d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed014d760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed014d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed014a740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed014a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed014aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed014ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed014ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0149020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed01491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0149340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed01494d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0149660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0149980"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0149b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0149ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed0149e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0148120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed01482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ed0145100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5ed0145100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed0145480"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed0145610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed01457a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed0145930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed0145ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed0145c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed0145de0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed0144020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed01441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed0144340"/>
        <function-ref name="set" scoped="" ref="0x7f5ed01444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed0144660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed01447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed0144a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed0144c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ed00cd610" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ed00cd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed00cd990"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed00cdb20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed00cdcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed00cde40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed00cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed00cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed00cc340"/>
        <function-ref name="get" scoped="" ref="0x7f5ed00cc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed00cc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed00cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed00cc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed00ccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed00ccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed00cb020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed00cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ed00de440" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ed00de440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed00de7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed00de950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed00deae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed00dec70"/>
        <function-ref name="get" scoped="" ref="0x7f5ed00dee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed00cd020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed00cd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed00cd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ed00c82f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ed00c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed00c8670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed00c8800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed00c8990"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed00c8b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed00c8cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed00c8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed00c7020"/>
        <function-ref name="get" scoped="" ref="0x7f5ed00c71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed00c7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed00c74d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed00c7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed00c77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed00c7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed00c7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed00c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ed00c9020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ed00c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed00c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed00c9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed00c96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed00c9850"/>
        <function-ref name="get" scoped="" ref="0x7f5ed00c99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed00c9b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ed00c9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed00c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ed00c3de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ed00c3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed00c2180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed00c2310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ed00c24a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed00c2630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed00c27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ed00c2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed00c2ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed00c2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ed00c2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ed00c1020"/>
        <function-ref name="set" scoped="" ref="0x7f5ed00c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ed00c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ed00c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ed00c1760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed00c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ed00c4b90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ed00c4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ed00c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ed00c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ed00c3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ed00c34d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ed00c3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ed00c37f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed00c3980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ed00c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ecf12e020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ecf12e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf12e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf12e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf12e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf12e850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf12e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ecf12ec30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ecf12ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf12d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf12d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf12d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf12d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf12d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ecf12d8b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf12d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ecf12dc30"/>
        <function-ref name="source" scoped="" ref="0x7f5ecf12ddc0"/>
        <function-ref name="address" scoped="" ref="0x7f5ecf12c020"/>
        <function-ref name="destination" scoped="" ref="0x7f5ecf12c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ecf12c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ecf12c4d0"/>
        <function-ref name="type" scoped="" ref="0x7f5ecf12c660"/>
        <function-ref name="setType" scoped="" ref="0x7f5ecf12c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ecf12c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ecf12cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ecf12cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ecf12b020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5ecf12b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ecf12b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ecf12b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ecf12b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ece9aeb40" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ece9aeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ece9ad020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ece9ad1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ece9ad340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ece9ad4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ece9ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ece9ad8b0" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ece9ad8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ece9adc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ece9addc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ece9ac020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ece9ac1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ece9ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ece9ac590" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ece9ac590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ece9ac910"/>
        <function-ref name="source" scoped="" ref="0x7f5ece9acaa0"/>
        <function-ref name="address" scoped="" ref="0x7f5ece9acc30"/>
        <function-ref name="destination" scoped="" ref="0x7f5ece9acdc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ece9ab020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ece9ab1b0"/>
        <function-ref name="type" scoped="" ref="0x7f5ece9ab340"/>
        <function-ref name="setType" scoped="" ref="0x7f5ece9ab4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ece9ab660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ece9ab7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ece9ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ece9abc10" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5ece9abc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ece9aa020"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ece9aa1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ece9aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ece9a1bc0" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ece9a1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ece9a0020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ece9a01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ece9a0340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ece9a04d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ece9a0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5ece9a0910" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ece9a0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ece9a0c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ece9a0e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ece99e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ece99e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ece99e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ece99e590" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ece99e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ece99e910"/>
        <function-ref name="source" scoped="" ref="0x7f5ece99eaa0"/>
        <function-ref name="address" scoped="" ref="0x7f5ece99ec30"/>
        <function-ref name="destination" scoped="" ref="0x7f5ece99edc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ece99d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ece99d1b0"/>
        <function-ref name="type" scoped="" ref="0x7f5ece99d340"/>
        <function-ref name="setType" scoped="" ref="0x7f5ece99d4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ece99d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ece99d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ece99d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ed0079940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ed0079940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ed0079cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed0079e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed0076020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ed00761b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ed0076340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5ed002c400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ed002c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ed002c7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed002c930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed002cac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ed002cc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ed002cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ed002d4b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ed002d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ed002d850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed002d9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed002db70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ed002dd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ed002c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5ed0029720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ed0029720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed0029aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ed0029c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed0029dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed0028020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ed00281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5ed0028480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f5ed0028480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed0028800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed0028990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5ed0028c60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f5ed0028c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ed0027020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ed00271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ed002a060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ed002a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ed002a3e0"/>
        <function-ref name="source" scoped="" ref="0x7f5ed002a570"/>
        <function-ref name="address" scoped="" ref="0x7f5ed002a700"/>
        <function-ref name="destination" scoped="" ref="0x7f5ed002a890"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ed002aa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ed002abb0"/>
        <function-ref name="type" scoped="" ref="0x7f5ed002ad40"/>
        <function-ref name="setType" scoped="" ref="0x7f5ed0029020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ed00291b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ed0029340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ed00294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ed0023140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5ed0023140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ed00234c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ed0023650"/>
        <function-ref name="start" scoped="" ref="0x7f5ed00237e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ed0023970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ed00221d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ed00221d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ed0022550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed00226e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed0022870"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ed0022a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ed0022b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ed0020020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5ed0020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ed00203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ed0020630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ed0020630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ed00209b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ed0020b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ed0020cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ed0020e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ed001e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5ed0018cd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ed0018cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ed00132e0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ed0013a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ed001bb60"/>
        <function-ref name="set" scoped="" ref="0x7f5ed0012170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ed0007b20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ed0007b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ed000d020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ed000d1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ed000d340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ed000d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ed00213f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ed00213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ed0021770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ed001d990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ed001d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ed001dd10"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ed001c020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ed001c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ed001e2d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ed001e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ed001e650"/>
        <function-ref name="source" scoped="" ref="0x7f5ed001e7e0"/>
        <function-ref name="address" scoped="" ref="0x7f5ed001e970"/>
        <function-ref name="destination" scoped="" ref="0x7f5ed001eb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ed001ec90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ed001ee20"/>
        <function-ref name="type" scoped="" ref="0x7f5ed001d020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ed001d1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ed001d340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ed001d4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ed001d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ed0012dc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ed0012dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ed000f3f0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ed000fb20"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ed0011ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ed000e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ecfffa880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5ecfffa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecfffac00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecfffad90"/>
        <function-ref name="start" scoped="" ref="0x7f5ecfff9020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecfff91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5ecff56d40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff56d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecff5e0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecff5e270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecff5e400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecff5e590"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecff5e720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecff5e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ecff49d20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ecff49d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ecff4b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ecfff5760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ecfff5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfff5ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecfff5c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecfff5e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecfff4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecfff41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ecfff9980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ecfff9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecfff9d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecfff8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecfff81b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecfff8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecfff84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ecfff7900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5ecfff7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecfff7c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5ecffec970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecffec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecffeccf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecffece80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecfff3030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecfff31c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecfff3350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecfff34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ecff5ebb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecff5ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ecff5c020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ecff5c1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ecff5c340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ecff5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecfff8cb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecfff8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecfff70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ecfff3810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecfff3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ecfff3b90"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ecfff3d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ecfff2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ecff54020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5ecff54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ecff543a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ecff54530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ecff546c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ecff54850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ecff549e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ecfff6020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ecfff6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ecfff63a0"/>
        <function-ref name="source" scoped="" ref="0x7f5ecfff6530"/>
        <function-ref name="address" scoped="" ref="0x7f5ecfff66c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ecfff6850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ecfff69e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ecfff6b70"/>
        <function-ref name="type" scoped="" ref="0x7f5ecfff6d00"/>
        <function-ref name="setType" scoped="" ref="0x7f5ecfff5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ecfff51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ecfff5340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ecfff54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ecff5da80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecff5da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ecff5de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ecff48b70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff48b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecff45020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecff451b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ecff45340"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecff454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ecff3f9d0" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecff3f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ecff3fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ecff3eb70" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5ecff3eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ecff3d020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ecff3d1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ecff3d340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ecff3d4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ecff3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5ecff40140" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecff40140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecff404c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecff40650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecff407e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecff40970"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecff40b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecff40c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5ecff42d10" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecff42d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecff410e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecff41270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecff41400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecff41590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecff41720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ecff3e080" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecff3e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ecff3e400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ecff3e590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ecff3e720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ecff3e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5ecff43820" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5ecff43820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecff43ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ecff3f020" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecff3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ecff3f3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ecff3f530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ecff3f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecff45d00" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecff45d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecff440a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecff44230"/>
        <function-ref name="request" scoped="" ref="0x7f5ecff443c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecff44550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecff446e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5ecff44a00" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5ecff44a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecff44d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecff43020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecff431b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecff43340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecff434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5ecff42020" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5ecff42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecff423a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecff42530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecff426c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecff42850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecff429e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5ecff41a90" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecff41a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecff41e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ecff39390" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff39390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecff39710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecff398a0"/>
        <function-ref name="start" scoped="" ref="0x7f5ecff39a30"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecff39bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5ecff37330" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff37330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecff376b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecff37840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecff379d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecff37b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecff37cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecff37e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecff39e80" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecff39e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecff38220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecff383b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecff38540"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecff386d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecff38860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecff38b40" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecff38b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecff37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ecff36e80" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5ecff36e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecff33220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecff333b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ecff33540"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecff336d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5ecff327e0" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecff327e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecff32b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecff32cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecff32e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecff31030"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecff311c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecff31350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5ecff26060" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5ecff26060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecff263e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecff26570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecff26700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecff26890"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecff26a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecff26bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5ecff1b330" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecff1b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecff1b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecff1b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecff1b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecff1bb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecff1bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecff1be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f5ecff1d2a0" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5ecff1d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecff1d620"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecff1d7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f5ecff1d940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecff1dad0"/>
        <function-ref name="resend" scoped="" ref="0x7f5ecff1dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecff33990" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecff33990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecff33d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecff32020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecff321b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecff32340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecff324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ecff1a420" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5ecff1a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ecff1a7a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ecff1a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5ecff25760" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5ecff25760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecff25ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecff25c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecff13920" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecff13920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecff13ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecff13e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecff18020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f5ecff28b50" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecff28b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5ecff2f020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5ecff2f1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5ecff2f340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5ecff2f4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5ecff2f660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5ecff2f7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5ecff2f980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5ecff2fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecff1abf0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecff1abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecff1c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecff1c1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecff1c340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecff1c4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecff1c660"/>
        <function-ref name="get" scoped="" ref="0x7f5ecff1c7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecff1c980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecff1b020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecff1cb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecff1cca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecff1ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5ecff31640" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecff31640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecff319c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecff31b50"/>
        <function-ref name="request" scoped="" ref="0x7f5ecff31ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecff31e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecff30030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f5ecff17110" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f5ecff17110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecff17590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecff17720"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecff178b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecff17a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecff17bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecff17d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f5ecff09b70" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f5ecff09b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecff08020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecff081b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f5ecff0aba0" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f5ecff0aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecff09020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecff091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f5ecff0bc20" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f5ecff0bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecff0a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecff0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5ecfeb2dc0" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecfeb2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5ecfebe180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5ecfebe310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5ecfebe4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5ecfebe630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5ecfebe7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5ecfebe950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ecfebeae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5ecfebec70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5ecfebee00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5ecfebd020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5ecfebd1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5ecfebd340"/>
        <function-ref name="sync" scoped="" ref="0x7f5ecfebd4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ecfebd760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5ecfebd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5ecfeae0c0" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5ecfeae0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfeaecb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecfead170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5ecfebdbf0" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecfebdbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5ecfeb0020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5ecfeb01b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5ecfeb0340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5ecfeb04d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5ecfeb0660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5ecfeb07f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5ecfeb0980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5ecfeb0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecfec2950" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecfec2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfec2cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfec2e60"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfebf020"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfebf1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfebf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5ecfea7970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecfea7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5ecfea7cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5ecfea7e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5ecfea6030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5ecfea61c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5ecfea6350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5ecfea64e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ecfea6670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5ecfea6800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5ecfea6990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5ecfea6b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5ecfea6cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5ecfea6e40"/>
        <function-ref name="sync" scoped="" ref="0x7f5ecfea5020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ecfea52b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5ecfea5440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f5ecfe808e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecfe808e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe80c60"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe80df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f5ecfea1020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecfea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5ecfea13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f5ecfe99d90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f5ecfe99d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecfe97670"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfe985d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ecfe97020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecfe98a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ecfe97b30"/>
        <function-ref name="start" scoped="" ref="0x7f5ecfe9fbc0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecfe98110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f5ecfe835f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecfe835f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe83970"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe83b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f5ecfe95380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5ecfe95380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfe95700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfe95890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfe95a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfe95bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfe95d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfe93020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfe931b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfe93340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5ecfea4b40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5ecfea4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfea3750"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecfea3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f5ecfe6e820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f5ecfe6e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecfe6eba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecfe6ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f5ecfe7f1c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5ecfe7f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe7f540"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe7f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5ecfe7fa70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecfe7fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe7fdf0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f5ecfe883d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecfe883d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe88750"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe888e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5ecfe89810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecfe89810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5ecfe89b90"/>
        <function-ref name="changed" scoped="" ref="0x7f5ecfe89d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5ecfe90020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5ecfe901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5ecfe96060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5ecfe96060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfe963e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfe96570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfe96700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfe96890"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfe96a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfe96bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfe96d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfe95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f5ecfe7d120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecfe7d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecfe7d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f5ecfe936a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5ecfe936a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfe93a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfe93bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfe93d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfe92020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfe921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfe92340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfe924d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfe92660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecfea8510" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecfea8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecfea8890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5ecfe80020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecfe80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe803a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe80530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f5ecfe7da40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecfe7da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecfe7ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5ecfe7c1d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5ecfe7c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfe7c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfe7c6e0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfe7c870"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfe7ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfe7cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f5ecfe79d90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f5ecfe79d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfe78180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfe78310"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfe784a0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfe78630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfe787c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5ecfea5740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5ecfea5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5ecfea5ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5ecfea5c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5ecfea5de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5ecfea4020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5ecfea41b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5ecfea4340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5ecfea44d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5ecfea4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f5ecfe88c80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecfe88c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe830a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe83230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f5ecfe81b00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecfe81b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe81e80"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe88030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f5ecfe7a2b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5ecfe7a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecfe7a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecfe78a80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecfe78a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecfe78e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecfe77020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecfe771b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecfe77340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecfe774d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfe77660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecfe777f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecfe77e30"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfe77980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecfe77b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecfe77ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f5ecfe6f940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f5ecfe6f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecfe6fcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecfe6fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecfea8b80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecfea8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfea7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfea71b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfea7340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfea74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfea7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f5ecfe8d520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5ecfe8d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe8d8a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe8da30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f5ecfe85a90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecfe85a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfe8d020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfe8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f5ecfe910e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5ecfe910e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecfe91460"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfe915f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5ecfe91780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5ecfe91910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f5ecfe79020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f5ecfe79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfe793a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfe79530"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfe796c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfe79850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfe799e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f5ecfe7a9c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecfe7a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecfe7ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecfdf87e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecfdf87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecfdf8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5ecfdf5220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdf5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecfdf2b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfdf4a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ecfdf24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecfdf2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ecfdf1020"/>
        <function-ref name="start" scoped="" ref="0x7f5ecfdf4090"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecfdf45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecfdf0d40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecfdf0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecfdef0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5ecfdef5f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5ecfdef5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecfcf7e50"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfcf8e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ecfcf7800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecfcf7340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ecfcf6340"/>
        <function-ref name="start" scoped="" ref="0x7f5ecfcf8430"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecfcf8940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece925260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece925260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece922b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece924a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece9224e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece922020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece921020"/>
        <function-ref name="start" scoped="" ref="0x7f5ece924090"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece9245a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece9269d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece9269d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece926d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece91d2a0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece91d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece91bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece91caa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece91b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece91b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece91a020"/>
        <function-ref name="start" scoped="" ref="0x7f5ece91c0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece91c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece91ea10" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece91ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece91ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5ece905c10" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece905c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ece904020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ece9041b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ece904340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ece9044d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece904660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5ece9071b0" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece9071b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ece907530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ece9076c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece907850"/>
        <function-ref name="get" scoped="" ref="0x7f5ece9079e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece907b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ece907d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ece906020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ece9061b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ece906340"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ece9064d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ece906660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5ece9068f0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece9068f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ece906c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ece906e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece905020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ece9051b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ece905340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece9054d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ece905660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ece9057f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ece905980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5ecfdccba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ecfdccba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ecfdca020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ecfdca1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ecfdca340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ecfdca4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfdca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5ecfdcf4d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfdcf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfdcf850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecfdcf9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecfdcfb70"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfdcfd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecfdce020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfdce1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecfdce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfdce4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfdce660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ecfdce7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ecfdce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5ecfdcd280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfdcd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ecfdcd600"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ecfdcd790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecfdcd920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ecfdcdab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ecfdcdc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecfdcddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ecfdcc020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ecfdcc1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ecfdcc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f5ece8fba80" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece8fba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ece8fbe00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ece8fa020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ece8fa1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ece8fa340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece8fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5ece8fd020" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece8fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ece8fd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ece8fd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece8fd6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ece8fd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece8fd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ece8fdb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ece8fdd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ece8fc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ece8fc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ece8fc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ece8fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece902da0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece902da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece8fe670"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece900610"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece8fe020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece900ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece8feb30"/>
        <function-ref name="start" scoped="" ref="0x7f5ece901bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece900150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece902510" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece902510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece902890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5ece8fc760" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece8fc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ece8fcae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ece8fcc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece8fce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ece8fb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ece8fb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece8fb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ece8fb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ece8fb660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ece8fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ecfd7c020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecfd7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecfd7ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfd77800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfd77340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfd77cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f5ecfd73020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5ecfd73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecfd73e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfd72800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfd72340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfd72cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5ecfd602c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecfd602c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfd60640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecfd607d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecfd60960"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfd60af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecfd60c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfd60e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecfd5f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfd5f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfd5f340"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ecfd5f4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ecfd5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ecfd6e0a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecfd6e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecfd61020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfd619a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfd614e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfd61e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5ecfd3c020" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5ecfd3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecfd3ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfd3b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfd3b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfd3bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ecfd5aad0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecfd5aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecfd3f970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfd3e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfd3fe30"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecfd3e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece9185f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece9185f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece915e50"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece916e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece915800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece915340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece914340"/>
        <function-ref name="start" scoped="" ref="0x7f5ece916430"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece916940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f5ece912d20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f5ece912d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece90e670"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece90f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece90e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece90fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece90eb30"/>
        <function-ref name="start" scoped="" ref="0x7f5ece910b60"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece90f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ece9149b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ece9149b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ece9137e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ece9121b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ece913ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ece912670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f5ecfcf09c0" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5ecfcf09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcf0d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcef340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcef660"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f5ecfcefcf0" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5ecfcefcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcee230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcee3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcee550"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcee6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcee870"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfceea00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfceeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f5ecfced020" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5ecfced020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfced3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfced530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfced6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfced850"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfced9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcedb70"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcedd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f5ecfcf2690" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5ecfcf2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcf2a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcf2ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcf2d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcf0020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcf01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcf0340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcf04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcf0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f5ecfceb6a0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5ecfceb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfceba20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcebbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcebd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcea020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcea340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcea4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f5ecfcf33e0" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5ecfcf33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcf3760"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcf38f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcf3a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcf3c10"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcf3da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcf2020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcf21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcf2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f5ecfcec370" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5ecfcec370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcec6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcec880"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfceca10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcecba0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcecd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfceb020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfceb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfceb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfce8c50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfce8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfce7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfce71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfce7340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfce74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfce7660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfce77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfce7980"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfce7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfce7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfce7e30"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfce6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfce61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfce6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfce65d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfce6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfce9a20" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfce9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfce9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfce8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfce81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfce8340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfce84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfce8660"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfce87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfce8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfce37a0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfce37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfce3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfce3cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfce3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfce2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfce21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfce2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfce24d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfce2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfce27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfce2980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfce2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfce2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfce2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfce1120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfce12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfce4520" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfce4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfce48a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfce4a30"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfce4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfce4d50"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfce3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfce31b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfce3340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfce34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfcde2f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcde2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcde670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcde800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfcde990"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcdeb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcdecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfcdee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcdd020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcdd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfcdd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfcdd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcdd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfcdd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfcdd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfcddc10"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfcdf060" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcdf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcdf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcdf570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcdf700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcdf890"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcdfa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcdfbb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcdfd40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcde020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfcd9de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcd9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcd8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcd8310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfcd84a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcd8630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcd87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfcd8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcd8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcd8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfcd8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfcd7020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcd71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfcd7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfcd74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfcd7760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcd78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfcdbb70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcdbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcd9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcd91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcd9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcd94d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcd9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcd97f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcd9980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcd9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfcd4930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcd4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcd4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcd4e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfcd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcd31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcd3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfcd34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcd3660"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcd37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfcd3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfcd3b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcd3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfcd3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfcd2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfcd22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcd2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfcd5710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcd5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcd5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcd4020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcd4340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcd44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcd4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfccf480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfccf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfccf800"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfccf990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfccfb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfccfcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfccfe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfcce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcce1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcce340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfcce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfcce660"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcce7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfcce980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfcceb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfcceda0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfccd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfcd01b0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcd01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcd0530"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcd06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcd0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcd09e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcd0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfcd0d00"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfccf020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfccf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecfcca020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecfcca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfcca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfcca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfcca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfcca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfcca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfccab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfccad00"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfcc9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfcc91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfcc9340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfcc94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfcc9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfcc97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfcc9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfcc9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecfcccd70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfcccd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfccb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfccb310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfccb4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfccb630"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfccb7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfccb950"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfccbae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfccbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f5ecfcb15a0" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5ecfcb15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5ecfcb1920"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfcb1ab0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ecfcb1c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5ecfcb1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f5ecfcb6210" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5ecfcb6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecfcb6590"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfcb6720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5ecfcb68b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5ecfcb6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f5ecfcb6e30" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5ecfcb6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecfcb51e0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfcb5370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5ecfcb5500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5ecfcb5690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f5ecfc9bda0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f5ecfc9bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ecfc9a180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5ecfc9a310"/>
        <function-ref name="captured" scoped="" ref="0x7f5ecfc9a4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecfc9a630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecfc9a7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5ecfc9a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ecfc9d020" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5ecfc9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5ecfc9d3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc9d530"/>
        <function-ref name="captured" scoped="" ref="0x7f5ecfc9d6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5ecfc9d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5ecfc9dae0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ecfc9dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ecfc9de60"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ecfc9b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecfc9b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ecfc9b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ecfc9b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecfc9b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ecfc9b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ecfc9b980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ecfc9bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f5ecfc9ac20" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecfc9ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecfc99020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecfc991b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecfc99340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecfc994d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecfc99660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecfc997f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecfc99980"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfc99b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecfc99ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecfc99e30"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfc98020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecfc981b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecfc98340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecfc985d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecfc98760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5ecfc8bc40" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5ecfc8bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc8a020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc8a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc8a340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc8a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc8a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc8a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5ecfc81bc0" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5ecfc81bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc80020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc801b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc80340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc804d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc80660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5ecfc88bc0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5ecfc88bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc87020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc871b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc87340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc874d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc87660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5ecfc86bc0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5ecfc86bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc85020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc851b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc85340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc854d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc85660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5ecfc91d20" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5ecfc91d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc8c0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc8c270"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc8c400"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc8c590"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc8c720"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc8c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5ecfc83bc0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5ecfc83bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc820a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc82230"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc823c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc82550"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc826e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc82870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5ecfc8abc0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5ecfc8abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc89020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc891b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc89340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc894d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc89660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5ecfc80bc0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5ecfc80bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc7f020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc7f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc7f340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc7f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc7f660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc7f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5ecfc8ee70" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5ecfc8ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc92220"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc923b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc92540"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc926d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc92860"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc929f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5ecfc85bc0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5ecfc85bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc84020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc841b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc84340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc844d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc84660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5ecfc8cc80" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5ecfc8cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc8b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc8b230"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc8b3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc8b550"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc8b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc8b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5ecfc82c40" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5ecfc82c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc81020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc811b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc81340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc814d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc81660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5ecfc89bc0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5ecfc89bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc88020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc881b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc88340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc884d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc88660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5ecfc87bc0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5ecfc87bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc86020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc861b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc86340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc864d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc86660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5ecfc92dc0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5ecfc92dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc91180"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc91310"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc914a0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc91630"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc917c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc91950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5ecfc84bc0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5ecfc84bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc83020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc831b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc83340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc834d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc83660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5ecfc78a30" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5ecfc78a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc78db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc76020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc761b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc76340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc764d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5ecfc6dbc0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5ecfc6dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc6c020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc6c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc6c340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc6c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc6c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5ecfc74a30" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5ecfc74a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc74db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc73020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc731b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc73340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc734d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc73660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5ecfc72a30" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5ecfc72a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc72db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc71020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc711b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc71340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc714d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc71660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5ecfc7aa30" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5ecfc7aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc7adb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc79020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc791b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc79340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc794d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5ecfc6fa30" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5ecfc6fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc6e020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc6e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc6e340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc6e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc6e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5ecfc76a30" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5ecfc76a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc76db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc75020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc751b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc75340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc754d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5ecfc6cbc0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5ecfc6cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc6b020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc6b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc6b340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc6b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc6b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc6b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5ecfc7e9c0" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5ecfc7e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc7ed40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc7b020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc7b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc7b340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc7b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5ecfc71a30" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5ecfc71a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc71db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc70020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc701b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc70340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc704d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5ecfc79a30" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5ecfc79a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc79db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc78020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc781b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc78340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc784d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5ecfc6ebc0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5ecfc6ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc6d020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc6d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc6d340"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc6d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc6d660"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5ecfc75a30" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5ecfc75a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc75db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc74020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc741b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc74340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc744d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc74660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5ecfc73a30" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5ecfc73a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc73db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc72020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc721b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc72340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc724d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc72660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5ecfc7ba30" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5ecfc7ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc7bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc7a020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc7a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc7a340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc7a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc7a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5ecfc70a30" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5ecfc70a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfc70db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfc6f020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfc6f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfc6f340"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfc6f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfc6f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5ecfb99610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5ecfb99610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfb99990"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfb99b20"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfb99cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfb99e40"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfb8b020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfb8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5ecfb9aa30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5ecfb9aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecfb9adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfb99020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5ecfb991b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5ecfb99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f5ecfb89610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f5ecfb89610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecfb89990"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecfb89b20"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfb89cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5ecfb89e40"/>
        <function-ref name="enable" scoped="" ref="0x7f5ecfb88020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5ecfb881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f5ecfb8aa70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f5ecfb8aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecfb8adf0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecfb89020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5ecfb891b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5ecfb89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5ecf738e50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf738e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf737410"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7375a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5ecf741160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf741160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf7414e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5ecf73be50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf73be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf73a210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf73a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5ecf735880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf735880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf735c00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf735d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5ecf72d0a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf72d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72d420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5ecf7340a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf7340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf734420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7345b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5ecf721500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf721500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf721880"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf721a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5ecf724500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf724500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf724880"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf724a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5ecf740490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf740490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf740810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5ecf72a880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5ecf72a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72ac00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5ecf725500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf725500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf725880"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf725a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5ecf73ae50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5ecf73ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf739210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5ecf739e50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf739e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf738210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5ecf72f880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf72f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72fc00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5ecf7310a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5ecf7310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf731420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7315b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5ecf734880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf734880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf734c00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf734d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecf744a90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf744a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecf744e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecf742020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecf7421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5ecf73fe00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf73fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5ecf73e490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5ecf73e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5ecf728c80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf728c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7270a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf727230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5ecf73ebe0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf73ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5ecf725ce0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf725ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7240a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf724230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5ecf73f160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf73f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5ecf72a0a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf72a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72a420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5ecf739670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf739670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7399f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf739b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5ecf73a670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf73a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf73a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf73ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5ecf742ad0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf742ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf742e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5ecf72b0a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf72b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72b420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5ecf72d880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf72d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72dc00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5ecf72b880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf72b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72bc00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5ecf723ce0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf723ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7210a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf721230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5ecf724ce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf724ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7230a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf723230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5ecf731880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5ecf731880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf731c00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf731d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5ecf72c0a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf72c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72c420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5ecf726ce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf726ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7250a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf725230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5ecf733880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf733880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf733c00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf733d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5ecf721ce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf721ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf7200a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf720230"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7203c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf720550"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf7206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5ecf742480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf742480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf742800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5ecf73b670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5ecf73b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf73b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf73bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5ecf738670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf738670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7389f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf738b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5ecf72e0a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf72e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72e420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5ecf7330a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf7330a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf733420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7335b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5ecf72e880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf72e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72ec00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5ecf737870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf737870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf737bf0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf737d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5ecf7417b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5ecf7417b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf741b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5ecf7350a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf7350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf735420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7355b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf745e20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf745e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf7441c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf744350"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf7444e0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf744670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf744800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5ecf73c2f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf73c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5ecf73b020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5ecf73b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5ecf726500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5ecf726500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf726880"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf726a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5ecf727ce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf727ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7260a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf726230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5ecf73f7b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf73f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5ecf727500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf727500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf727880"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf727a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5ecf723500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5ecf723500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf723880"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf723a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5ecf72f0a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf72f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72f420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5ecf72c880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf72c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf72cc00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf72cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5ecf741e00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5ecf741e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf7401c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5ecf740ae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf740ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf740e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5ecf7320a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf7320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf732420"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7325b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5ecf73c940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5ecf73c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf73ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5ecf732880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf732880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf732c00"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf732d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5ecf7280a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf7280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf728820"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7289b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5ecf7209b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf7209b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf720d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf71f020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf71f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf71f340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf71f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f5ecfb49630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb49630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecfb499b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecfb49b40"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfb49cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecfb49e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecfb47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecfb4a680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb4a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecfb4aa00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecfb4ab90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecfb4ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f5ecfb478c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f5ecfb478c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfb47c40"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfb47dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f5ecfb466f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f5ecfb466f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfb46a70"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfb46c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecfb4d960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecfb4d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfb4dce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfb4de70"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfb4a030"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfb4a1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfb4a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f5ecfb45510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb45510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecfb45890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f5ecfb2f680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecfb2f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecfb2fa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecfb2fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f5ecfb40bb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f5ecfb40bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecfb3e020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecfb3e1b0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfb3e340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecfb3e4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecfb3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecfb44920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecfb44920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecfb44ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecfb44e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecfb41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f5ecfb39080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfb39080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ecfb39400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f5ecfb38020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f5ecfb38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecfb383a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecfb38530"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecfb386c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecfb38850"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecfb389e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecfb38b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5ecfb3b400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5ecfb3b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfb3b780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfb3b910"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfb3baa0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfb3bc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfb3bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f5ecfb3d020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f5ecfb3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfb3d3a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfb3d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f5ecfb3ddb0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f5ecfb3ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecfb3c180"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfb3c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecfb38df0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecfb38df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecfb361c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecfb36350"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecfb364e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecfb36670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecfb36800"/>
        <function-ref name="get" scoped="" ref="0x7f5ecfb36990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecfb36b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecfb301b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecfb36cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecfb36e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecfb30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecfb41810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecfb41810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfb41b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfb41d20"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfb40020"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfb401b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfb40340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f5ecfb2a120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f5ecfb2a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecfb2a4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecfb2a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f5ecfb3cba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f5ecfb3cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecfb3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5ecfacf770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecfacf770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecfacfaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecfacfc80"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecfacfe10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecfac7020"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecfac71b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecfac7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5ecfaca280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecfaca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecfaca600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecfaca790"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecfaca920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecfacaab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecfacac40"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecfacadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecfac6020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecfac6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecfac63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5ecfac6b70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecfac6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecfac5020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecfac51b0"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecfac5340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecfac54d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecfac5660"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecfac57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5ecf76a020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecf76a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf76a3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf76a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5ecfaac8f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfaac8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ecfaacc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecfaadc40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecfaadc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfaac020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfaac1b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfaac340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfaac4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfaac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ece81f8f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece81f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ece81fc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ece81fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5ece81d2b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ece81d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ece81d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ece81d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5ece81da50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ece81da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5ece81ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5ece81e0c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5ece81e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ece81e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ece821c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ece821c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ece81f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ece81f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ece81f340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ece81f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ece81f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5ece81e6d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ece81e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ece81ea50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ece81ebe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ece81ed70"/>
        <function-ref name="write" scoped="" ref="0x7f5ece81d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5ecfa3f5e0" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecfa3f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ecfa3f960"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecfa3faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5ecfa3c510" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecfa3c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecfa3c890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecfa3ca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5ecfa39600" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ecfa39600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5ecfa39980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5ecfa3fdd0" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5ecfa3fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ecfa3e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5ecfa3b370" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5ecfa3b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfa3b6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfa3b880"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfa3ba10"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfa3bba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfa3bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecfa45a20" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecfa45a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecfa45da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecfa40020"/>
        <function-ref name="request" scoped="" ref="0x7f5ecfa401b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecfa40340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecfa404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5ecfa3e480" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ecfa3e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ecfa3e800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ecfa3e990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ecfa3eb20"/>
        <function-ref name="write" scoped="" ref="0x7f5ecfa3ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5ecfa356a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5ecfa356a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecfa35a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecfa35bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5ecf9c4c40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf9c4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ecf9c3020"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecf9c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5ecf9c2700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ecf9c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf9c2aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf9c2c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f5ecf9c1e00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f5ecf9c1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5ecf9c01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5ecf9c3440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f5ecf9c3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ecf9c37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5ecf9c0490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5ecf9c0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ecf9c0810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5ecf9c09a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5ecf9c0b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5ecf9c0cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5ecf9c0e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ecf9bf020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5ecf9bf1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5ecf9bf340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5ecf9bf4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5ecf9bf660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5ecf9bf7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5ecf9bf980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5ecf9bfb10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5ecf9bfda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ecf9be020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5ecf9be1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5ecf9be340"/>
        <function-ref name="isUart" scoped="" ref="0x7f5ecf9be4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ecf9be660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5ecf9be7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5ecf9be980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ecf9beb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5ecf9beca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5ecf9bee30"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecf9bd020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5ecf9bd3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5ecf9bd540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5ecf9bd6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f5ecf9bd860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5ecf9bd9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5ecf9bdb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ecf9bdd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5ecf9bc020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5ecf9bc1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f5ecf9bc340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5ecf9bc4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5ecf9bc660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5ecf9bc7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5ecf9bc980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5ecf9bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecf9ba5a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecf9ba5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecf9ba920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecf9baab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecf9bac40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecf9badd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecf9b9020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf9b91b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecf9b9340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecf9b9980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf9b9660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecf9b94d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecf9b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5ecf9c1060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5ecf9c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf9c1400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf9c1590"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf9c1720"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf9c18b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf9c1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf9c5e80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf9c5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf9c4240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf9c43d0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf9c4560"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf9c46f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf9c4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5ecf9c3a50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ecf9c3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ecf9c3dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ecf9c2020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ecf9c21b0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf9c2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5ecf9bcde0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5ecf9bcde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecf9ba180"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecf9ba310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f5ecf9b9c50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f5ecf9b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecf9b8020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecf9b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f5ecf9a98a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5ecf9a98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecf9a9c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5ecf9ac3b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5ecf9ac3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecf9ac730"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecf9ac8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5ecf9b3860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5ecf9b3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ecf9b3be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5ecf9b3d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5ecf9b0020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5ecf9b01b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5ecf9b0340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ecf9b04d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5ecf9b0660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5ecf9b07f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5ecf9b0980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5ecf9b0b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5ecf9b0ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5ecf9b0e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5ecf9af020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5ecf9af2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ecf9af440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5ecf9af5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5ecf9af760"/>
        <function-ref name="isUart" scoped="" ref="0x7f5ecf9af8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ecf9afa80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5ecf9afc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5ecf9afda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ecf9ae020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5ecf9ae1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5ecf9ae340"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecf9ae4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5ecf9ae860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5ecf9ae9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5ecf9aeb80"/>
        <function-ref name="tx" scoped="" ref="0x7f5ecf9aed10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5ecf9ad020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5ecf9ad1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ecf9ad340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5ecf9ad4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5ecf9ad660"/>
        <function-ref name="rx" scoped="" ref="0x7f5ecf9ad7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5ecf9ad980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5ecf9adb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5ecf9adca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5ecf9ade30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5ecf9ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5ecf970670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5ecf970670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf9709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf970b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf970d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf96f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf96f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf96f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf96f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf96f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf96f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf96f980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf96fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf96fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf96fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf96e120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf96e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5ecf9a3dc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf9a3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecf9a2180"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecf9a2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f5ecf96e670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f5ecf96e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf96e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf96eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf96ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf96c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf96c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf96c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf96c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf96c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf96c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf96c980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf96cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf96cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf96ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf96b120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf96b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5ecf96b670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5ecf96b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf96b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf96bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf96bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf96a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf96a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf96a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf96a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf96a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf96a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf96a980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf96ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf96aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf96ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf969120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf9692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f5ecf9a7020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5ecf9a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ecf9a73a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5ecf9a7530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5ecf9a76c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5ecf9a7850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5ecf9a79e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ecf9a7b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5ecf9a7d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5ecf9a6020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5ecf9a61b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5ecf9a6340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5ecf9a64d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5ecf9a6660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5ecf9a67f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5ecf9a6a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ecf9a6c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5ecf9a6da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5ecf9a5020"/>
        <function-ref name="isUart" scoped="" ref="0x7f5ecf9a51b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ecf9a5340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5ecf9a54d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5ecf9a5660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ecf9a57f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5ecf9a5980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5ecf9a5b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecf9a5ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5ecf9a4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5ecf9a43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5ecf9a4540"/>
        <function-ref name="tx" scoped="" ref="0x7f5ecf9a46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5ecf9a4860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5ecf9a49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ecf9a4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5ecf9a4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5ecf9a3020"/>
        <function-ref name="rx" scoped="" ref="0x7f5ecf9a31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5ecf9a3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5ecf9a34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5ecf9a3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5ecf9a37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5ecf9a3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f5ecf9795b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5ecf9795b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5ecf979930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5ecf979ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5ecf979c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5ecf979de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5ecf9a0020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5ecf9a01b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5ecf9a0340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5ecf9a04d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecf9a0660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5ecf9a07f0"/>
        <function-ref name="getData" scoped="" ref="0x7f5ecf9a0980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5ecf9a0b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5ecf9a0ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5ecf99f020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5ecf99f1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f5ecf99f340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5ecf99f4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5ecf99f660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5ecf99f7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5ecf99f980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5ecf99fb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5ecf99fca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5ecf99fe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5ecf978020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5ecf9781b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5ecf978540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5ecf9786d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5ecf978860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5ecf9789f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5ecf978b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5ecf978d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5ecf977020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5ecf9771b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5ecf977340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5ecf9774d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5ecf977660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5ecf9777f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5ecf977980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5ecf977b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5ecf977ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5ecf977e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5ecf976020"/>
        <function-ref name="setData" scoped="" ref="0x7f5ecf9761b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5ecf976340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5ecf9764d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5ecf976660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5ecf9767f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5ecf976980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5ecf976b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5ecf975420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5ecf9755b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5ecf975740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5ecf9758d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5ecf975a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5ecf975bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5ecf975d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5ecf974020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5ecf9741b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5ecf974340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f5ecf972670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f5ecf972670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf9729f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf972b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf972d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf971020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf9711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf971340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf9714d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf971660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf9717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf971980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf971b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf971ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf971e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf970120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf9702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5ecf9a2750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf9a2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecf9a2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5ecf974700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5ecf974700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf974a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf974c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf974da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf973020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf9731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf973340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf9734d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf973660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf9737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf973980"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf973b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf973ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf973e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf972120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf9722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ece8152c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece8152c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ece815640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ece8157d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f5ece80e440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f5ece80e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ece80e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ece805760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece805760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ece805ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ece805c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f5ece80ea50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5ece80ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5ece80edd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5ece80d020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5ece80d1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5ece80d340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5ece80d4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5ece80d660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5ece80d7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5ece80d980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ece80db10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5ece80dca0"/>
        <function-ref name="getData" scoped="" ref="0x7f5ece80de30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5ece80c020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5ece80c1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5ece80c440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5ece80c5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f5ece80c760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5ece80c8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5ece80ca80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5ece80cc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5ece80cda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5ece80b020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5ece80b1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5ece80b340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5ece80b4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5ece80b660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5ece80b9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5ece80bb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5ece80bd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5ece80a020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5ece80a1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5ece80a340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5ece80a4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5ece80a660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5ece80a7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5ece80a980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5ece80ab10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5ece80aca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5ece80ae30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5ece809020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5ece8091b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5ece809340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5ece8094d0"/>
        <function-ref name="setData" scoped="" ref="0x7f5ece809660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5ece8097f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5ece809980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5ece809b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5ece809ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5ece809e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5ece808020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5ece8085b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5ece808740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5ece8088d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5ece808a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5ece808bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5ece808d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5ece805020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5ece8051b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5ece805340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5ece8054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5ece80fc10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5ece80fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ece80e020"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ece80e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ece816640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ece816640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ece8169c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ece816b50"/>
        <function-ref name="request" scoped="" ref="0x7f5ece816ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ece816e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ece815030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5ece8132b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5ece8132b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ece813630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5ece8137c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5ece813950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5ece813ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5ece813c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ece813e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5ece812020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5ece8121b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5ece812340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5ece8124d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5ece812660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5ece8127f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5ece812980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5ece812c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ece812da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5ece811020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5ece8111b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5ece811340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ece8114d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5ece811660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5ece8117f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ece811980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5ece811b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5ece811ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ece811e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5ece810220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5ece8103b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5ece810540"/>
        <function-ref name="tx" scoped="" ref="0x7f5ece8106d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5ece810860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5ece8109f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ece810b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5ece810d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5ece80f020"/>
        <function-ref name="rx" scoped="" ref="0x7f5ece80f1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5ece80f340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5ece80f4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5ece80f660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5ece80f7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5ece80f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ece815a60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ece815a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ece815de0"/>
        <function-ref name="userId" scoped="" ref="0x7f5ece813020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ecf8c98a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecf8c98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ecf8c9c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ecf8c9db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ecf8c7020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf8c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ecf8c73a0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecf8c7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5ecf8cfa80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf8cfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecf8cfe00"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecf8cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf8ca5c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf8ca5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf8ca940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf8caad0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf8cac60"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf8cadf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf8c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5ecf8cc9a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf8cc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecf8ccd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ecf8c8130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf8c8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ecf8c84b0"/>
        <function-ref name="userId" scoped="" ref="0x7f5ecf8c8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5ecf8b24b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf8b24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ecf8b2830"/>
        <function-ref name="userId" scoped="" ref="0x7f5ecf8b29c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5ecf8c55c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5ecf8c55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecf8c5960"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecf8c5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f5ecf8b3e70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5ecf8b3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecf8b2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5ecf8b3020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5ecf8b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecf8b33c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5ecf8b3690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5ecf8b3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5ecf8b3a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ecf8b3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ecf839bf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecf839bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ecf838020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ecf8381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ecf837930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecf837930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ecf837cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecf837e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5ecf838400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5ecf838400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf838780"/>
        <function-ref name="requested" scoped="" ref="0x7f5ecf838910"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf838aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf838c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ecf838dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf83ae60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf83ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf839230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf8393c0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf839550"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf8396e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf839870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ecf837060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecf837060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ecf8373e0"/>
        <function-ref name="userId" scoped="" ref="0x7f5ecf837570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece79b140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece79b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece79b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5ece79b750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ece79b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ece79bad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ece79bc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ece79bdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ece79a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ece797850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece797850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ece797bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ece797d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ece795590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece795590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ece795930"/>
        <function-ref name="configure" scoped="" ref="0x7f5ece795ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5ece795d50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5ece795d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ece794100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ece794290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ece794420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ece7945b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5ece796020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5ece796020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ece7963a0"/>
        <function-ref name="requested" scoped="" ref="0x7f5ece796530"/>
        <function-ref name="granted" scoped="" ref="0x7f5ece7966c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ece796850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ece7969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ece794800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ece794800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ece794b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ece794d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ece793020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ece7931b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ece793340"/>
        <function-ref name="get" scoped="" ref="0x7f5ece7934d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ece793660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ece793ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ece793980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ece7937f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ece793b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ece798970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ece798970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ece798d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ece797020"/>
        <function-ref name="request" scoped="" ref="0x7f5ece7971b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ece797340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ece7974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ece796c30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ece796c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ece795020"/>
        <function-ref name="userId" scoped="" ref="0x7f5ece7951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5ece792020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f5ece792020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ece7923a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ece792530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f5ecf82f880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f5ecf82f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5ecf82fc00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5ecf82fd90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5ecf82c020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5ecf82c1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5ecf82c340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5ecf82c4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5ecf82c660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5ecf82c7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecf82c980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5ecf82cb10"/>
        <function-ref name="getData" scoped="" ref="0x7f5ecf82cca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5ecf82ce30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5ecf82b020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5ecf82b2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5ecf82b440"/>
        <function-ref name="getIV" scoped="" ref="0x7f5ecf82b5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5ecf82b760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5ecf82b8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5ecf82ba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5ecf82bc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5ecf82bda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5ecf82a020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5ecf82a1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5ecf82a340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5ecf82a4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5ecf82a860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5ecf82a9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5ecf82ab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5ecf82ad10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5ecf829020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5ecf8291b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5ecf829340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5ecf8294d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5ecf829660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5ecf8297f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5ecf829980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5ecf829b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5ecf829ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5ecf829e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5ecf828020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5ecf8281b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5ecf828340"/>
        <function-ref name="setData" scoped="" ref="0x7f5ecf8284d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5ecf828660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5ecf8287f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5ecf828980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5ecf828b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5ecf828ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5ecf828e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5ecf827420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5ecf8275b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5ecf827740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5ecf8278d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5ecf827a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5ecf827bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5ecf827d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5ecf826020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5ecf8261b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5ecf826340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f5ecf81c250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f5ecf81c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ecf81c5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5ecf81c760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5ecf81c8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5ecf81ca80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5ecf81cc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ecf81cda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5ecf81b020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5ecf81b1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5ecf81b340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5ecf81b4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5ecf81b660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5ecf81b7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5ecf81b980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5ecf81bc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ecf81bda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5ecf81a020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5ecf81a1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5ecf81a340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ecf81a4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5ecf81a660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5ecf81a7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ecf81a980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5ecf81ab10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5ecf81aca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecf81ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5ecf819220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5ecf8193b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5ecf819540"/>
        <function-ref name="tx" scoped="" ref="0x7f5ecf8196d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5ecf819860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5ecf8199f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ecf819b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5ecf819d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5ecf818020"/>
        <function-ref name="rx" scoped="" ref="0x7f5ecf8181b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5ecf818340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5ecf8184d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5ecf818660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5ecf8187f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5ecf818980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5ecf816cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5ecf816cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf8150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf815230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf8153c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf815550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf8156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf815870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf815a00"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf815b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf815d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf814020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf8141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf814340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf8144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf814760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf8148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f5ecf823430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5ecf823430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f5ecf8237b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5ecf823940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5ecf823ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5ecf823c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5ecf823df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5ecf822020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5ecf8221b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5ecf822340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecf8224d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5ecf822660"/>
        <function-ref name="getData" scoped="" ref="0x7f5ecf8227f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5ecf822980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f5ecf822b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5ecf822da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f5ecf821020"/>
        <function-ref name="getIV" scoped="" ref="0x7f5ecf8211b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5ecf821340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5ecf8214d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5ecf821660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5ecf8217f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5ecf821980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f5ecf821b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5ecf821ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f5ecf821e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5ecf820020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f5ecf8203b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5ecf820540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5ecf8206d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5ecf820860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f5ecf8209f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5ecf820b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f5ecf820d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5ecf81f020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f5ecf81f1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5ecf81f340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5ecf81f4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5ecf81f660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5ecf81f7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5ecf81f980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f5ecf81fb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5ecf81fca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f5ecf81fe30"/>
        <function-ref name="setData" scoped="" ref="0x7f5ecf81e020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f5ecf81e1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5ecf81e340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5ecf81e4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5ecf81e660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5ecf81e7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5ecf81e980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f5ecf81d020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5ecf81d1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f5ecf81d340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5ecf81d4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5ecf81d660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5ecf81d7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5ecf81d980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f5ecf81db10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5ecf81dca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f5ecf81de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5ecf818d40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5ecf818d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf8170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf817270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf817400"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf817590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf817720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf8178b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf817a40"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf817bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf817d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf816020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf8161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf816340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf8164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf816760"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf8168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5ecf705c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf705c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf704210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5ecf710da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf710da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5ecf709b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf709b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf707020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5ecf703670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf703670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7039f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf703b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5ecf6fce50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf6fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fb210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5ecf703e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf703e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf702210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5ecf6ef2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf6ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ef670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5ecf6f12f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf6f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f1670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5ecf70d120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf70d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5ecf6f7670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5ecf6f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f79f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5ecf6f22f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf6f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f2670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5ecf707c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5ecf707c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf706020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5ecf706c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf706c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf705020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5ecf6fd670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf6fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5ecf6ffe50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5ecf6ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fe210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5ecf702670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf702670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7029f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf702b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecf711760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf711760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecf711ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecf711c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecf711e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5ecf70caa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf70caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5ecf70b120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5ecf70b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5ecf6f6a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf6f6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f6df0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5ecf70b870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf70b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5ecf6f2ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf6f2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f2e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5ecf70ddc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf70ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5ecf6f8e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf6f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f7210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5ecf706480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf706480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf706800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf706990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5ecf707480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf707480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf707800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf707990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5ecf710750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf710750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf710ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5ecf6f9e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf6f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f8210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5ecf6fb670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf6fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5ecf6f8670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf6f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f89f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5ecf6f0ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf6f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f0e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5ecf6f1ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf6f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f1e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5ecf6fe670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5ecf6fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5ecf6fbe50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf6fbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f9210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5ecf6f4ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf6f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f4e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5ecf700670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf700670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7009f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf700b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5ecf6efad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf6efad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf6efe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf6ee020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ee1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf6ee340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf6ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5ecf710100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf710100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf710480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5ecf709370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5ecf709370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7096f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf709880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5ecf705480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf705480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf705800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf705990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5ecf6fde50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf6fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fc210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5ecf702e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf702e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf700210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5ecf6fc670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf6fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5ecf704670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf704670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf7049f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf704b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5ecf70f450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5ecf70f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5ecf704e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf704e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf703210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf7033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf712a80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf712a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf712e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf711020"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf7111b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf711340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf7114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5ecf70a020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf70a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5ecf70acc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5ecf70acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf7090a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5ecf6f42f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5ecf6f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f4670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5ecf6f5ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf6f5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f5e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5ecf70c450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf70c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5ecf6f52f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf6f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f5670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5ecf6f02f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5ecf6f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f0670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5ecf6fee50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf6fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6fd210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5ecf6f9670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf6f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f99f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5ecf70faa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5ecf70faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5ecf70d770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf70d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5ecf700e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf700e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ff210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5ecf70a670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5ecf70a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf70a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5ecf6ff670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf6ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ff9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5ecf6f7e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf6f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6f6610"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6f67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5ecf6ee7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf6ee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf6eeb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf6eecb0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6eee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf6ed020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf6ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5ecf6d9c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf6d9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d7210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5ecf6e3da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf6e3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5ecf6dcb50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf6dcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6db020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5ecf6d6670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf6d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d69f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5ecf6cfe50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf6cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ce210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5ecf6d6e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf6d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d5210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5ecf6c22f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf6c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c2670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5ecf6c52f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf6c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c5670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5ecf6e1120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf6e1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5ecf6ca670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5ecf6ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5ecf6c62f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf6c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c6670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5ecf6dbc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5ecf6dbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6da020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5ecf6dac60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf6dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d9020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5ecf6d0670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf6d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d09f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5ecf6d3e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5ecf6d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d2210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5ecf6d5670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf6d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d59f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecf6e4760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf6e4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecf6e4ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecf6e4c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecf6e4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5ecf6e0aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf6e0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5ecf6df120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5ecf6df120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6df5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5ecf6c9a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf6c9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c9df0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5ecf6df870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf6df870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6dfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5ecf6c6ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf6c6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c6e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5ecf6e1dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf6e1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5ecf6cce50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf6cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ca210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5ecf6da480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf6da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6da800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5ecf6db480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf6db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6db800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6db990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5ecf6e3750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf6e3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5ecf6cde50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf6cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6cc210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5ecf6ce670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf6ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5ecf6cc670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf6cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5ecf6c4ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf6c4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c4e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5ecf6c5ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf6c5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c5e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5ecf6d2670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5ecf6d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d29f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5ecf6cee50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf6cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6cd210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5ecf6c7ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf6c7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c7e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5ecf6d4670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf6d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d49f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5ecf6c2ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf6c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf6c2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf6c1020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf6c1340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf6c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5ecf6e3100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf6e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5ecf6dc370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5ecf6dc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6dc6f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6dc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5ecf6d9480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf6d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d9800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5ecf6d0e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf6d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6cf210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5ecf6d5e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf6d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d4210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5ecf6cf670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf6cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6cf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5ecf6d7670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf6d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d79f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5ecf6e2450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5ecf6e2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5ecf6d7e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf6d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d6210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf6e69e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf6e69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf6e6d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf6e4020"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf6e41b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf6e4340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf6e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5ecf6dd020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf6dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5ecf6ddcc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5ecf6ddcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6dc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5ecf6c72f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5ecf6c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c7670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5ecf6c8ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf6c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c8e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5ecf6e0450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf6e0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5ecf6c82f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf6c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c8670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5ecf6c42f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5ecf6c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c4670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5ecf6d2e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf6d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d0210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5ecf6cd670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf6cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5ecf6e2aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5ecf6e2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5ecf6e1770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf6e1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6e1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5ecf6d4e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf6d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d3210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5ecf6dd670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5ecf6dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf6dd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5ecf6d3670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf6d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6d39f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5ecf6cae50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf6cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6c9610"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5ecf6c17a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf6c17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf6c1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf6c1cb0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6c1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf6c0020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf6c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f5ecf6b9b30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecf6b9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5ecf6b6020"/>
        <function-ref name="changed" scoped="" ref="0x7f5ecf6b61b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5ecf6b6340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5ecf6b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f5ecf6b8d30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecf6b8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5ecf6a20e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f5ecf69e310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5ecf69e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5ecf69e690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f5ecf69b880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf69b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf69bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f5ecf690020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf690020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f5ecf686bd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5ecf686bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf689020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f5ecf689530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f5ecf689530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf6898b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf689a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f5ecf68a140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5ecf68a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf68a4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f5ecf68fc50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5ecf68fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf676020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf6761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f5ecf676540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f5ecf676540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf6768c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf676a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf676be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf676d70"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf675020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf6751b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf675340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf6754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f5ecf66c950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf66c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5ecf66f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f5ecf671150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5ecf671150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf6714d0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf671660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f5ecf6719f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f5ecf6719f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf671d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf670020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf6701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf670340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf6704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf670660"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf6707f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf670980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5ecf673ca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf673ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5ecf64cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5ecf64aa90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5ecf64aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5ecf6498d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ecf639020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecf639020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf639e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf638800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf638340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf638cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f5ecf634530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f5ecf634530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf6333d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf633d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf633890"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf631260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5ecf62c020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ecf62c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf62c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecf62c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecf62c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf62c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecf62c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf62cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecf62cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf62b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf62b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ecf62b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ecf62b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ecf630e50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecf630e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ed0530200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf62fca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf62e670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf62e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf62eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f5ecf677590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f5ecf677590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf677910"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf677aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf677c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf677dc0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf627020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf6271b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf627340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf6274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5ecf625c50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5ecf625c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf624020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf6241b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf624340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf6244d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf624660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf6247f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf624980"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf624b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf624ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf624e30"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf623020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf6231b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf623340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf6235d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf623760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5ecf6269e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5ecf6269e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf626d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf625020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf6251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf625340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf6254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf625660"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf6257f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf625980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ecf628a20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5ecf628a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf628da0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf61d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5ecf60ecb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf60ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecf60d0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecf60d230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecf60d3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecf60d550"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecf60d6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecf60d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5ecf60a990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5ecf60a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5ecf60ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f5ecf60e020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5ecf60e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf60e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf60e530"/>
        <function-ref name="modify" scoped="" ref="0x7f5ecf60e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf60e850"/>
        <function-ref name="resend" scoped="" ref="0x7f5ecf60e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ecf6116c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5ecf6116c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf611a40"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf611bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f5ecf60b150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f5ecf60b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5ecf60b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5ecf5fe970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf5fe970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecf5fecf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecf5fee80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecf5fd030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecf5fd1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecf5fd350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecf5fd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5ecf5f6950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ecf5f6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ecf5f3020"/>
        <function-ref name="clear" scoped="" ref="0x7f5ecf5f3750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ecf5f5780"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf5f3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5ecf5de020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf5de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5de3a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5de530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5ecf5de890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf5de890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5dec10"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5ecf5fd900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5ecf5fd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5ecf5fdc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f5ecf5e2530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf5e2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5e28b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f5ecf5f1880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5ecf5f1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5ecf5f1c00"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecf5f1d90"/>
        <function-ref name="captured" scoped="" ref="0x7f5ecf5f0020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5ecf5f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f5ecf5fcae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f5ecf5fcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf5f8390"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf5f9360"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ecf5f9ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf5f9820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ecf5f8850"/>
        <function-ref name="start" scoped="" ref="0x7f5ecf5fb970"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf5fbe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5ecf5f8d00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf5f8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecf5f70a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecf5f7230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecf5f73c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecf5f7550"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecf5f76e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecf5f7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f5ecf5e4550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf5e4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5e48d0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5e4a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5ecf5e4e00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf5e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5e31c0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5e3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f5ecf5d8d40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf5d8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf5db0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5ecf5db270"/>
        <function-ref name="sfd" scoped="" ref="0x7f5ecf5db400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecf5ffbc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecf5ffbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf5fe020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf5fe1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f5ecf5fe340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf5fe4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f5ecf5fe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f5ecf5e6d10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf5e6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecf5e50e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecf5e5270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecf5e5400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f5ecf5e2c60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf5e2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5ecf5e9820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5ecf5e9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf5e9ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf5e9d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf5e8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf5e81b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf5e8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf5e84d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf5e8660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf5e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf600c60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf600c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf5ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecf5f7bb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf5f7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf5f6020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf5f61b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf5f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f5ecf5ebbe0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf5ebbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf5f1020"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ecf5f11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf5f1340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf5f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5ecf5e03e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf5e03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5e0960"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5e0af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5ecf5e6020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5ecf5e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf5e63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf5e6530"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf5e66c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf5e6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf5e69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f5ecf5f0500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5ecf5f0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf5f0980"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf5f0b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf5f0ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf5f0e30"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf5e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf5e91b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf5e9340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf5e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5ecf5dd130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf5dd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5dd4b0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5dd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f5ecf5dd9c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf5dd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5ddd40"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f5ecf5e36d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf5e36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5e3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f5ecf5e8b40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5ecf5e8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf5e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf5e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf5e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf5e74d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf5e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf5e77f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf5e7980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf5e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecf5db6c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecf5db6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecf5dba40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecf5dbbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecf5dbd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecf5da020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecf5da1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf5da340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecf5da4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecf5dab10"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf5da660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecf5da7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecf5da980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f5ecf5df5e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf5df5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5df960"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5dfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ecf5ff320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5ecf5ff320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf5ff6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf5ff830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f5ecf5e5780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf5e5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf5e5b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf5e5c90"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5e5e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf5e4020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf5e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f5ecf5e3de0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5ecf5e3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5e2180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f5ecf5e0e80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5ecf5e0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5df220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f5ecf5fc0f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f5ecf5fc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5ecf5fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5ecf53ec60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf53ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53c210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5ecf547020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf547020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5ecf541c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf541c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf540020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5ecf53b670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf53b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5ecf534e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf534e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf533210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5ecf53be50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf53be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53a210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5ecf5272f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf5272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf527670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf527800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5ecf52a2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf52a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52a670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5ecf546370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf546370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5466f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5ecf52f670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5ecf52f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5ecf52b2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf52b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52b670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5ecf540c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5ecf540c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53f020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5ecf53fc60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf53fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53e020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5ecf535670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf535670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5359f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf535b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5ecf538e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5ecf538e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf537210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5ecf53a670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf53a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecf5498f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf5498f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecf549c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecf549e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecf548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5ecf545d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf545d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5440a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5ecf544370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5ecf544370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5ecf52ea70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf52ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52edf0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5ecf544ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf544ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf544e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5ecf52bad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf52bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52be50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5ecf545060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf545060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5453e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5ecf531e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf531e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52f210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5ecf53f480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf53f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53f800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5ecf540480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf540480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf540800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf540990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5ecf548940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf548940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf548cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5ecf532e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf532e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf531210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5ecf533670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf533670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5339f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf533b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5ecf531670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf531670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5319f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf531b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5ecf529ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf529ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf529e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf527020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5ecf52aad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf52aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52ae50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf529020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5ecf537670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5ecf537670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5379f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf537b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5ecf533e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf533e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf532210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5ecf52cad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf52cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52ce50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5ecf539670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf539670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5399f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf539b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5ecf527ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf527ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf527e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf526020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5261b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf526340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf5264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5ecf5482f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf5482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf548670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5ecf541490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5ecf541490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf541810"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5419a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5ecf53e480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf53e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53e800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5ecf535e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf535e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf534210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5ecf53ae50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf53ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf539210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5ecf534670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf534670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5349f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf534b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5ecf53c670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf53c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5ecf547670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5ecf547670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5479f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5ecf53ce50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf53ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf53b210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf53b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf54bc30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf54bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf549020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf5491b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf549340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf5494d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf549660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5ecf542160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf542160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5424e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5ecf542e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5ecf542e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5411c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5ecf52c2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5ecf52c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52c670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5ecf52dad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf52dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52de50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5ecf5456b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf5456b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf545a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5ecf52d2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf52d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52d670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5ecf5292f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5ecf5292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf529670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf529800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5ecf537e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf537e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf535210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5ecf532670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf532670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5329f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf532b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5ecf547cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5ecf547cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf5460a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5ecf5469c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf5469c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf546d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5ecf539e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf539e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf538210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5ecf5427b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5ecf5427b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf542b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5ecf538670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf538670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf5389f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf538b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5ecf52fe50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf52fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf52e610"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf52e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5ecf5267a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf5267a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf526b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf526cb0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf526e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf525020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf5251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f5ecf51adf0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf51adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf5171c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5ecf517350"/>
        <function-ref name="sfd" scoped="" ref="0x7f5ecf5174e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf5177c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf5177c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf517b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f5ecf516020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f5ecf516020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5ecf5163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ecf51a5c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5ecf51a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf51a940"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf51aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f5ecf50f380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5ecf50f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf50f700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf50f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf50fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf50fbb0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf50fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf50e020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf50e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf50e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5ecf507b90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecf507b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5ecf506020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5ecf5061b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5ecf506340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5ecf5064d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5ecf506660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5ecf5067f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ecf506980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5ecf506b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5ecf506ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5ecf506e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5ecf505020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5ecf5051b0"/>
        <function-ref name="sync" scoped="" ref="0x7f5ecf505340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ecf5055d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5ecf505760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f5ecf4f09d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f5ecf4f09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecf4f0d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecf4ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5ecf505d70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ecf505d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ecf503330"/>
        <function-ref name="clear" scoped="" ref="0x7f5ecf503a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ecf504ba0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf501210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f5ecf50e6b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5ecf50e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf50ea30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf50ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf50ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf50c020"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf50c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf50c340"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf50c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf50c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5ecf500cb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf500cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf4ff0a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf4ff230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5ecf4ff590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf4ff590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf4ff910"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf4ffaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f5ecf4fe6d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf4fe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf4fea50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf4febe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5ecf508330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf508330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecf5086b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecf508840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecf5089d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecf508b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecf508cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecf508e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f5ecf512550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f5ecf512550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf5128d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f5ecf512a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f5ecf512bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f5ecf5093a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5ecf5093a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf509720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5ecf510020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5ecf510020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf5103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf510530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf5106c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf510850"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf5109e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf510b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf510d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf50f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f5ecf4fd020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf4fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf4fd3a0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf4fd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf513620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf513620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf5139a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecf5071e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf5071e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf507560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf5076f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf507880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf511020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf5113a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5ecf50b6e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5ecf50b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf50ba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf50bbf0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf50bd80"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf50a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf50a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5ecf4ffe00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf4ffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf4fe1c0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf4fe350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f5ecf50a530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf50a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf50a8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf50aa40"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf50abd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf50ad60"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf509020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f5ecf4fd8b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf4fd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf4fde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f5ecf5117c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f5ecf5117c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5ecf511b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecf4fc150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecf4fc150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecf4fc4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecf4fc660"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecf4fc7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecf4fc980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecf4fcb10"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf4fcca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecf4fce30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecf4fb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf4fb020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecf4fb1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecf4fb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f5ecf5003e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf5003e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf500760"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf5008f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f5ecf501b10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf501b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf500020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f5ecf50ca50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5ecf50ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ecf50cdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ecf50b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5ecf50b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5ecf50b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f5ecf509ad0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf509ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf508020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ecf513ca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5ecf513ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf5120a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf512230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ecf48fa70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecf48fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ecf48fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5ecf493670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf493670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecf4939f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecf493b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecf493d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecf490020"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecf4901b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecf490340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5ecf48e550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf48e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ecf48db00"/>
        <function-ref name="clear" scoped="" ref="0x7f5ecf48c2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ecf48d3d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf48c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5ecf48f0c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf48f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf48f440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf48f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf48f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5ecf486480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf486480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf486800"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ecf486990"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf486b20"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf486cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ecf48a660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ecf48a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ecf489ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ecf488460"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ecf4895b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf488b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ecf4906e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5ecf4906e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ecf490a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ecf490bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ecf490d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ecf480020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ecf480020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ecf4803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5ecf485d20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf485d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecf4820e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecf482270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecf482400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecf482590"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecf482720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecf4828b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5ecf4774a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ecf4774a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf477820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf4779b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf477b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf477cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf477e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5ecf480a80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5ecf480a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ecf47e020"/>
        <function-ref name="clear" scoped="" ref="0x7f5ecf47e750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ecf47f8d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf47ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5ecf481640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf481640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf4819c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf481b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf481ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5ecf4788b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ecf4788b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf478c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ecf478dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf477020"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf4771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f5ecf473820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5ecf473820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf4754c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f5ecf475b80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5ecf475b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf4727d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ecf47caf0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ecf47caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ecf47a0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ecf47a800"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ecf47b970"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf478020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ecf482c50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5ecf482c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ecf481020"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ecf4811b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ecf481340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ecf4224e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf4224e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf419150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ecf4197c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecf4197c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf418620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf417020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf418ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf4174e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5ecf411020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf40e630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf410a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf40f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf40f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf40c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf40eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf40f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf411c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf40e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf410110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf4105e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ecf40c610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf40c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf40b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf412130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf412130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf4124b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ecf3dc870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ecf3dc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf3d9090"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf3da090"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ecf3daa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf3da550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ecf3d9550"/>
        <function-ref name="start" scoped="" ref="0x7f5ecf3db6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf3dbbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf3dc020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf3dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf3dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece68d260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece68d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece68ab30"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece68ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece68a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece68a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece689020"/>
        <function-ref name="start" scoped="" ref="0x7f5ece68c090"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece68c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece68e9d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece68e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece68ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5ece651a80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece651a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ece651e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ece650020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ece6501b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ece650340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece6504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5ece654020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ece6543a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ece654530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece6546c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ece654850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece6549e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ece654b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ece654d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ece652020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ece6521b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ece652340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ece6524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5ece652760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece652760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ece652ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ece652c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece652e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ece651020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ece6511b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece651340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ece6514d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ece651660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ece6517f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f5ece647760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5ece647760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ece647ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ece647c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ece647e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ece646020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece6461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5ece64bdd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5ece64bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ece649180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ece649310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece6494a0"/>
        <function-ref name="get" scoped="" ref="0x7f5ece649630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece6497c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ece649950"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ece649ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ece649c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ece649e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ece648020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ece6481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece64ebf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece64ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece64b4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece64c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece64ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece64c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece64b9a0"/>
        <function-ref name="start" scoped="" ref="0x7f5ece64da80"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece64c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece64e360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece64e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece64e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5ece648440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5ece648440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ece6487c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ece648950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ece648ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ece648c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ece648e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ece647020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ece6471b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ece647340"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ece6474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ecf3fdb70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecf3fdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf3f89b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf3f7360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf3f8e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf3f7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5ecf3f1b90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5ecf3f1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf3ef9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf3ee4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf3ee020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf3ee9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ecf3f3610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecf3f3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf3f25b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf3f1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf3f2a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf3f14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ece6875f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ece6875f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece685e50"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece686e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece685800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece685340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece683340"/>
        <function-ref name="start" scoped="" ref="0x7f5ece686430"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece686940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f5ece681d20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f5ece681d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0531640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5ed05319b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ece67d670"/>
        <function-ref name="fired" scoped="" ref="0x7f5ece67f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ece67d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ece67fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ece67db30"/>
        <function-ref name="start" scoped="" ref="0x7f5ece680b60"/>
        <function-ref name="stop" scoped="" ref="0x7f5ece67f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ece6839b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ece6839b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ece6827e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ece6811b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ece682ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ece681670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f5ecf3a79c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f5ecf3a79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecf3a7d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecf3a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5ecf3ab850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5ecf3ab850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf3a7090"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf3a9090"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ecf3a9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf3a9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ecf3a7550"/>
        <function-ref name="start" scoped="" ref="0x7f5ecf3aa6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf3aabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ecf3b02f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ecf3b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf3ac870"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf3afe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf3aec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf3ae780"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf3ab1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf3accf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf3ae300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf3af020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf3ac260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf3af4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf3af9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f5ecf356a00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f5ecf356a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecf356d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecf355020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f5ecf35b640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f5ecf35b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf357c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf3581e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf357020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf358ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf356590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf356110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf358660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf35a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf357630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf35a860"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf35ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ecf361150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ecf361150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf35d700"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf360c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf35ea50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf35e5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf35b090"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf35dba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf35e110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf361d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf35d0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf3602a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf360790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ecf3522b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f5ecf3522b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf351020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ecf351690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5ecf351690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ecf3505b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf34f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf350a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf34f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ecf3488c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ecf3488c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf335cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf336320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf3350d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf336c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf333660"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf3331e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf3367a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf3374e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf3356e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf3379b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf337e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5ecf33f2c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f5ecf33f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf33c870"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf33ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf33dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf33d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf33a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf33ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf33d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf33e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf33c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf33e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf33e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5ecf323c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5ecf323c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf322210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5ecf32d020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5ecf32d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5ecf327c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5ecf327c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf325020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5ecf321670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5ecf321670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3219f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf321b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5ecf31ae50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5ecf31ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf318210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5ecf321e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5ecf321e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf320210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f5ecf30d2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f5ecf30d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf30d670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5ecf30f2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5ecf30f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf30f670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5ecf32b370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5ecf32b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5ecf315670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5ecf315670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3159f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf315b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5ecf3102f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5ecf3102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf310670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf310800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f5ecf325c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5ecf325c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf324020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f5ecf324c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5ecf324c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf323020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5ecf31b670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5ecf31b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5ecf31de50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5ecf31de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31c210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5ecf320670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5ecf320670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3209f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf320b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5ecf32f970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5ecf32f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5ecf32fcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5ecf32fe80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5ecf32e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5ecf32ad00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5ecf32ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf3290a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5ecf329370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5ecf329370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf3297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5ecf314a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5ecf314a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf314df0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf313020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5ecf329ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5ecf329ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf329e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5ecf310ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5ecf310ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf310e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5ecf32a060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5ecf32a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5ecf316e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5ecf316e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf315210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5ecf324480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5ecf324480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf324800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf324990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5ecf325480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5ecf325480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf325800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf325990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5ecf32e950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5ecf32e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5ecf317e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5ecf317e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf316210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5ecf318670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5ecf318670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3189f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf318b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5ecf316670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5ecf316670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3169f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf316b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5ecf30ead0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5ecf30ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf30ee50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5ecf30fad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5ecf30fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf30fe50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5ecf31c670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5ecf31c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5ecf318e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5ecf318e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf317210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5ecf312ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5ecf312ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf312e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf310020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5ecf31e670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5ecf31e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5ecf30dad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5ecf30dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf30de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf30c020"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf30c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf30c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5ecf32e300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5ecf32e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5ecf327490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5ecf327490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf327810"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3279a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5ecf323480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5ecf323480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf323800"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf323990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5ecf31be50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5ecf31be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31a210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5ecf320e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5ecf320e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31e210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5ecf31a670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5ecf31a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5ecf322670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5ecf322670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3229f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf322b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5ecf32d670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5ecf32d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5ecf322e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5ecf322e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf321210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf330d00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf330d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf32f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf32f230"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf32f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf32f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf32f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5ecf328160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5ecf328160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf3284e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5ecf328e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5ecf328e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf3271c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5ecf3122f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5ecf3122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf312670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf312800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5ecf313ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5ecf313ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf313e50"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf312020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5ecf32a6b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5ecf32a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5ecf3132f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5ecf3132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf313670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf313800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f5ecf30e2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f5ecf30e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf30e670"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5ecf31ce50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5ecf31ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31b210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5ecf317670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5ecf317670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf3179f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf317b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5ecf32dcc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5ecf32dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5ecf32b9c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5ecf32b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf32bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5ecf31ee50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5ecf31ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31d210"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5ecf3287b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5ecf3287b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5ecf328b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5ecf31d670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5ecf31d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf31d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf31db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5ecf315e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5ecf315e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5ecf314610"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf3147a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f5ecf30c7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5ecf30c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5ecf30cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5ecf30ccb0"/>
        <function-ref name="write" scoped="" ref="0x7f5ecf30ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5ecf30b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5ecf30b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5ecf2e2a20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5ecf2e2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ecf2e2da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ecf2e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5ecf2e0920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f5ecf2e0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf2e2560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf2e69a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf2e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf2e6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5ecf2dba20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5ecf2dba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ecf2dbda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ecf2da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5ecf2dc940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f5ecf2dc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf2db560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf2dc080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf2dc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf2dc400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5ecf2e4aa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecf2e4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecf2e4e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecf2de020"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecf2de1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecf2de340"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecf2de4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecf2de660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf2c0020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf2c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf2c03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2c0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2c06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf2c0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2c09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecf2c1220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecf2c1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf2c15a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2c1730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2c18c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf2c1a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2c1be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf2bce60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf2bce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf2bb210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2bb3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2bb530"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf2bb6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2bb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecf2bfa20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecf2bfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf2bfda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2bc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2bc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf2bc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ecf2ba8f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5ecf2ba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ecf2bac70"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ecf2bae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf2bc750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf2bc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf2bcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecf2b8170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf2b8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2b84f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf2b8680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf2b8810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f5ecf2bbae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecf2bbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecf2bbe60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecf2ba020"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecf2ba1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecf2ba340"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecf2ba4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecf2ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5ecf2bd690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecf2bd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecf2bda10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecf2bdba0"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecf2bdd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecf2a7020"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecf2a71b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecf2a7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ecf2a1950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf2a1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf2a1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf2a4aa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf2a4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf2a4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5ecf2a1200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5ecf2a1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf2a1580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ecf29c3f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf29c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf29c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf29db70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf29db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf29c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf2a0e30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf2a0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf29d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecf29ca70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf29ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf29cdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf29b020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf29b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5ecf29d570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5ecf29d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf29d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ecf26d020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf26d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf26d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf26d6b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf26d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf26da30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf26dbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf26dd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf26c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf26c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecf2728e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecf2728e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf272c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf272df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf271020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf2711b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf271340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5ecf271c90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecf271c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf2700a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf270230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2703c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf270550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2706e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf2715e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf2715e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf271960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf273be0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf273be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf272020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf2721b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf272340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf2724d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf272660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5ecf270a50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecf270a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf270dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5ecf26e170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5ecf26e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf26e4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf26e680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf26e810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf26e9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf26eb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf264d70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf264d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf263180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf263310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2634a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf263630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2637c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ecf263b10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf263b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf262020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f5ecf234db0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f5ecf234db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ecf233180"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ecf233310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5ecf2622f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf2622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecf262670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecf262800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecf262990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecf262b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecf262cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecf262e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5ecf266a20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5ecf266a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf266da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf265020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2651b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf265340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5ecf260b70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5ecf260b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ecf25f020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ecf25f1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ecf25f340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ecf25f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecf260170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf260170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2604f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf260680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf260810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5ecf266370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5ecf266370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf2666f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf2687b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf2687b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf268b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf268cc0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf268e50"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf267020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf2671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5ecf2674d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5ecf2674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf267850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2679e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf267b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf267d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf266020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5ecf265840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5ecf265840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf265bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5ecf264020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5ecf264020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf2643a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf264530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf2646c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf264850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf2649e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf214dd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf214dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf213180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5ecf213410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ecf213410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ecf213790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ecf213920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ecf213ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ecf213c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ecf208b80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5ecf208b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecf207020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecf2071b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ecf207340"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf2074d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf206860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf206860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf206be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf206d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf205020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf2051b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf205340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ecf205690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf205690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf205a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecf20cce0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecf20cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf2090a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf209230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf2093c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf209550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf2096e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ecf208080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecf208080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ecf208400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ecf208590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ecf208720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ecf2088b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f5ecf207800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f5ecf207800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecf207b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecf207d10"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecf206020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecf2061b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecf206340"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecf2064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5ecf205d90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5ecf205d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecf204180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecf204310"/>
        <function-ref name="start" scoped="" ref="0x7f5ecf2044a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf204630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf209980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf209980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf209d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ecf2002d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ecf2002d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ecf200650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ecf2007e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ecf200970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ecf200b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5ecf202580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5ecf202580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5ecf202900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5ecf202a90"/>
        <function-ref name="isState" scoped="" ref="0x7f5ecf202c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5ecf202db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5ecf201020"/>
        <function-ref name="forceState" scoped="" ref="0x7f5ecf2011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf1f3d70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf1f3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf1f2180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1f2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf1f24a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf1f2630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf1f27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ecf1f6350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5ecf1f6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf1f66d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1f6860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf1f69f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf1f6b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf1f6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ecf1f3020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5ecf1f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ecf1f33a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ecf1f3530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ecf1f36c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ecf1f3850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ecf1f39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5ecf1ee1c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ecf1ee1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ecf1ee540"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ecf1ee6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ecf1ee860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ecf1f1410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5ecf1f1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ecf1f1790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ecf1f1920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ecf1f1ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ecf1f1c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ecf1f1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ecf1ce690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5ecf1ce690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf1cea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ecf1d0860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5ecf1d0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf1d0be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1d0d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf1ce020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf1ce1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf1ce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5ecf1cc610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5ecf1cc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5ecf1cc990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5ecf1ccb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5ecf1cccb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5ecf1cce40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5ecf1cb020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5ecf1cb1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ecf1cb340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5ecf1cb4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5ecf1cb660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5ecf1cb7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5ecf1cb980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5ecf1cbb10"/>
        <function-ref name="sync" scoped="" ref="0x7f5ecf1cbca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ecf1ca020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5ecf1ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5ecf1d18b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5ecf1d18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecf1d1c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecf1d1dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecf1d0020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecf1d01b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecf1d0340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecf1d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ecf1d2ce0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ecf1d2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ecf1d10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5ecf1c91f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5ecf1c91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5ecf1c9570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5ecf1c9700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5ecf1c9890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5ecf1c9a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f5ecf1c9bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5ecf1c9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ecf1d3a80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ecf1d3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf1d3e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf1d2020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1d21b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf1d2340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf1d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ecf1d6020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5ecf1d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ecf1d63a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1d6530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf1d66c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ecf1d6850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ecf1d69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ecf1d5df0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5ecf1d5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf1d41c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5ecf1cece0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5ecf1cece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5ecf1cd0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5ecf1cd230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5ecf1cd3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5ecf1cd550"/>
        <function-ref name="getPower" scoped="" ref="0x7f5ecf1cd6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5ecf1cd870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5ecf1ca4d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ecf1ca4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5ecf1ca950"/>
        <function-ref name="changed" scoped="" ref="0x7f5ecf1caae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5ecf1cac70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5ecf1cae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5ecf1cdb70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5ecf1cdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1cc020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5ecf1cc1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5ecf1cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf1d5210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf1d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf1d5590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ecf1c8d30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5ecf1c8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ecf1c70e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ecf1c7270"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ecf1c7400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ecf1c7590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ecf1c7720"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf1c78b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ecf1c7a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ecf1c61b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf1c7bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ecf1c7d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ecf1c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ecf1d4470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf1d4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ecf1d47f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ecf1d4980"/>
        <function-ref name="address" scoped="" ref="0x7f5ecf1d4b10"/>
        <function-ref name="destination" scoped="" ref="0x7f5ecf1d4ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ecf1d4e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ecf1d3020"/>
        <function-ref name="type" scoped="" ref="0x7f5ecf1d31b0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ecf1d3340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ecf1d34d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ecf1d3660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ecf1d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f5ecf1c80f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f5ecf1c80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf1c8470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf1c8600"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf1c8790"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf1c8920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf1c8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ecf121020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ecf121020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf1213a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf121530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf1216c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf121850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf1219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf122910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf122910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf122c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ecf121c30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf121c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ecf120020"/>
        <function-ref name="source" scoped="" ref="0x7f5ecf1201b0"/>
        <function-ref name="address" scoped="" ref="0x7f5ecf120340"/>
        <function-ref name="destination" scoped="" ref="0x7f5ecf1204d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ecf120660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ecf1207f0"/>
        <function-ref name="type" scoped="" ref="0x7f5ecf120980"/>
        <function-ref name="setType" scoped="" ref="0x7f5ecf120b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ecf120ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ecf120e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ecf11f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ecf11d970" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5ecf11d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf11dcf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ecf11de80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ecf11c030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ecf11c1c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ecf11c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ecf11d3a0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5ecf11d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ecf11d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ecf11c5a0" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="SendingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5ecf11c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ecf11c920"/>
        <function-ref name="source" scoped="" ref="0x7f5ecf11cab0"/>
        <function-ref name="address" scoped="" ref="0x7f5ecf11cc40"/>
        <function-ref name="destination" scoped="" ref="0x7f5ecf11cdd0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ecf11b020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ecf11b1b0"/>
        <function-ref name="type" scoped="" ref="0x7f5ecf11b340"/>
        <function-ref name="setType" scoped="" ref="0x7f5ecf11b4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ecf11b660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ecf11b7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ecf11b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ecf119830" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="SendingBuffer_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ecf119830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf115cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf116300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf1150d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf116c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf114660"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf1141e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf116780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf118480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf1156e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf118950"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf118e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ecf112140" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="SendingBuffer_AppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5ecf112140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecf10e630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf110b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecf10f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecf10f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecf10d020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecf10eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecf10f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecf112d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecf10e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecf110220"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf1106f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f5ecee82d30" loc="48:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f5ecee82d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ecee810e0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecee81270"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ecee81400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f5ecee83d70" loc="47:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f5ecee83d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ecee82180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f5ecee82310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f5ecee824a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f5ecee82630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f5ecee827c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f5ecee82950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f5ecee82ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f5ecee81650" loc="49:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f5ecee81650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f5ecee819d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f5ecee81b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f5ecee7f020" loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f5ecee7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f5ecee7fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecee83160" loc="46:../../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecee83160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecee834e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecee83670"/>
        <function-ref name="request" scoped="" ref="0x7f5ecee83800"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecee83990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecee83b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f5ecf0eb2e0" loc="42:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f5ecf0eb2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ecf0eb660"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecf0eb7f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ecf0eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f5ecf0e5a70" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f5ecf0e5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf0e5df0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf0e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f5ecf0e92c0" loc="43:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5ecf0e92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f5ecf0e9640"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f5ecf0e97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f5ecf0edb10" loc="41:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f5ecf0edb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ecf0ec020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f5ecf0ec1b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f5ecf0ec340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f5ecf0ec4d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f5ecf0ec660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f5ecf0ec7f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f5ecf0ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecf0ee7c0" loc="40:../../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecf0ee7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecf0eeb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecf0eecd0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecf0eee60"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecf0ed020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecf0ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f5ecf0e0370" loc="42:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f5ecf0e0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ecf0e06f0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecf0e0880"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ecf0e0a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f5ecf0cd8d0" loc="48:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f5ecf0cd8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f5ecf0cdc50"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f5ecf0cdde0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f5ecf0dc020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f5ecf0dc1b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f5ecf0dc340"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f5ecf0dc4d0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f5ecf0dc660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f5ecf0dc7f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f5ecf0dc980"/>
        <function-ref name="getMem" scoped="" ref="0x7f5ecf0dcb10"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f5ecf0dcca0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f5ecf0dce30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f5ecf0db020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f5ecf0db2b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f5ecf0db440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f5ecf0bf540" loc="58:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f5ecf0bf540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0bf8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0bfa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0bfbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0bfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0be020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0be340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0be4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0be660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0be7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0be980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0beb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0beca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0bd020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f5ecf0c8850" loc="53:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f5ecf0c8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ecf0c8bd0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ecf0c8d60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ecf0c7020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ecf0c71b0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf0c7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f5ecf0cb020" loc="50:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f5ecf0cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ecf0cb3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ecf0cb530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecf0cb6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ecf0cb850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ecf0cb9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecf0cbb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ecf0cbd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ecf0ca020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ecf0ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f5ecf0de1d0" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f5ecf0de1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ecf0de550"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecf0de6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f5ecf0c3540" loc="56:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f5ecf0c3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0c38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0c3a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0c3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0c3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0c2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0c21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0c2340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0c24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0c2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0c27f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0c2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0c2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0c2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0c1020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f5ecf0df320" loc="43:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5ecf0df320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f5ecf0df6a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f5ecf0df830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f5ecf0b9540" loc="61:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f5ecf0b9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0b98c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0b9a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0b9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0b9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0b8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0b8340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0b84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0b8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0b87f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0b8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0b8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0b8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0b7020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f5ecf0c76d0" loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f5ecf0c76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0c7b50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0c7ce0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0c7e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0c6030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0c61c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0c6350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0c64e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0c6670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0c6800"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0c6990"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0c6b20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0c6cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0c6e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0c5120"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ecf0e3020" loc="40:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ecf0e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ecf0e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f5ecf0bd540" loc="59:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f5ecf0bd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0bd8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0bda50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0bdbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0bdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0bc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0bc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0bc340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0bc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0bc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0bc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0bcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0bcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0bb020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f5ecf0db780" loc="49:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f5ecf0db780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ecf0dbb00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5ecf0dbc90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecf0dbe20"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0cc020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecf0cc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ecf0cc340"/>
        <function-ref name="getMode" scoped="" ref="0x7f5ecf0cc4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ecf0cc660"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ecf0cc7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5ecf0cc980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5ecf0ccb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f5ecf0deaf0" loc="47:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f5ecf0deaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ecf0dee70"/>
        <function-ref name="userId" scoped="" ref="0x7f5ecf0dd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f5ecf0ca560" loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f5ecf0ca560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5ecf0ca8e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5ecf0caa70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5ecf0cac00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5ecf0cad90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5ecf0c9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5ecf0c91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ecf0c9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5ecf0c94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5ecf0c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f5ecf0e3d00" loc="41:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f5ecf0e3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5ecf0e20a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f5ecf0e2230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f5ecf0e23c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f5ecf0e2550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f5ecf0e26e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f5ecf0e2870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f5ecf0e2a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f5ecf0c1540" loc="57:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f5ecf0c1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0c18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0c1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0c1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0c1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0c0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0c01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0c0340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0c04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0c0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0c07f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0c0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0c0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0c0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0bf020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f5ecf0c99e0" loc="52:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f5ecf0c99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5ecf0c9d60"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5ecf0c8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5ecf0c81b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5ecf0c8340"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecf0c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f5ecf0c5640" loc="55:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f5ecf0c5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0c59c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0c5b50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0c5ce0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0c5e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0c4030"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0c41c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0c4350"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0c44e0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0c4670"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0c4800"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0c4990"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0c4b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0c4cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0c3020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f5ecf0bb540" loc="60:../../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f5ecf0bb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ecf0bb8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ecf0bba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5ecf0bbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ecf0bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ecf0ba020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5ecf0ba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ecf0ba340"/>
        <function-ref name="get" scoped="" ref="0x7f5ecf0ba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5ecf0ba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5ecf0ba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ecf0ba980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5ecf0bab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5ecf0baca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5ecf0b9020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ecf0b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f5eceffb0c0" loc="46:../../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f5eceffb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f5eceffb440"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f5eceffb5d0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f5eceffb760"/>
        <function-ref name="isBusy" scoped="" ref="0x7f5eceffb8f0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f5eceffba80"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f5eceffbc10"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f5eceffbda0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f5eceffa020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f5eceffa1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f5eceffa340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f5eceffa4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f5eceffa660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f5eceffa7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f5eceffaa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f5eceffac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ecef6a3a0" loc="86:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ecef6a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ecef6a740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ecef6a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ecef69570" loc="89:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ecef69570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ecef69910"/>
        <function-ref name="configure" scoped="" ref="0x7f5ecef69aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ecef6b520" loc="85:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ecef6b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecef6b8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecef6ba50"/>
        <function-ref name="request" scoped="" ref="0x7f5ecef6bbe0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecef6bd70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecef6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ecef6ab20" loc="87:../../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ecef6ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ecef69020"/>
        <function-ref name="userId" scoped="" ref="0x7f5ecef691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ece5553b0" loc="44:../../../..//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5ece5553b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ece555730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f5ece5559c0" loc="45:../../../..//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f5ece5559c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ece555d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ece554020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ece5541b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ece554340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ece551850" loc="52:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ece551850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ece551bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ece551d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ece550910" loc="56:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ece550910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ece550cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ece550e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5ece54f120" loc="57:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5ece54f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ece54f4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ece54f630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ece54f7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ece54f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ece5529d0" loc="51:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5ece5529d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ece552d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ece551020"/>
        <function-ref name="request" scoped="" ref="0x7f5ece5511b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ece551340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ece5514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ece550020" loc="53:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ece550020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ece5503a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5ece550530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5ece54fc20" loc="68:../../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f5ece54fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ece54e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ece54e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ecef4d740" loc="55:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f5ecef4d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f5ecef4b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f5ecef4e1d0" loc="54:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f5ecef4e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecef4e550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecef4e6e0"/>
        <function-ref name="request" scoped="" ref="0x7f5ecef4e870"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecef4ea00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecef4eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f5ecef52d20" loc="52:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f5ecef52d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ecef4f0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ecef4f270"/>
        <function-ref name="request" scoped="" ref="0x7f5ecef4f400"/>
        <function-ref name="granted" scoped="" ref="0x7f5ecef4f590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ecef4f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f5ecef479a0" loc="43:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f5ecef479a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f5ecef47d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f5ecef46020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f5ecef461b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f5ecef46340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f5ecef464d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f5ecef46660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f5ecef467f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f5ecef46980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f5ecef46b10"/>
        <function-ref name="getMem" scoped="" ref="0x7f5ecef46ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f5ecef46e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f5ecef45020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f5ecef451b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f5ecef45440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f5ecef455d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f5ecef3f020" loc="45:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f5ecef3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecef3b630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecef3ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecef3d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecef3d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecef3a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecef3bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecef3d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecef3fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecef3b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecef3e110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecef3e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f5ecef48e00" loc="39:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f5ecef48e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecef471c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecef47350"/>
        <function-ref name="start" scoped="" ref="0x7f5ecef474e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecef47670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f5ecef3a6c0" loc="46:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f5ecef3a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecef36c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecef381e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecef36020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecef38ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecef35590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecef35110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecef38660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecef39390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecef36630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecef39860"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecef39d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f5ecef48240" loc="38:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f5ecef48240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ecef485c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ecef48750"/>
        <function-ref name="start" scoped="" ref="0x7f5ecef488e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecef48a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f5ecef45a90" loc="44:../../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f5ecef45a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecef40020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ecef43510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecef41300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecef43e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecef40920"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecef404a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ecef43990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ecef446b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecef41910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ecef44b80"/>
        <function-ref name="stop" scoped="" ref="0x7f5ecef43090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5eceee0020" loc="43:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f5eceee0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f5eceee0c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f5eceee39c0" loc="42:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f5eceee39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5eceee3d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5eceee1020"/>
        <function-ref name="start" scoped="" ref="0x7f5eceee11b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5eceee1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f5eceee4030" loc="40:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f5eceee4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5eceee43b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5eceee4540"/>
        <function-ref name="request" scoped="" ref="0x7f5eceee46d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5eceee4860"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5eceee49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f5eceee8cb0" loc="38:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f5eceee8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5eceee50a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5eceee5230"/>
        <function-ref name="request" scoped="" ref="0x7f5eceee53c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5eceee5550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5eceee56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f5eceede7f0" loc="52:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f5eceede7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5eceedeb70"/>
        <function-ref name="runTask" scoped="" ref="0x7f5eceeded00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f5eceee4d80" loc="41:../../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f5eceee4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5eceee3180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5eceee3310"/>
        <function-ref name="start" scoped="" ref="0x7f5eceee34a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5eceee3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5eceeaf4e0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5eceeaf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5eceeaba20"/>
        <function-ref name="fired" scoped="" ref="0x7f5eceead020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5eceeadda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5eceead920"/>
        <function-ref name="getdt" scoped="" ref="0x7f5eceeaa4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5eceeaa020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5eceead4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5eceeae110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5eceeab410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5eceeae5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5eceeaeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5eceea8020" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5eceea8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5eceea4630"/>
        <function-ref name="fired" scoped="" ref="0x7f5eceea7a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5eceea5920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5eceea54a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5eceea3020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5eceea4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5eceea5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5eceea8c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5eceea4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5eceea7110"/>
        <function-ref name="stop" scoped="" ref="0x7f5eceea75e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5eceea2b40" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5eceea2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed070ce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ed0531200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ecee9d110"/>
        <function-ref name="fired" scoped="" ref="0x7f5eceea05b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ecee9e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ecee9e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ecee9da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ecee9d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5eceea0a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5eceea1750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ecee9eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5eceea1c20"/>
        <function-ref name="stop" scoped="" ref="0x7f5eceea0130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f5ece574200" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f5ece574200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f5ece574e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f5ece572490" loc="45:../../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SendingBuffer_AppC.AutoAdc.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f5ece572490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f5ece571110"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5ed0707070" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f5ed070bc70" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f5ed06d9020" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f5ed06db270" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f5ed06da840" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f5ed06ddb00" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f5ed06db9e0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f5ed06e0d10" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f5ed06dd420" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f5ed06da120" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f5ed0828020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5ed0aedc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f5ed0687020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5ed0688cc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f5ed068b390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ed06d2b60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5ed06d0650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5ed0687890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f5ed06867b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f5ed0688560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5ed0686020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f5ed068bb30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f5ed068a350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f5ed068ada0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ed06d2b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5ed06d0650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ed068ab20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ed06d2b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5ed06d0650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5ed067a0e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f5ed0677730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f5ed06774b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5ed06762e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5ed0676060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5ed0678ca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5ed06783e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f5ed067aa90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5ed067a810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5ed06813e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f5ed0681d60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5ed0681ae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f5ed067f790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5ed067f510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f5ed067e2a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5ed067e020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ed067e990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5ed0691810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5ed068e2a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f5ed068e020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5ed068f020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ed0697ab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5ed068f760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5ed06939b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5ed0691120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5ed0693270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5ed06920e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f5ed06929f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5ed0692770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f5ed068ecb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f5ed068ea30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5ed06501f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f5ed074ba80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f5ed074a1f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f5ed074b2b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5ed0964810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5ed0ba3020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5ed0ba2020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5ed0ba3790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5ed0b9a270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5ed0b9aac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <function command="" provided="0" name="getData" ref="0x7f5ed0481d00" loc="102:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="95:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f5ed0481020" loc="86:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ed0499d30"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f5ed0498230"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ed0483a50" loc="86:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f5ed0483e40" loc="87:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ed0499d30"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f5ed0498230"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f5ed0482200" loc="87:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f5ed04825a0" loc="87:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f5ed0482950" loc="88:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f5ed0482cc0" loc="88:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f5ed0480d40" loc="112:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="104:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f5ed0480720" loc="112:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f5ed0480ab0" loc="112:../../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5ed04c99c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04c9060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5ed04c93b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed04c96e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f5ed04afdf0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ed04afb70" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f5ed04ac350" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ed04ac0d0" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ed04af190" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ed04ad680" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5ed04aa020" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04b1ca0" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5ed04a9110" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04aae10" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ed04a5490" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04a6e50" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed04a51c0" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ed04a6560" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5ed04a75e0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04a7020" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed04a7350" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f5ed04d02c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5ed04d1940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5ed04d1cc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed04d0020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ed04cc970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04cc370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed04cc6a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ed04cba60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ed04ce630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04ce3b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ed04cdb80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04cd5a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ed04cd8f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ed05206f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ed05206f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5ed04bc420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ed04c1d60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f5ed04bfb10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5ed04bf540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5ed04bf880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f5ed04c0d60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f5ed04bb460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f5ed04bcbb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5ed04c0570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f5ed04c22a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ed04c2020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f5ed04bdaa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5ed04bd4d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5ed04bd810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f5ed04c2d60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ed04c2ae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ed04c1650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../..//tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../..//tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f5ed049dad0" loc="45:../../../..//tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f5ed049dad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f5ed04774d0" loc="58:../../../..//tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../..//tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f5ed049dad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f5ed05285b0" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f5ed0528d60" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f5ed05275a0" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5ed0526510" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5ed0525c60" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ed05234d0" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5ed0527d30" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ed05220b0" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5ed0523dc0" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f5ed052adf0" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5ed0526cf0" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5ed05254b0" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f5ed04a3b80" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed04a3900" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f5ed047bd70" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed047baf0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f5ed0479020" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed047cce0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5ed04a09c0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f5ed04a1990" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5ed04a1020" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5ed04a01f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5ed049e470" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5ed03178a0" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5ed0316020" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5ed0318a40" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5ed0316e80" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ed0317190" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5ed0316740" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ed031bc40" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5ed0318350" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5ed02ec880" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5ed02eb020" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f5ed02e7b10" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5ed02e7890" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5ed02ed120" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5ed02e9020" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f5ed02e6490" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5ed02eb760" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ed02ec0e0" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f5ed02e8770" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f5ed02ed8c0" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ed02ee270" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f5ed02e97a0" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f5ed02e7020" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f5ed02e8020" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5ed02ee9a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f5ed00a4840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00a45c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5ed00ae400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00ae180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5ed00b0840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5ed00af350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00af0d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5ed00aad00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00aa720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ed00aaa70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5ed00ac800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00ac220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ed00ac570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f5ed00a72e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00a7060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5ed00a6680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00a60d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f5ed00a63f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ed04e4d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5ed00a80b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00a9e00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5ed00a2d00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ed00a2720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5ed00a2a70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f5ed00a0b50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ed0091020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed0095a30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed0095d60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ed008e660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed008e060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ed008e390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ed008c790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ed0090350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed00900d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ed008f870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed008f290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ed008f5e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ed001c920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ed001c920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ed001cb60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ed001cb60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f5ed0017970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ed001cb60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed00176f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5ed0016b40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed00168c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f5ed0019750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed00194d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ed0018020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ed001cb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed00148a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5ed0014c00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ed001cb60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f5ed0008030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed00099e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f5ed0009d70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f5ed00072a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ed0007020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f5ed00091f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f5ed000b7f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f5ed000b570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f5ecff56430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff561b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f5ecff58720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff584a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f5ecff5bdc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5ecff5bb40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f5ecff5b2a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5ecff5b020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f5ecff59880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f5ecff59600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f5ecff575e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff57360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f5ecff4ae60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5ecff4a850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5ecff4abd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f5ecffef0c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecfff1aa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f5ecfff1df0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f5ecffec6d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecffec0d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f5ecffec440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f5ecffefba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f5ed12d5110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecffef920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f5ecffed600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecffed380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f5ecfff12a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecfff1020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f5ecffee720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecffee4a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f5ecff4e630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff4e3b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f5ecff526f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff520d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f5ecff52460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f5ecff4f5f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff4f370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f5ecff51af0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff514d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f5ecff51860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f5ecff4d630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff4d3b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f5ecff5d0b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecfff2de0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ecff233a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecff27dc0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f5ecff23110" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ecff216a0" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f5ecff1fe70" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5ecff1f060" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f5ecff1f8a0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ecff1fbd0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ecff20840" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5ecff20260" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ecff205b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f5ecff23e30" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f5ecff23bb0" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f5ecff1a0e0" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f5ecff24870" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5ecff2da40" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ecff25270" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f5ecff142e0" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff14020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f5ecff16710" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f5ed051e720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f5ed051b090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff16410" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f5ecff13620" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f5ed051bb90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f5ed05194f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecff13320" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f5ecff2b6e0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f5ecff28840" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f5ecff28070" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f5ecff30e20" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f5ecff2ce80" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f5ecff29020" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f5ecff29840" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f5ecff2c6c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f5ecff0ed00" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f5ecff0f350" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f5ecff0e530" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f5ecff0e2b0" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f5ecff0fac0" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f5ecff10020" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5ecff18c90" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f5ecff10ad0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5ecff10850" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f5ecfeb3870" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f5ecfeb3290" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f5ecfeb35e0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f5ecfeb41f0" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f5ecfeb5880" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f5ecfeb5210" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f5ecfeb55f0" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f5ecfebcc10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ecfebc990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f5ecfeb4a70" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f5ecfeb8730" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5ecfeb84b0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5ecfebad30" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5ecfebaab0" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f5ecfeb2ae0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f5ecfeb69c0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5ecfeb6740" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f5ecfeb22b0" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f5ecfeb94d0" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5ed0004670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5ed0004dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f5ecfeb9cc0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f5ecfebc1f0" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5ecfeba390" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f5ecfeb6020" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5ecfeaf4b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5ecfeaf4b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f5ecfeafd70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5ecfeacae0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5ecfeaf4b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5ecfeac530" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f5ecfeac850" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5ecfeaf4b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5ecfe82c10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfe82990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ecfe81710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfe81490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f5ecfea2c50" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5ed0004670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5ed0004dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecfe9e020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecfe9e020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ecfe9e260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5ecfe9ae00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ecfe9ce40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f5ecfe9a460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5ecfe9be60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f5ecfe9a1d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5ecfe9b640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f5ecfe99620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ecfe9edc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ecfe9eb40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfe9e260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ecfe9c680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f5ecfe8b560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5ecfe894f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f5ecfe8bd40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f5ecfe8ccd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f5ecfe8c6f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ed04e3180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f5ecfe8ca40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ed04e3560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f5ecfe7ee40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5ecfe87e80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5ecfe87020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5ecfe87890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfe87be0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ecfe85610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5ecfe86770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5ecfe85020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfe85370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5ecfe8ec30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5ecfe8e470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f5ecfe8fce0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f5ecfe8f420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecfd7a4f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecfd7a4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ecfd7a730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfd7a730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5ecfd79070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecfd7a730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5ecfd78190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5ecfd798f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5ecfd788f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f5ecfcb2020" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5ecfcb11f0" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5ecfcb29c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5ecfcb2740" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f5ecfcb4770" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5ecfc8f020" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ecfc8eac0" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5ecfc907c0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f5ecfc8e2a0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f5ecfc8e020" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f5ecfc90020" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f5ecfc8f820" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f5ecfb7c270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f5ecfb7cac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f5ecfb7b350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f5ecfb55b60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfb55580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfb558d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f5ecfb50dd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfb50490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfb507e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5ecfb50b30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ecfb516b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfb510d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfb51420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f5ecfb56730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5ed052d8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfb56150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfb564a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5ecfb522c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfb53930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ecfb53c80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5ecfb52020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ecfb35df0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5ecfb35480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5ecfb35810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ecfb35b50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ecfb313c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5ecfb326a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5ecfb32a30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ecfb32d70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5ecfb31110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f5ecfb3ac90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f5ecfb3aa10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f5ecfa556f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5ecfa54070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f5ecfa44710" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5ecfa87020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5ecfa87440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f5ecfa522a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfa52020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f5ecfa50680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfa50400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f5ecfa52b10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ecfa462a0" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfa46020" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f5ecfa3dca0" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f5ecfa3d480" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f5ecfa352a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfa35020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f5ecfa36780" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f5ecfa11af0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f5ecfa1d790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f5ecfa2a610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfaa4080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5ecfaa48c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ecfa2a390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfaa4080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5ecfaa48c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f5ecfa1f870" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f5ecfa27a90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfa9f080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5ecfa9f8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ecfa27810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfa9f080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5ecfa9f8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f5ecfa16e70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f5ecfa13480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f5ecfa27070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfaa1020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5ecfaa17b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f5ecfa262b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfa9f080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f5ecfa9f8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f5ecfa22020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f5ecfa23d30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f5ecfa23610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f5ecfa16740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f5ecfa28840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfaa1020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5ecfaa17b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ecfa285c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfaa1020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5ecfaa17b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f5ecfa24420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f5ecfa155d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f5ecfa24e00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f5ecfa24b80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f5ecfa21910" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f5ecfa1f0e0" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f5ecfa18840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f5ecfa1a790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f5ecfa1e7e0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f5ecfa16020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f5ecfa1c020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f5ecfa15cf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5ecfa22800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f5ecfaaadd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f5ecfaa6680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f5ecfa144c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f5ecfa11350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f5ecfa26c50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f5ecfa269d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f5ecfa104d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecfa10250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f5ecfa2adf0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ecfaa4080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5ecfaa48c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f5ecfa1e020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f5ecfa1c770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f5ecfa18020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5ecfa76e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5ecfa752b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecfa19cf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5ecfa76e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5ecfa752b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f5ecfa192a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5ecfa87020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5ecfa87440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecfa19020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5ecfa87020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f5ecfa87440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f5ecfa10d90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f5ecfa14cb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f5ecfa21070" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f5ecfa13be0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f5ecfa1a020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f5ecfa1d020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5ecf9a9600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f5ecf982070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f5ecf995b10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f5ecf989d50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5ecf989ad0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f5ecf99c270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f5ecf985350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f5ecf98ecf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f5ecf996c50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f5ecf9939c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5ecf997c00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f5ecf997980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f5ecf998120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f5ecf991790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f5ecf988c80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f5ecf9838f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f5ecf989390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f5ecf97eb60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f5ecf979270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f5ecf99b0e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f5ecf991020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f5ecf990910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f5ecf996500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f5ecf99e020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f5ecf98bba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5ecf98b920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f5ecf9a17e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f5ecf987b80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f5ecf9827d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f5ecf97b350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f5ecf97aa90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f5ecf984270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f5ecf980020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f5ecf988520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f5ecf97fbb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f5ecf99b800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f5ecf98c020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f5ecf97f020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f5ecf983190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f5ecf98e520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f5ecf98e2a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f5ecf97baf0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f5ecf98b1f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f5ecf985ac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f5ecf99eaa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5ecfa62b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f5ecfa60020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecf99e820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5ecfa62b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f5ecfa60020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f5ecf992870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f5ecf99a980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5ecf99a700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f5ecf990120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecf991e70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f5ecf97e3b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f5ecf997270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f5ecf99a020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f5ecf98c9e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f5ecf98c760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f5ecf99c9a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f5ecf980740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f5ecf9849e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f5ecf987420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f5ecf98d740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f5ecf98d4c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f5ecf992120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f5ecf9953b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f5ecf97a2b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f5ecf998aa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5ecf998820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f5ecf97d350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f5ecf993270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f5ecf97db10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f5ecf8dd780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f5ecf8dc020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5ecf8a7900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f5ecf8a6a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5ecf8a7070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5ecf8a61f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5ecf8a5390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f5ecf89ab50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ecf8a3b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ecf89a8d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ecf8a3b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f5ecf89fb80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f5ecf89c6b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ecf8a3b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ecf89c430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ecf8a3b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5ecf89a020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ecf8a3b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5ecf69b5e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ecf69b360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5ecf687b00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f5ecf6871c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f5ecf687530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ecf687860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ecf686880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5ecf6862c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ecf6865f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecf66d530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecf66d530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ecf66d770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecf66d770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f5ecf66c2e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecf66d770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ecf66c060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ecf66d770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f5ecf60a580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5ecf5d89e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5ecf5d8020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f5ecf5d8750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f5ecf5d97f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f5ecf5d9020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5ecf5dcd30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f5ecf5ed3d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecf5ed150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f5ecf5ef3d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecf5ef150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ecf5eb350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecf5eb0d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ecf5ec390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ecf5ec110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ed04d4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ed04d1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ecf476910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ecf476910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5ecf473270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ed12d4920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f5ecf2e35e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5ecf2e35e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f5ecf2e02a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5ecf2e35e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f5ecf2e0020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5ecf2e35e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f5ecf0f9df0" loc="189:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f5ecf101740" loc="84:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecf1014c0" loc="84:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f5ecf100c40" loc="106:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecf100640" loc="106:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f5ecf1009b0" loc="106:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f5ecf0fa9c0" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecf0fb700" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f5ecf0fa020" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f5ecf0fa3a0" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f5ecf0fa710" loc="177:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f5ecf0f5770" loc="227:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f5ecf0f50d0" loc="227:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f5ecf0f5460" loc="227:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f5ecf0fc2d0" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5ecf0fe020" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f5ed0499020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f5ed049a610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f5ecf0fe8c0" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f5ecf0fec50" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f5ecf0fc020" loc="138:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f5ecf0f8ad0" loc="206:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ecf0f8850" loc="206:../../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f5ecf0f22b0" loc="49:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f5ecf0f2ad0" loc="54:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../..//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5ecf0e67b0" loc="95:../../../..//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ecf0e5030" loc="105:../../../..//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ed0b9ec20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f5ecf0d82d0" loc="63:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed04875f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f5ed0486090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f5ecf0d63f0" loc="82:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ed0499d30"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f5ed0498230"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ecf0d6170" loc="82:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f5ecf0d3b10" loc="106:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f5ecf0d2d70" loc="118:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ed0ba7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f5ecf0d25b0" loc="112:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f5ecf0d2330" loc="112:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f5ecf0d8af0" loc="68:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0485710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f5ed0483020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f5ecf0d78d0" loc="75:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ed0499d30"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f5ed0498230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ecf0d7280" loc="75:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f5ecf0d7640" loc="75:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5ed0499d30"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f5ed0498230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f5ecf0d1e00" loc="128:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f5ecf0d9020" loc="51:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed04875f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f5ed0486090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f5ecf0ddd60" loc="51:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed04875f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f5ed0486090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f5ecf0d4020" loc="89:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ecf0d6c40" loc="89:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ed12d4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f5ecf0d4aa0" loc="95:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f5ecf0d4820" loc="95:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f5ecf0d3350" loc="101:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ed12d4520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f5ecf0d1570" loc="123:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f5ecf0cd5d0" loc="133:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f5ecf0d9a80" loc="57:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0485710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f5ed0483020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f5ecf0d9800" loc="57:../../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5ed0485710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f5ed0483020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
