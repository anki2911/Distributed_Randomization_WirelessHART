<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:LowPowerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff14ed3bc40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff14ef15560"/></to>
    </wire>
    <wire loc="72:../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff14ef15560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff14ed57590"/></to>
    </wire>
    <wire loc="15:LowPowerAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff14ecd55a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff14daed020"/></to>
    </wire>
    <wire loc="64:../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff14daed020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff14d37e420"/></to>
    </wire>
    <wire loc="16:LowPowerAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7ff14ecbe970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff14e964140"/></to>
    </wire>
    <wire loc="78:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff14e964140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff14e937680"/></to>
    </wire>
    <wire loc="17:LowPowerAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14ed30500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="51:../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec632a0"/></to>
    </wire>
    <wire loc="18:LowPowerAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7ff14eccde20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14dae86d0"/></to>
    </wire>
    <wire loc="52:../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14dae86d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:LowPowerAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7ff14ecc9340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14dae1060"/></to>
    </wire>
    <wire loc="52:../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14dae1060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:LowPowerAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff14ecb47a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff14daedc30"/></to>
    </wire>
    <wire loc="65:../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff14daedc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff14d37d060"/></to>
    </wire>
    <wire loc="23:LowPowerAppC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14ecb0880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14d851160"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14d851160"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7ff14d921d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:LowPowerAppC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff14d84d020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff14ec8e5d0"/></to>
    </wire>
    <wire loc="25:LowPowerAppC.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7ff14ec903a0"/></from>
      <to><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff14d850d30"/></to>
    </wire>
    <wire loc="60:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff14d850d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7ff14daba2e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14cf3a920"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dab2020"/></to>
    </wire>
    <wire loc="104:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dbd1dd0"/></to>
    </wire>
    <wire loc="60:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dc5bb70"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dc7a750"/></to>
    </wire>
    <wire loc="52:../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dc9b080"/></to>
    </wire>
    <wire loc="53:../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ddcf130"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ded0620"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dfbec60"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14e7bf7e0"/></to>
    </wire>
    <wire loc="103:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14d171140"/></to>
    </wire>
    <wire loc="74:../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14e48a020"/></to>
    </wire>
    <wire loc="60:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14e870510"/></to>
    </wire>
    <wire loc="67:../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ff14ed57c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ff14f3a73a0"/></to>
    </wire>
    <wire loc="53:../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ff14f3a73a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ff14ef52140"/></to>
    </wire>
    <wire loc="68:../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ff14ed4a6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ef179d0"/></to>
    </wire>
    <wire loc="48:../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14ef179d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ef12bb0"/></to>
    </wire>
    <wire loc="71:../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ed4adc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></to>
    </wire>
    <wire loc="49:../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ff14ef0e3b0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7ff14eef0020"/></to>
    </wire>
    <wire loc="46:../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ff14eef0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14eeed020"/></to>
    </wire>
    <wire loc="50:../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ff14ef0ea90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ef11d80"/></to>
    </wire>
    <wire loc="56:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7ff14ef0c1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ec3bc40"/></to>
    </wire>
    <wire loc="46:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14eeed020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14eed7cb0"/></to>
    </wire>
    <wire loc="47:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff14eee66c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff14eed63d0"/></to>
    </wire>
    <wire loc="48:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff14f02a4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff14eed5680"/></to>
    </wire>
    <wire loc="113:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7ff14ee925a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14edcf6d0"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7ff14ee7f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14edc8b30"/></to>
    </wire>
    <wire loc="108:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7ff14ee89700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14edd4160"/></to>
    </wire>
    <wire loc="149:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7ff14ee6da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14edaecb0"/></to>
    </wire>
    <wire loc="107:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7ff14ee8faa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14edd6480"/></to>
    </wire>
    <wire loc="148:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7ff14ee73020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14edae020"/></to>
    </wire>
    <wire loc="170:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7ff14ee6aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14ed97cb0"/></to>
    </wire>
    <wire loc="154:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7ff14ee7a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14eda8220"/></to>
    </wire>
    <wire loc="99:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7ff14ee93b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14ee259d0"/></to>
    </wire>
    <wire loc="135:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7ff14ee6fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14edbd2f0"/></to>
    </wire>
    <wire loc="134:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7ff14ee753e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14edbe610"/></to>
    </wire>
    <wire loc="133:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7ff14ee7e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14edbf220"/></to>
    </wire>
    <wire loc="115:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7ff14ee88700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14edcd7a0"/></to>
    </wire>
    <wire loc="156:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7ff14ee6ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14eda62f0"/></to>
    </wire>
    <wire loc="140:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7ff14ee7dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14edb86d0"/></to>
    </wire>
    <wire loc="114:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7ff14ee8e890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14edceac0"/></to>
    </wire>
    <wire loc="93:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7ff14eea2060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee33540"/></to>
    </wire>
    <wire loc="155:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7ff14ee73da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14eda7610"/></to>
    </wire>
    <wire loc="106:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7ff14ee990c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14edd7020"/></to>
    </wire>
    <wire loc="161:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7ff14ee79a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14eda06d0"/></to>
    </wire>
    <wire loc="101:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7ff14ee836d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14eddda90"/></to>
    </wire>
    <wire loc="142:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7ff14ee6ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14edb67a0"/></to>
    </wire>
    <wire loc="100:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7ff14ee8bcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14eddede0"/></to>
    </wire>
    <wire loc="141:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7ff14ee741f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14edb7ac0"/></to>
    </wire>
    <wire loc="163:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7ff14ee6ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14ed9e7a0"/></to>
    </wire>
    <wire loc="147:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7ff14ee7b0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14edb0b30"/></to>
    </wire>
    <wire loc="120:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="162:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7ff14ee72b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14ed9fac0"/></to>
    </wire>
    <wire loc="128:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7ff14ee70a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14edc6cb0"/></to>
    </wire>
    <wire loc="169:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7ff14ee71a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14ed97020"/></to>
    </wire>
    <wire loc="127:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7ff14ee76570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff14edc6020"/></to>
    </wire>
    <wire loc="168:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7ff14ee77020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff14ed99b30"/></to>
    </wire>
    <wire loc="94:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff14ee31450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee32d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff14ee31aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7ff14ed91a90"/></to>
    </wire>
    <wire loc="96:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff14ee2f120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7ff14ed8e260"/></to>
    </wire>
    <wire loc="102:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14eddc930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee33540"/></to>
    </wire>
    <wire loc="103:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edda020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee32d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14edd3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee33540"/></to>
    </wire>
    <wire loc="110:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edd27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee32d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14edcc610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee33540"/></to>
    </wire>
    <wire loc="117:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edcbc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee32d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff14ee292f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff14ee29940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7ff14ed8e9f0"/></to>
    </wire>
    <wire loc="123:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff14ee28020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7ff14ed8d240"/></to>
    </wire>
    <wire loc="129:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14edc4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="130:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edc22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14edbc160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="137:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edbb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14edb4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="144:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edb3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14edadb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="151:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14edab2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14eda5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="158:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14eda37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14ed9d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="165:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14ed9cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14ed96b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></to>
    </wire>
    <wire loc="172:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff14ed932f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14ef50040"/></to>
    </wire>
    <wire loc="55:../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7ff14ef4c490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7ff14f33e3b0"/></to>
    </wire>
    <wire loc="94:LowPowerC.nc">
      <from><interface-ref name="getData" scoped="" ref="0x7ff14ec7d380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14ec3bc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14ec66c30"/></to>
    </wire>
    <wire loc="54:../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ff14ec5b910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7ff14ec3e360"/></to>
    </wire>
    <wire loc="58:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ff14ec3e360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14ea23020"/></to>
    </wire>
    <wire loc="55:../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ff14ec61b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7ff14ec3d6a0"/></to>
    </wire>
    <wire loc="61:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ff14ec3d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14ea0fb90"/></to>
    </wire>
    <wire loc="56:../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ff14ec5ae30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7ff14ec3c9c0"/></to>
    </wire>
    <wire loc="64:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ff14ec3c9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14ea0a710"/></to>
    </wire>
    <wire loc="59:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14ea122f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7ff14ebe3200"/></to>
    </wire>
    <wire loc="486:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7ff14ebe3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eac0740"/></to>
    </wire>
    <wire loc="62:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14ea0ede0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7ff14ebe1200"/></to>
    </wire>
    <wire loc="487:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7ff14ebe1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eabb100"/></to>
    </wire>
    <wire loc="65:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14ea09930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7ff14ebdf200"/></to>
    </wire>
    <wire loc="488:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7ff14ebdf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eab6d10"/></to>
    </wire>
    <wire loc="442:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ff14ec24020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb59100"/></to>
    </wire>
    <wire loc="455:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ff14ec10020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb2ad10"/></to>
    </wire>
    <wire loc="531:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7ff14ebc7560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb1bd10"/></to>
    </wire>
    <wire loc="551:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7ff14eba2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8f100"/></to>
    </wire>
    <wire loc="532:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7ff14ebc4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb16740"/></to>
    </wire>
    <wire loc="460:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7ff14ec0c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb1f100"/></to>
    </wire>
    <wire loc="473:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7ff14ebf8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaf0e00"/></to>
    </wire>
    <wire loc="497:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7ff14ebd3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea9ad10"/></to>
    </wire>
    <wire loc="535:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7ff14ebbe580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb0dd10"/></to>
    </wire>
    <wire loc="545:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7ff14ebae570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaac100"/></to>
    </wire>
    <wire loc="557:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7ff14eb9a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8bd10"/></to>
    </wire>
    <wire loc="445:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ff14ec1e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb4a100"/></to>
    </wire>
    <wire loc="536:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7ff14ebbc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb08740"/></to>
    </wire>
    <wire loc="450:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ff14ec1a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb41740"/></to>
    </wire>
    <wire loc="463:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7ff14ec06020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb11100"/></to>
    </wire>
    <wire loc="476:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7ff14ebf1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eae2d10"/></to>
    </wire>
    <wire loc="489:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7ff14ebdd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eab1740"/></to>
    </wire>
    <wire loc="500:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7ff14ebcd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8bd10"/></to>
    </wire>
    <wire loc="440:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ff14ec29020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb63d10"/></to>
    </wire>
    <wire loc="453:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ff14ec14020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb33860"/></to>
    </wire>
    <wire loc="466:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7ff14ec00020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb02100"/></to>
    </wire>
    <wire loc="530:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7ff14ebc9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb1bd10"/></to>
    </wire>
    <wire loc="548:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7ff14eba8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea9e100"/></to>
    </wire>
    <wire loc="555:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7ff14eb9c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8bd10"/></to>
    </wire>
    <wire loc="541:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7ff14ebb4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eac5d10"/></to>
    </wire>
    <wire loc="471:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7ff14ebfc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaf9a60"/></to>
    </wire>
    <wire loc="484:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7ff14ebe7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eac9100"/></to>
    </wire>
    <wire loc="495:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7ff14ebd7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaa3740"/></to>
    </wire>
    <wire loc="549:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7ff14eba6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea9ad10"/></to>
    </wire>
    <wire loc="538:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7ff14ebba570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ead3d10"/></to>
    </wire>
    <wire loc="443:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ff14ec22020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb55d10"/></to>
    </wire>
    <wire loc="456:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ff14ec0e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb24740"/></to>
    </wire>
    <wire loc="493:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7ff14ebdb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaac100"/></to>
    </wire>
    <wire loc="461:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7ff14ec0a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb1bd10"/></to>
    </wire>
    <wire loc="474:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7ff14ebf5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaeb740"/></to>
    </wire>
    <wire loc="498:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7ff14ebd1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea94740"/></to>
    </wire>
    <wire loc="540:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7ff14ebb6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eac9100"/></to>
    </wire>
    <wire loc="438:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ff14ec36020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb6c6d0"/></to>
    </wire>
    <wire loc="451:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ff14ec18020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb3c100"/></to>
    </wire>
    <wire loc="464:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7ff14ec04020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb0dd10"/></to>
    </wire>
    <wire loc="477:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7ff14ebef200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eadc740"/></to>
    </wire>
    <wire loc="542:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7ff14ebb2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb02100"/></to>
    </wire>
    <wire loc="546:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7ff14ebac570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaa8d10"/></to>
    </wire>
    <wire loc="552:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7ff14eba0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8bd10"/></to>
    </wire>
    <wire loc="482:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7ff14ebeb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ead3d10"/></to>
    </wire>
    <wire loc="543:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7ff14ebb0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eafed10"/></to>
    </wire>
    <wire loc="441:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ff14ec27020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb5e740"/></to>
    </wire>
    <wire loc="454:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ff14ec12020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb2e270"/></to>
    </wire>
    <wire loc="467:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7ff14ebfe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eafed10"/></to>
    </wire>
    <wire loc="539:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7ff14ebb8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eace740"/></to>
    </wire>
    <wire loc="550:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7ff14eba4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea94740"/></to>
    </wire>
    <wire loc="472:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7ff14ebfa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaf4460"/></to>
    </wire>
    <wire loc="485:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7ff14ebe5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eac5d10"/></to>
    </wire>
    <wire loc="496:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7ff14ebd5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea9e100"/></to>
    </wire>
    <wire loc="444:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ff14ec20020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb50740"/></to>
    </wire>
    <wire loc="494:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7ff14ebd9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaa8d10"/></to>
    </wire>
    <wire loc="449:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ff14ec1c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb46d10"/></to>
    </wire>
    <wire loc="462:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7ff14ec08020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb16740"/></to>
    </wire>
    <wire loc="475:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7ff14ebf3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eae6100"/></to>
    </wire>
    <wire loc="499:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7ff14ebcf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8f100"/></to>
    </wire>
    <wire loc="439:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ff14ec2b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb67100"/></to>
    </wire>
    <wire loc="452:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ff14ec16020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb38d10"/></to>
    </wire>
    <wire loc="465:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7ff14ec02020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb08740"/></to>
    </wire>
    <wire loc="478:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7ff14ebed200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ead7100"/></to>
    </wire>
    <wire loc="534:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7ff14ebc0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb11100"/></to>
    </wire>
    <wire loc="547:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7ff14ebaa570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eaa3740"/></to>
    </wire>
    <wire loc="533:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7ff14ebc2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb11100"/></to>
    </wire>
    <wire loc="483:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7ff14ebe9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eace740"/></to>
    </wire>
    <wire loc="554:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7ff14eb9e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14ea8f100"/></to>
    </wire>
    <wire loc="558:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7ff14eb98580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eab1740"/></to>
    </wire>
    <wire loc="529:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7ff14ebcb1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff14eb1f100"/></to>
    </wire>
    <wire loc="63:../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff14d37e420"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff14d371390"/></to>
    </wire>
    <wire loc="64:../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff14d37d060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff14e9602b0"/></to>
    </wire>
    <wire loc="66:../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff14daec8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff14d37dc70"/></to>
    </wire>
    <wire loc="65:../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff14d37dc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff14e95b020"/></to>
    </wire>
    <wire loc="67:../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff14daea020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff14d37b2b0"/></to>
    </wire>
    <wire loc="66:../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff14d37b2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e95a800"/></to>
    </wire>
    <wire loc="83:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff14e9602b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff14e931760"/></to>
    </wire>
    <wire loc="84:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff14e95b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff14e932020"/></to>
    </wire>
    <wire loc="85:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e95a800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e92f810"/></to>
    </wire>
    <wire loc="60:../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14d370060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14e9bac20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff14d370c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff14e95b020"/></to>
    </wire>
    <wire loc="53:../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14e9bac20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14e96e580"/></to>
    </wire>
    <wire loc="54:../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff14e96d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff14e9631d0"/></to>
    </wire>
    <wire loc="80:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff14e9631d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff14e9367f0"/></to>
    </wire>
    <wire loc="55:../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff14e96b060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff14e95b020"/></to>
    </wire>
    <wire loc="56:../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff14e96a720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff14e9602b0"/></to>
    </wire>
    <wire loc="169:../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7ff14e969480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7ff14e969c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff14e937680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff14e90fb70"/></to>
    </wire>
    <wire loc="85:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff14e9367f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff14db93020"/></to>
    </wire>
    <wire loc="82:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ff14e961c10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff14e933880"/></to>
    </wire>
    <wire loc="88:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ff14e933880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff14db92df0"/></to>
    </wire>
    <wire loc="84:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff14e931760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff14db90a80"/></to>
    </wire>
    <wire loc="89:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14e94f9e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de4b550"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de4b550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de3da80"/></to>
    </wire>
    <wire loc="86:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e9438a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e925bb0"/></to>
    </wire>
    <wire loc="91:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e925bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e905080"/></to>
    </wire>
    <wire loc="81:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14e961030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14e934b20"/></to>
    </wire>
    <wire loc="87:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14e934b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14db92210"/></to>
    </wire>
    <wire loc="93:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e92f810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e906020"/></to>
    </wire>
    <wire loc="89:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff14e932020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff14db91470"/></to>
    </wire>
    <wire loc="90:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14e94eaf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14de47660"/></to>
    </wire>
    <wire loc="60:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14de47660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14de39af0"/></to>
    </wire>
    <wire loc="97:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff14e90fb70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff14dbc5b80"/></to>
    </wire>
    <wire loc="83:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e91dd40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14db8e8b0"/></to>
    </wire>
    <wire loc="86:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7ff14e910d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7ff14db8fce0"/></to>
    </wire>
    <wire loc="92:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e928970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e907140"/></to>
    </wire>
    <wire loc="84:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e907140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></to>
    </wire>
    <wire loc="83:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e905080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14dbc5080"/></to>
    </wire>
    <wire loc="85:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e906020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff14de4e6e0"/></to>
    </wire>
    <wire loc="90:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff14e91b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff14e905b70"/></to>
    </wire>
    <wire loc="82:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff14e905b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff14dbb0020"/></to>
    </wire>
    <wire loc="94:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14e924a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14e9069d0"/></to>
    </wire>
    <wire loc="86:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14e9069d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14de4ca70"/></to>
    </wire>
    <wire loc="97:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7ff14db850f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e90cd00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14db8d860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff14e909d10"/></to>
    </wire>
    <wire loc="93:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ff14e909d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff14dc2ec90"/></to>
    </wire>
    <wire loc="99:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff14db8b690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14e908a90"/></to>
    </wire>
    <wire loc="94:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14e908a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14dc2da50"/></to>
    </wire>
    <wire loc="101:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14db874d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14e077b20"/></to>
    </wire>
    <wire loc="102:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14db8bce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de42d20"/></to>
    </wire>
    <wire loc="103:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14db8ab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="57:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de3e640"/></to>
    </wire>
    <wire loc="104:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff14db89610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff14e879dc0"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff14e879dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff14e86e970"/></to>
    </wire>
    <wire loc="106:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ff14db861f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e8fe330"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e8fe330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e8f97e0"/></to>
    </wire>
    <wire loc="109:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14db85d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff14dbc5b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7ff14dbc2d90"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14de4ca70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14de3d020"/></to>
    </wire>
    <wire loc="53:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff14dbb0020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff14dbae410"/></to>
    </wire>
    <wire loc="97:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ff14dc2ec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff14dc23a20"/></to>
    </wire>
    <wire loc="64:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14dbc5080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14dbbe2d0"/></to>
    </wire>
    <wire loc="90:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7ff14e90a820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14dc2e5e0"/></to>
    </wire>
    <wire loc="92:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14dc2e5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7ff14dc23370"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff14de4e6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff14de3fc50"/></to>
    </wire>
    <wire loc="88:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e90cd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14dc30be0"/></to>
    </wire>
    <wire loc="96:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14dc30be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14dc257b0"/></to>
    </wire>
    <wire loc="89:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7ff14e90ba00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14dc2f8e0"/></to>
    </wire>
    <wire loc="91:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14dc2f8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7ff14dc244d0"/></to>
    </wire>
    <wire loc="91:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ff14e909020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ff14dc2c170"/></to>
    </wire>
    <wire loc="93:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ff14dc2c170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ff14dc21020"/></to>
    </wire>
    <wire loc="98:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14dc2da50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14dc22840"/></to>
    </wire>
    <wire loc="98:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff14dbc2d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff14e901390"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff14e901390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff14e8fde70"/></to>
    </wire>
    <wire loc="101:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14dc2b6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14dc7f220"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14dc7f220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14dc7da20"/></to>
    </wire>
    <wire loc="102:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14dc7e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14dbb3350"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14dbb3350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff14dbb0d70"/></to>
    </wire>
    <wire loc="103:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14dbb0d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14dbc9ce0"/></to>
    </wire>
    <wire loc="61:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14dbc9ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff14dbc3860"/></to>
    </wire>
    <wire loc="104:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14dbc3860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14e901e80"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff14e901e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14e8fa990"/></to>
    </wire>
    <wire loc="107:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc2b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14dbc6980"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14dbc6980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff14dbc2690"/></to>
    </wire>
    <wire loc="108:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff14dbc2690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14dc62aa0"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14dc62aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14dc5ee30"/></to>
    </wire>
    <wire loc="109:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc5f950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14e900b40"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14e900b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14ded47c0"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff14ded47c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff14dece020"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e8f8640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e88a950"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e88a950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e870b80"/></to>
    </wire>
    <wire loc="60:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e8f0b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e884bf0"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e884bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e86c740"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff14e8ed760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff14dfcf6c0"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff14e8ed760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff14ded85c0"/></to>
    </wire>
    <wire loc="61:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff14ded85c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff14ded0ca0"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff14dfcf6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff14dfbd320"/></to>
    </wire>
    <wire loc="64:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff14e8e52a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff14dfcc020"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff14dfcc020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff14dfbdbc0"/></to>
    </wire>
    <wire loc="65:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ff14e8ee060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14dfcccb0"/></to>
    </wire>
    <wire loc="57:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14dfcccb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14dfbc970"/></to>
    </wire>
    <wire loc="72:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e8e3330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></to>
    </wire>
    <wire loc="73:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14e8db920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="76:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff14e8e2420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff14dca0a20"/></to>
    </wire>
    <wire loc="56:../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff14dca0a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff14dc99a20"/></to>
    </wire>
    <wire loc="79:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7ff14e8df110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14dca2aa0"/></to>
    </wire>
    <wire loc="74:../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff14dca2aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14e48f280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14e8e2bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="76:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7ff14e8d1b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7ff14e8d2ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7ff14e8d4c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7ff14e8750c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7ff14e86bb40"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7ff14e860d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7bc220"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7bc220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7b65f0"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff14e85d060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff14e6b7690"/></to>
    </wire>
    <wire loc="72:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff14e6b7690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6a9520"/></to>
    </wire>
    <wire loc="67:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ff14e85c380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7ff14e6b2020"/></to>
    </wire>
    <wire loc="75:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ff14e6b2020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e69a710"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ff14e85b6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7ff14e6b06a0"/></to>
    </wire>
    <wire loc="77:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ff14e6b06a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e691d70"/></to>
    </wire>
    <wire loc="71:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ff14e8580e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7ff14e67b210"/></to>
    </wire>
    <wire loc="64:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ff14e67b210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ff14e55da30"/></to>
    </wire>
    <wire loc="74:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff14e8411d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e103e20"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e103e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff14e8422b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ff14e0fd7b0"/></to>
    </wire>
    <wire loc="132:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff14e0fd7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e8429c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e0fcae0"/></to>
    </wire>
    <wire loc="135:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e0fcae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e843a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0ffad0"/></to>
    </wire>
    <wire loc="130:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0ffad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e843120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e0fb160"/></to>
    </wire>
    <wire loc="136:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e0fb160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e848b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e0f3870"/></to>
    </wire>
    <wire loc="154:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e0f3870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e84f3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e0f0880"/></to>
    </wire>
    <wire loc="158:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e0f0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e84fc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e0ef0a0"/></to>
    </wire>
    <wire loc="159:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e0ef0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e84a5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e0f7e50"/></to>
    </wire>
    <wire loc="147:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e0f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e847020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e0f6670"/></to>
    </wire>
    <wire loc="148:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e0f6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff14e854520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ff14e0e2500"/></to>
    </wire>
    <wire loc="184:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff14e0e2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e84ca90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e0e3ce0"/></to>
    </wire>
    <wire loc="183:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e0e3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e8478e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e0f4e50"/></to>
    </wire>
    <wire loc="153:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e0f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff14e8461c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7ff14e0f6e50"/></to>
    </wire>
    <wire loc="149:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff14e0f6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e846a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e0f5e50"/></to>
    </wire>
    <wire loc="151:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e0f5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7ff14e840d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e0d0a80"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e0d0a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7ff14e840020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e0a49e0"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e0a49e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14e850810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14e077b20"/></to>
    </wire>
    <wire loc="100:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e868020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e076d20"/></to>
    </wire>
    <wire loc="23:../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e076d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e05b310"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7ff14e835820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7ff14e836940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14e7bf7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14e7b7d40"/></to>
    </wire>
    <wire loc="51:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14e7b7d40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14d30a060"/></to>
    </wire>
    <wire loc="52:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7b65f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d30a8b0"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14d30a060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14d303020"/></to>
    </wire>
    <wire loc="53:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff14d30a8b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d2fda90"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14d303020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14d2e7a30"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff14d2f6210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d303870"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff14d303870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d2e6340"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14d2f9e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14e742020"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14e742020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14e705ad0"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d2e24c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d2ec570"/></to>
    </wire>
    <wire loc="49:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d2ec570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d2e1a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d2ebc10"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d2ebc10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d2e0da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d2e9020"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d2e9020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="59:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7ff14ee7f020"/></to>
    </wire>
    <wire loc="60:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7ff14ee76570"/></to>
    </wire>
    <wire loc="66:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="67:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7ff14ee7dbe0"/></to>
    </wire>
    <wire loc="68:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7ff14ee741f0"/></to>
    </wire>
    <wire loc="70:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="71:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7ff14ee7b0c0"/></to>
    </wire>
    <wire loc="72:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7ff14ee73020"/></to>
    </wire>
    <wire loc="74:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="75:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7ff14ee7a5a0"/></to>
    </wire>
    <wire loc="76:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7ff14ee73da0"/></to>
    </wire>
    <wire loc="78:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="79:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7ff14ee79a50"/></to>
    </wire>
    <wire loc="80:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7ff14ee72b80"/></to>
    </wire>
    <wire loc="82:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="83:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7ff14ee77020"/></to>
    </wire>
    <wire loc="84:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7ff14ee71a20"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ff14e701020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff14e739020"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff14e739020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14e7350a0"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7262c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></to>
    </wire>
    <wire loc="73:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ff14e6b69c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6a4060"/></to>
    </wire>
    <wire loc="74:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ff14e6b5cf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6a0b70"/></to>
    </wire>
    <wire loc="71:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ff14e6b83e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6aea20"/></to>
    </wire>
    <wire loc="76:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ff14e6b1370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6951b0"/></to>
    </wire>
    <wire loc="63:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e6adc50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff14ec24020"/></to>
    </wire>
    <wire loc="64:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e6a87a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7ff14ebf8200"/></to>
    </wire>
    <wire loc="65:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e6a32f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ff14ec27020"/></to>
    </wire>
    <wire loc="66:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e69fde0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff14ec36020"/></to>
    </wire>
    <wire loc="67:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e699930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7ff14ebef200"/></to>
    </wire>
    <wire loc="68:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e694480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7ff14ebfa200"/></to>
    </wire>
    <wire loc="69:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e68f020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7ff14ebf1200"/></to>
    </wire>
    <wire loc="63:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ff14e6745a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff14e660020"/></to>
    </wire>
    <wire loc="65:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff14e67be30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ff14e54da70"/></to>
    </wire>
    <wire loc="53:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e660ae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7ff14ee7e5a0"/></to>
    </wire>
    <wire loc="54:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7ff14e65fda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7ff14ee6fa20"/></to>
    </wire>
    <wire loc="55:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e65dc20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7ff14ebfa200"/></to>
    </wire>
    <wire loc="60:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ff14e54f610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff14e64ec40"/></to>
    </wire>
    <wire loc="70:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ff14e64ec40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff14e63ba30"/></to>
    </wire>
    <wire loc="61:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ff14e54c610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff14e651e70"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ff14e651e70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff14e6419c0"/></to>
    </wire>
    <wire loc="82:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ff14e644bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7ff14e630bc0"/></to>
    </wire>
    <wire loc="73:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ff14e64bbc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7ff14e637a30"/></to>
    </wire>
    <wire loc="77:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ff14e649bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7ff14e635a30"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ff14e654d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7ff14e63da30"/></to>
    </wire>
    <wire loc="80:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ff14e646bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ff14e632a30"/></to>
    </wire>
    <wire loc="71:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ff14e64dbc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7ff14e63aa30"/></to>
    </wire>
    <wire loc="83:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ff14e643bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7ff14e62fbc0"/></to>
    </wire>
    <wire loc="78:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ff14e648bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7ff14e634a30"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ff14e64fc80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ff14e63ca30"/></to>
    </wire>
    <wire loc="81:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ff14e645c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7ff14e631bc0"/></to>
    </wire>
    <wire loc="72:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ff14e64cbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7ff14e639a30"/></to>
    </wire>
    <wire loc="76:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ff14e64abc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7ff14e636a30"/></to>
    </wire>
    <wire loc="67:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ff14e655dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7ff14e63ea30"/></to>
    </wire>
    <wire loc="79:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ff14e647bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7ff14e633a30"/></to>
    </wire>
    <wire loc="131:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff14e0fd160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14e0f1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff14e0e90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff14e0f00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff14e0dd500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14e0e0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff14e0fc490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff14e0e6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14e0e1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff14e0ec880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff14e0ed0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e102a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e507920"/></to>
    </wire>
    <wire loc="138:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14e0fbe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff14e0fa490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14e0e5c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff14e0fabe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14e0e1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff14e0e60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14e0f5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14e0e70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff14e0e9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14e0e7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff14e0dfce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14e0e0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff14e0ed880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff14e0e80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff14e0e2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff14e0ef880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff14e0ddce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14e0ff480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff14e0f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14e0f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff14e0ea0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff14e0ea880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14e0f10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff14e0f82f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff14e0f7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14e0fb7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14e0e3500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff14e0df500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14e0ec0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff14e0e8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff14e0fde00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff14e0ee0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff14e0f8940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff14e0ee880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff14e0e50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff14e0dc9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e503bb0"/></to>
    </wire>
    <wire loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e500020"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e500db0"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e504810"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e4ffba0"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7ff14e4fb020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14e493770"/></to>
    </wire>
    <wire loc="74:../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff14e493770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14e48f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff14e4fe400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e471c40"/></to>
    </wire>
    <wire loc="52:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e471c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14d1f3c30"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff14e4fc080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff14e4708f0"/></to>
    </wire>
    <wire loc="53:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff14e4708f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff14d1ed0c0"/></to>
    </wire>
    <wire loc="64:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e4f2680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e129020"/></to>
    </wire>
    <wire loc="54:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e129020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff14d1ec2b0"/></to>
    </wire>
    <wire loc="67:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14e4fbdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7ff14e4ed120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff14e48f280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14e48ab70"/></to>
    </wire>
    <wire loc="110:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff14d1ec2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e3ff510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff14d1ed0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff14e40bdd0"/></to>
    </wire>
    <wire loc="105:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14d1f3c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e411a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d1f08f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d1e42c0"/></to>
    </wire>
    <wire loc="64:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d1e42c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14e28b8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff14e40bdd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff14e386440"/></to>
    </wire>
    <wire loc="108:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14d1ed6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14e40a480"/></to>
    </wire>
    <wire loc="92:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14e40a480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14e386a50"/></to>
    </wire>
    <wire loc="111:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14e3fc600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14d1eca50"/></to>
    </wire>
    <wire loc="115:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d1d6760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e40b5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff14e3fe370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14d1e5640"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14d1e5640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e28c5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff14e3f86a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff14d1dfc10"/></to>
    </wire>
    <wire loc="67:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff14d1dfc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff14e291a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e40b5e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e387c40"/></to>
    </wire>
    <wire loc="93:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e3ff510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e385700"/></to>
    </wire>
    <wire loc="88:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e411a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e388e80"/></to>
    </wire>
    <wire loc="90:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14e384e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14e3fc600"/></to>
    </wire>
    <wire loc="94:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff14e384060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7ff14e3fe370"/></to>
    </wire>
    <wire loc="95:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff14e37fde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff14e3f86a0"/></to>
    </wire>
    <wire loc="98:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7ff14e383490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff14e376860"/></to>
    </wire>
    <wire loc="85:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff14e376860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff14e36a020"/></to>
    </wire>
    <wire loc="101:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14e37e5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="102:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7ff14e37cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff14e36c8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e365750"/></to>
    </wire>
    <wire loc="86:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff14e36f3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff14e366dc0"/></to>
    </wire>
    <wire loc="90:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff14e337700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ff14ebc9580"/></to>
    </wire>
    <wire loc="91:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7ff14e335670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7ff14ebc4580"/></to>
    </wire>
    <wire loc="92:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff14e333670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ff14ebc2580"/></to>
    </wire>
    <wire loc="93:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7ff14e331670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7ff14ebbc580"/></to>
    </wire>
    <wire loc="94:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7ff14e32f670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7ff14ebbe580"/></to>
    </wire>
    <wire loc="14:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7ff14e33c5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ff14e1e5430"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff14d1dd440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e28e9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff14d1dda50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff14e1f1880"/></to>
    </wire>
    <wire loc="11:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff14e1f1880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ff14e1e5430"/></to>
    </wire>
    <wire loc="71:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff14d1e32b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff14e376860"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d1e4a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e28a130"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e28a130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e1f9060"/></to>
    </wire>
    <wire loc="65:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e289020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d1d6760"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14e28b8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14e1fbbf0"/></to>
    </wire>
    <wire loc="106:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14e1fbbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d16d850"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7ff14e291a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff14e2875c0"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e28c5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e1fce60"/></to>
    </wire>
    <wire loc="105:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14e1fce60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14d16e970"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e28e9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e275020"/></to>
    </wire>
    <wire loc="108:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e1f9060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d16cc30"/></to>
    </wire>
    <wire loc="57:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e1f9930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e289020"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e2744b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e1f9060"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7ff14e275690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff14e36f3b0"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff14e275e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff14e36c8a0"/></to>
    </wire>
    <wire loc="107:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff14e1fa400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff14d16c020"/></to>
    </wire>
    <wire loc="109:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d16b590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e1f9930"/></to>
    </wire>
    <wire loc="111:../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff14d16bd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff14d171750"/></to>
    </wire>
    <wire loc="75:../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ff14d168020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7ff14e1de250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff14e36a020"/></to>
    </wire>
    <wire loc="18:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff14e1dad40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ff14ebc9580"/></to>
    </wire>
    <wire loc="19:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff14e1d8cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ff14ebc2580"/></to>
    </wire>
    <wire loc="153:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e0c3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff14e0ceda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e0c7b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14e0c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff14e0bae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff14e0c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff14e0ad2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14e0af2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff14e0cc120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff14e0b5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14e0b02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff14e0c6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e0c4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff14e0bb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff14e0bde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e0c0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e0cf760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></to>
    </wire>
    <wire loc="138:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14e0caaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff14e0c9120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14e0b4a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff14e0c9870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14e0b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e0ccdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff14e0b6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14e0c4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e0c6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0ce750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14e0b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff14e0b9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14e0b6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff14e0aead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14e0afad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff14e0bc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff14e0b9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff14e0b2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff14e0be670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff14e0adad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14e0ce100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff14e0c7370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14e0c3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff14e0bbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e0c0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff14e0ba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e0c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff14e0cd450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14e0c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff14e0c8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff14e0c8cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff14e0b22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e0b3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14e0ca450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14e0b32f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff14e0ae2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14e0bce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff14e0b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff14e0cdaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e0cc770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff14e0bee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff14e0c8670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff14e0bd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff14e0b5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff14e0ac7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e097c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff14e0a1da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e09ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14e094670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff14e08de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff14e094e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff14e0802f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14e0832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff14e09f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff14e089670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14e0842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff14e099c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e098c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff14e08e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff14e091e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e093670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e0a3760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></to>
    </wire>
    <wire loc="138:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14e09eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff14e09d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14e087a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff14e09d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14e084ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e09fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff14e08ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14e098480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e099480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0a1750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14e08be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff14e08c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14e08a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff14e082ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14e083ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff14e090670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff14e08ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff14e085ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff14e092670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff14e080ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14e0a1100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff14e09a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14e097480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff14e08ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e093e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff14e08d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e095670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff14e0a0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14e095e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff14e09b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff14e09bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff14e0852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e086ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14e09e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14e0862f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff14e0822f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14e090e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff14e08b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff14e0a0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e09f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff14e092e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff14e09b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff14e091670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff14e089e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff14e07f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7ff14e058880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7ff14e04d020"/></to>
    </wire>
    <wire loc="20:../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7ff14e04d020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7ff14e047140"/></to>
    </wire>
    <wire loc="16:../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7ff14e043bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7ff14e04cc50"/></to>
    </wire>
    <wire loc="21:../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7ff14e04cc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7ff14e02f150"/></to>
    </wire>
    <wire loc="17:../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7ff14e046530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff14dfe5a20"/></to>
    </wire>
    <wire loc="18:../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7ff14e033540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7ff14e034590"/></to>
    </wire>
    <wire loc="11:../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7ff14e034590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff14dfe39e0"/></to>
    </wire>
    <wire loc="18:../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7ff14e029950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7ff14e031ca0"/></to>
    </wire>
    <wire loc="49:../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7ff14e031ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7ff14e007a90"/></to>
    </wire>
    <wire loc="19:../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7ff14e02f9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7ff14e033540"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14dff6020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff14dff1530"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff14dff1530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14dfede50"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14dfe9020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7ff14eea2060"/></to>
    </wire>
    <wire loc="9:../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14dfe2c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ff14ec14020"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff14dfc6990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff14dfbb900"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7ff14dfca150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7ff14dfba0f0"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7ff14dfbaae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7bc220"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ff14dfae500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7ff14e6b83e0"/></to>
    </wire>
    <wire loc="70:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff14dfa7820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff14e6b7690"/></to>
    </wire>
    <wire loc="71:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ff14dfa6b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7ff14e6b1370"/></to>
    </wire>
    <wire loc="74:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ff14dfaf880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7ff14e6745a0"/></to>
    </wire>
    <wire loc="77:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff14dfa4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14df09c30"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14df09c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14dfa4d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14df088f0"/></to>
    </wire>
    <wire loc="125:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14df088f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></to>
    </wire>
    <wire loc="79:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14dfa16d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ff14df062f0"/></to>
    </wire>
    <wire loc="129:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14df062f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff14dfa1de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7ff14df05cc0"/></to>
    </wire>
    <wire loc="133:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff14df05cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff14dfa0530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7ff14df04370"/></to>
    </wire>
    <wire loc="134:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff14df04370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14dfa0c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14df03d00"/></to>
    </wire>
    <wire loc="138:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14df03d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14dfa2e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ff14defdc60"/></to>
    </wire>
    <wire loc="151:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14defdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dfa3780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dee47a0"/></to>
    </wire>
    <wire loc="196:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dee47a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dfa2550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dee92f0"/></to>
    </wire>
    <wire loc="186:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dee92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14df9f3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14defe480"/></to>
    </wire>
    <wire loc="148:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14defe480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14df9d5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14defae50"/></to>
    </wire>
    <wire loc="155:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14defae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14df9c020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14def9670"/></to>
    </wire>
    <wire loc="156:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14def9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff14df9fe80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7ff14df007b0"/></to>
    </wire>
    <wire loc="142:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff14df007b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff14df9b9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7ff14dee7ad0"/></to>
    </wire>
    <wire loc="191:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff14dee7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14df9c890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ff14dee82f0"/></to>
    </wire>
    <wire loc="188:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14dee82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14df9b130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ff14dee8ad0"/></to>
    </wire>
    <wire loc="189:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14dee8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14df96d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14ded8df0"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14ded8df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14decf550"/></to>
    </wire>
    <wire loc="98:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14dfb6d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></to>
    </wire>
    <wire loc="99:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dfb5bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="100:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff14dfb4950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de4b550"/></to>
    </wire>
    <wire loc="101:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14dfa9be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14de43480"/></to>
    </wire>
    <wire loc="61:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14de43480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14de358b0"/></to>
    </wire>
    <wire loc="104:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14df996c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="153:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14defcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff14df05020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14deffc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff14def2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff14def9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff14dee52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff14deee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff14defec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff14def3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff14def6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff14def8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff14df02370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14deeca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff14df02ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14dee9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14df03060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff14deefe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14defd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff14df06940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14def0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff14def1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14deef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff14def5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff14def1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff14deeaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff14def7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dee5ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff14deff490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14defc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff14def3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff14def8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff14def2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff14defa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff14df05670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff14df00160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff14df00e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff14deea2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff14deebad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14df036b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14deeb2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff14dee72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14def5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff14def0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff14df049c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff14def7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff14def6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff14deeee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7ff14ded3020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7ff14dece7c0"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff14deb9150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff14decd020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff14e6b7690"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ff14decc380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7ff14e6b69c0"/></to>
    </wire>
    <wire loc="70:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ff14decb6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7ff14e6b5cf0"/></to>
    </wire>
    <wire loc="71:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff14decaa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff14e67be30"/></to>
    </wire>
    <wire loc="72:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff14dec96e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14dceed00"/></to>
    </wire>
    <wire loc="126:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14dceed00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dec7530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dccbad0"/></to>
    </wire>
    <wire loc="195:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dccbad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14dec6ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14dce86b0"/></to>
    </wire>
    <wire loc="137:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14dce86b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff14dec63a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7ff14dce7370"/></to>
    </wire>
    <wire loc="139:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff14dce7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14dec5330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></to>
    </wire>
    <wire loc="77:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dec41e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="78:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff14dec2d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de4b550"/></to>
    </wire>
    <wire loc="79:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff14dec4b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff14e879dc0"/></to>
    </wire>
    <wire loc="81:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14debd3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14dce0e50"/></to>
    </wire>
    <wire loc="155:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14dce0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14debdcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14dcdf670"/></to>
    </wire>
    <wire loc="156:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14dcdf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff14debeb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7ff14dce6160"/></to>
    </wire>
    <wire loc="141:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff14dce6160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff14debb6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7ff14dccb2f0"/></to>
    </wire>
    <wire loc="192:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff14dccb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14debc590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ff14dccd2f0"/></to>
    </wire>
    <wire loc="188:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff14dccd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14debce00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ff14dccdad0"/></to>
    </wire>
    <wire loc="189:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff14dccdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14deba020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14dccead0"/></to>
    </wire>
    <wire loc="187:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14dccead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14deba8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ff14dcec300"/></to>
    </wire>
    <wire loc="129:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff14dcec300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7ff14dead9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14ddd67c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14e742020"/></to>
    </wire>
    <wire loc="65:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7ff14de30820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff14dddf4e0"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ff14de32b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff14ddc9610"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7ff14ddc9610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff14dd112b0"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ff14ddce020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14dd1f150"/></to>
    </wire>
    <wire loc="57:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14ddcf130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dd9a020"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14dd9a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14d03c9d0"/></to>
    </wire>
    <wire loc="61:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7ff14dd19640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14dd6e2f0"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff14dd69850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14dd9a870"/></to>
    </wire>
    <wire loc="53:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff14dd9a870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d0355f0"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14dd0f690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14ddbab70"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14ddbab70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14ddb2610"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14d03c9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14d01f360"/></to>
    </wire>
    <wire loc="55:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff14d02fd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d03b260"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff14d03b260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff14d01fbf0"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff14d0329b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff14ddbab70"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d01cdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d025020"/></to>
    </wire>
    <wire loc="49:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d025020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d01a440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d024760"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d024760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d018760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d023a80"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d023a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ff14ddafb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff14e739020"/></to>
    </wire>
    <wire loc="74:../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7ff14dd659c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7ff14dd14a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14dd068c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14ddce020"/></to>
    </wire>
    <wire loc="153:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14dce1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff14dceb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14dce5c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff14dcd8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff14dcdfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff14dcea370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff14dcd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dcce2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff14dce3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff14dce2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff14dcd9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff14dcdbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff14dcde670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14dced970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></to>
    </wire>
    <wire loc="138:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14dce8d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14dcd2a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff14dce7ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14dce8060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff14dcd4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14dce2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14dce3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff14dcec950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14dcd5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff14dcd7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14dcd4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff14dcccad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff14dcda670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff14dcd7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff14dcd0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff14dcdc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff14dce5490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14dce1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff14dcd9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff14dcdee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff14dcd8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff14dce0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff14dceb670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff14dce6e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff14dcd02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff14dcd1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14dcd12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff14dccc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14dcdae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff14dcd5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff14dcebcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff14dcea9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff14dcdce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff14dce67b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff14dcdb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff14dcd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dcca7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7ff14dc9e920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7ff14dc9b940"/></to>
    </wire>
    <wire loc="54:../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff14dca4990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff14dc9b080"/></to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14dc7ae60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff14dc7e020"/></to>
    </wire>
    <wire loc="60:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff14dc79ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14dc7b690"/></to>
    </wire>
    <wire loc="74:../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff14dc7b690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14e48f280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff14dc788f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff14dca0a20"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dc77170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="57:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff14dc5f200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff14dc5b570"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc5a3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc5f950"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dc5aa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="94:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff14dc21d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff14dc2b6b0"/></to>
    </wire>
    <wire loc="95:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc20b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc2b020"/></to>
    </wire>
    <wire loc="100:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14dc1f2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></to>
    </wire>
    <wire loc="101:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dc1e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></to>
    </wire>
    <wire loc="102:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff14dc1eb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff14dbd0410"/></to>
    </wire>
    <wire loc="184:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7ff14dbf1db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7ff14dbc4800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14dbbf580"/></to>
    </wire>
    <wire loc="74:../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff14dbbf580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff14e48f280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14dbab1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e906020"/></to>
    </wire>
    <wire loc="59:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff14d851d70"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7ff14dabcb10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7ff14d84f650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7ff14dab82c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7ff14d91d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14dabd7c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7ff14cf4f9e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff14d84d020"/></to>
    </wire>
    <wire loc="67:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7ff14d91c740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7ff14cf50670"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7ff14daba2e0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7ff14daaf370"/></to>
    </wire>
    <wire loc="54:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7ff14dab4a70"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7ff14daad1d0"/></to>
    </wire>
    <wire loc="53:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff14dab82c0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7ff14daae320"/></to>
    </wire>
    <wire loc="51:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7ff14dabcb10"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7ff14dab2d00"/></to>
    </wire>
    <wire loc="50:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14dabd7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14d93b520"/></to>
    </wire>
    <wire loc="98:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff14d93b520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff14cf36020"/></to>
    </wire>
    <wire loc="57:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7ff14daadaf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d939b20"/></to>
    </wire>
    <wire loc="100:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d939b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14cf35560"/></to>
    </wire>
    <wire loc="58:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7ff14da9d8d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7ff14d9ca080"/></to>
    </wire>
    <wire loc="62:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7ff14da966d0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7ff14ebdb200"/></to>
    </wire>
    <wire loc="63:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7ff14da94640"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7ff14ebd9200"/></to>
    </wire>
    <wire loc="64:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7ff14da92540"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7ff14ebd7200"/></to>
    </wire>
    <wire loc="65:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7ff14da90540"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7ff14ebd5200"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7ff14da8e540"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7ff14ebd3200"/></to>
    </wire>
    <wire loc="67:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7ff14da8c540"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7ff14ebd1200"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7ff14da8a540"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7ff14ebcf200"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7ff14da88540"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7ff14ebcd200"/></to>
    </wire>
    <wire loc="74:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7ff14daaa780"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7ff14eea2060"/></to>
    </wire>
    <wire loc="75:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7ff14da9a020"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7ff14ee93b10"/></to>
    </wire>
    <wire loc="76:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7ff14da99560"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7ff14ee990c0"/></to>
    </wire>
    <wire loc="77:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7ff14da989e0"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7ff14ee8bcf0"/></to>
    </wire>
    <wire loc="78:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7ff14da97850"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7ff14ee8faa0"/></to>
    </wire>
    <wire loc="99:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d9393a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14cf36d80"/></to>
    </wire>
    <wire loc="101:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14cf35e50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d938570"/></to>
    </wire>
    <wire loc="103:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff14cf34640"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7ff14cf39020"/></to>
    </wire>
    <wire loc="68:../../..//tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ff14cf33170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7ff14d921d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7ff14d8b7ca0"/></to>
    </wire>
    <wire loc="65:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7ff14d8b3030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7ff14d91d1d0"/></to>
    </wire>
    <wire loc="66:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7ff14d8af020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7ff14d91c740"/></to>
    </wire>
    <wire loc="68:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff14d8b3d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff14d917240"/></to>
    </wire>
    <wire loc="69:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff14d8b29c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff14d917e00"/></to>
    </wire>
    <wire loc="70:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7ff14d914a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14d87e4e0"/></to>
    </wire>
    <wire loc="52:../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14d87e4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7ff14d909020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14d877020"/></to>
    </wire>
    <wire loc="52:../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14d877020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7ff14d9046c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff14d871b40"/></to>
    </wire>
    <wire loc="52:../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff14d871b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7ff14d9169a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7ff14d9ca080"/></to>
    </wire>
    <wire loc="52:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7ff14d8ad7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../..//tos/system/MainC.nc">
      <documentation loc="45:../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LowPowerC" loc="4:LowPowerC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="LowPowerAppC.AMSenderC" loc="47(LowPowerAppC.AMSenderC):../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerAppC.AMSenderC.SenderC" loc="47(LowPowerAppC.AMSenderC.SenderC):../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(LowPowerAppC.AMSenderC.SenderC.AMQueueEntryP):../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../..//tos/system/StateC.nc">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../..//tos/system/StateC.nc">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../..//tos/system/StateC.nc">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../..//tos/system/StateC.nc">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LowPowerAppC.Timer1" loc="44(LowPowerAppC.Timer1):../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerAppC.Timer2" loc="44(LowPowerAppC.Timer2):../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerAppC.AutoAdc" loc="43(LowPowerAppC.AutoAdc):../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../..//tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../..//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../..//tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../..//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerAppC.AutoAdc.Msp430Adc12ConfAlertC" loc="42(LowPowerAppC.AutoAdc.Msp430Adc12ConfAlertC):../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7ff14ee65890" loc="40:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7ff14ee65c30" loc="41:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7ff14ee63020" loc="42:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7ff14ee633a0" loc="43:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7ff14ee63720" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7ff14ee63a90" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7ff14ee63e20" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7ff14ee62200" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7ff14ee625d0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7ff14ee27e70" loc="40:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7ff14ee24270" loc="41:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7ff14eb929f0" loc="40:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7ff14eb92da0" loc="41:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7ff14eb911a0" loc="42:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7ff14eb91550" loc="43:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7ff14eb918c0" loc="44:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ff14e9f9020" loc="47:../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ff14e9dd140" loc="47:../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7ff14e9d6020" loc="43:../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7ff14e9b2020" loc="45:../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ff14e7789d0" loc="43:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ff14e7789d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ff14e734120" loc="42:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ff14e734120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ff14e71e270" loc="55:../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ff14e71e270"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ff14e71ea40" loc="56:../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ff14e71ea40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ff14e71ee30" loc="57:../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ff14e71ee30"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ff14e71d650" loc="58:../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ff14e71d650"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ff14e71da20" loc="59:../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7ff14e71c290" loc="60:../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7ff14e71c290"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ff14e6fc500" loc="52:../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ff14e6fc500"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ff14e6fccd0" loc="53:../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ff14e6fccd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ff14e6fa120" loc="54:../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ff14e6fa120"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ff14e6fa900" loc="55:../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ff14e6fa900"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ff14e6facd0" loc="56:../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7ff14e26f020" loc="89:../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7ff14e2620d0" loc="42:../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7ff14e247800" loc="52:../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14e005020" loc="52:../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14e005020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff14e0057b0" loc="52:../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e0057b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14dde1a50" loc="46:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14dde1a50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14dd96cc0" loc="46:../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14dd96cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14dd60230" loc="46:../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14dd60230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7ff14dd60560" loc="46:../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../..//tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7ff14d993850" loc="83:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../..//tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../..//tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7ff14d98b3d0" loc="42:../../..//tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../..//tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../..//tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ff14ef14a10" loc="58:../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ef14a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef14d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ff14ef15560" loc="57:../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff14ef15560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff14ef158e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14ef179d0" loc="42:../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ef179d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef17d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ff14ef0ea90" loc="6:../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7ff14ef0ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef0ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14ef12bb0" loc="4:../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ef12bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7ff14ef0e3b0" loc="5:../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ff14ef0e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef0e730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7ff14ef0c1b0" loc="7:../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7ff14ef0c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef0c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14ef11d80" loc="2:../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ef11d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef06180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7ff14eef0020" loc="39:../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ff14eef0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14eef03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ff14eee66c0" loc="40:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff14eee66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff14eeec660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff14eee6bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff14eee6d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff14eeec020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff14eee6a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff14eeec1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff14eeec340"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff14eeec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14eeed020" loc="39:../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14eeed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14eeed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ff14eed63d0" loc="46:../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff14eed63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff14eed5340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff14eed68e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff14eed6a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff14eed6c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff14eed6750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff14eed6d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff14eed5020"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff14eed51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7ff14eed5680" loc="47:../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff14eed5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ff14eed5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14eed7cb0" loc="45:../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14eed7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14eed60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7ff14ee925a0" loc="42:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7ff14ee925a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee92920"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee92ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee92c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee92dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee90020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee901b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee90340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee904d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee90660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7ff14ee7f020" loc="51:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7ff14ee7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee7f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee7f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee7f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee7f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee7f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee7fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee7fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee7e020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7ff14ee89700" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7ff14ee89700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee89a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee89c10"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee89da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee88020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee881b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7ff14ee6da20" loc="68:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7ff14ee6da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee6dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee6c020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee6c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee6c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee6c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7ff14ee8faa0" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7ff14ee8faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee8fe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee8e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee8e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee8e340"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7ff14ee73020" loc="61:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7ff14ee73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee733a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee73530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee736c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee73850"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee739e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7ff14ee6aa20" loc="71:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7ff14ee6aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee6ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee69020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee691b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee69340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee694d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7ff14ee7a5a0" loc="55:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7ff14ee7a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee7a920"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee7aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee7ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee7add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee79020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee791b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee79340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee794d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7ff14ee93b10" loc="40:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7ff14ee93b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee9a020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee9a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee9a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee9a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee9a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee9a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee9a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee9ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee9aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7ff14ee6fa20" loc="66:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7ff14ee6fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee6fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee6e020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee6e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee6e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee6e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7ff14ee753e0" loc="59:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7ff14ee753e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee75760"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee758f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee75a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee75c10"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee75da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7ff14ee7e5a0" loc="52:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7ff14ee7e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee7ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee7ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee7ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee7d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee7d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee7d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee7d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee7d660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee7d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7ff14ee88700" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7ff14ee88700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee88a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee88c10"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee88da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee82020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee821b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee82340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7ff14ee6ca20" loc="69:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7ff14ee6ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee6cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee6b020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee6b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee6b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee6b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7ff14ee7dbe0" loc="53:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7ff14ee7dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee7c020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee7c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee7c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee7c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee7c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee7c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee7c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee7cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee7cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7ff14ee8e890" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7ff14ee8e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee8ec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee8eda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee8a020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee8a1b0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7ff14eea2060" loc="39:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7ff14eea2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14eea23e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14eea2570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14eea2700"/>
        <function-ref name="get" scoped="" ref="0x7ff14eea2890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14eea2a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14eea2bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14eea2d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14eea1020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14eea11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14eea1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14eea14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7ff14ee73da0" loc="62:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7ff14ee73da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee72180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee72310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee724a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee72630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee727c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7ff14ee990c0" loc="41:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7ff14ee990c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee99440"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee995d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee99760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee998f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee99a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee99c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee99da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee92020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7ff14ee79a50" loc="56:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7ff14ee79a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee79dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee78020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee781b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee78340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee784d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee78660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee787f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee78980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee78b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7ff14ee836d0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7ff14ee836d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee83a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee83be0"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee83d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee89020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee891b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7ff14ee6ea20" loc="67:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7ff14ee6ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee6eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee6d020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee6d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee6d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee6d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee6d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7ff14ee8bcf0" loc="43:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7ff14ee8bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee8f0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee8f230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee8f3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee8f550"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee8f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7ff14ee741f0" loc="60:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7ff14ee741f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee74570"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee74700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee74890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee74a20"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee74bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7ff14ee6ba20" loc="70:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7ff14ee6ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee6bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee6a020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee6a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee6a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee6a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7ff14ee7b0c0" loc="54:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7ff14ee7b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee7b440"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee7b5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee7b760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee7b8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee7ba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee7bc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee7bda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee7a020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7ff14ee826c0" loc="50:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7ff14ee826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14ee82a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14ee82bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee82d60"/>
        <function-ref name="get" scoped="" ref="0x7ff14ee80020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee801b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee80340"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14ee804d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee80660"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ee807f0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14ee80980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14ee80b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7ff14ee72b80" loc="63:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7ff14ee72b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee71020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee711b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee71340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee714d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee71660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7ff14ee70a20" loc="65:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7ff14ee70a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee70da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ee6f020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ee6f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee6f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee6f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ee6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7ff14ee71a20" loc="64:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7ff14ee71a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee70020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee701b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee70340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee704d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7ff14ee76570" loc="58:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7ff14ee76570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ee768f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ee76a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ee76c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ee76da0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ee75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7ff14ee77020" loc="57:../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7ff14ee77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee773a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ee77530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee776c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ee77850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ee779e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee77b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ee77d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ee76020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ee761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ff14ee31aa0" loc="53:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff14ee31aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee31e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ff14ee31450" loc="52:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff14ee31450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee317d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ff14ee2f120" loc="54:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff14ee2f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee2f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ff14ee32d80" loc="51:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14ee32d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee31180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14ee33540" loc="50:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14ee33540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14ee338c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14ee33a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee33be0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ee33d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee32020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee321b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14ee32340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee324d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ee32660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14ee327f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14ee32980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ff14ee29940" loc="53:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff14ee29940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee29cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ff14ee292f0" loc="52:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff14ee292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee29670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ff14ee28020" loc="54:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff14ee28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ff14ee2abf0" loc="51:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14ee2abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ee29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14ee2b3e0" loc="50:../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14ee2b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14ee2b760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14ee2b8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ee2ba80"/>
        <function-ref name="get" scoped="" ref="0x7ff14ee2bc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ee2bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ee2a020"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14ee2a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ee2a340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ee2a4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14ee2a660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14ee2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14eddda90" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14eddda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14eddde10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14eddc020"/>
        <function-ref name="captured" scoped="" ref="0x7ff14eddc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14eddc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14eddc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14eddc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14ee259d0" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14ee259d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ee25d50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edde020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edde1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edde340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edde4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edde660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edde7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edde980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14eddeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edda020" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14eddede0" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14eddede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14eddd180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14eddd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14eddd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14eddd630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14eddd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14eddc930" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14eddc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14eddccb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14eddce40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14eddb020"/>
        <function-ref name="get" scoped="" ref="0x7ff14eddb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14eddb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14eddb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14eddb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14eddb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14eddb980"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14eddbb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14eddbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14edd4160" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14edd4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edd44e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14edd4670"/>
        <function-ref name="captured" scoped="" ref="0x7ff14edd4800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edd4990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edd4b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14edd4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14edd7020" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14edd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14edd73a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edd7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edd76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edd7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edd79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edd7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edd7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edd6020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14edd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edd27a0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edd27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edd2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14edd6480" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14edd6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edd6800"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14edd6990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14edd6b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14edd6cb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14edd6e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14edd3020" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14edd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14edd33a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14edd3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edd36c0"/>
        <function-ref name="get" scoped="" ref="0x7ff14edd3850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edd39e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edd3b70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14edd3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edd2020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14edd21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14edd2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14edd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14edcd7a0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14edcd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edcdb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14edcdcb0"/>
        <function-ref name="captured" scoped="" ref="0x7ff14edcde40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edcc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edcc1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14edcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14edcf6d0" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14edcf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14edcfa50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edcfbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edcfd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edce020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edce1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edce340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edce4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edce660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14edce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edcbc50" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edcbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14edceac0" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14edceac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edcee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14edcd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14edcd1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14edcd340"/>
        <function-ref name="fired" scoped="" ref="0x7ff14edcd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14edcc610" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14edcc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14edcc990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14edccb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edcccb0"/>
        <function-ref name="get" scoped="" ref="0x7ff14edcce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edcb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edcb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14edcb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edcb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14edcb660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14edcb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14edcb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14edc6cb0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14edc6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edc40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14edc4230"/>
        <function-ref name="captured" scoped="" ref="0x7ff14edc43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edc4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edc46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14edc4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14edc8b30" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14edc8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14edc7020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edc71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edc7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edc74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edc7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edc77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edc7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edc7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14edc7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edc22f0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edc2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14edc6020" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14edc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edc63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14edc6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14edc66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14edc6850"/>
        <function-ref name="fired" scoped="" ref="0x7ff14edc69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14edc4b40" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14edc4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14edc3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14edc31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edc3340"/>
        <function-ref name="get" scoped="" ref="0x7ff14edc34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edc3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edc37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14edc3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edc3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14edc3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14edc3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14edc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14edbd2f0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14edbd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edbd670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14edbd800"/>
        <function-ref name="captured" scoped="" ref="0x7ff14edbd990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edbdb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edbdcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14edbde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14edbf220" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14edbf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14edbf5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edbf730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edbf8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edbfa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edbfbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edbfd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edbe020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edbe1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14edbe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edbb7a0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edbb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edbbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14edbe610" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14edbe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edbe990"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14edbeb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14edbecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14edbee40"/>
        <function-ref name="fired" scoped="" ref="0x7ff14edbd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14edbc160" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14edbc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14edbc4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14edbc670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edbc800"/>
        <function-ref name="get" scoped="" ref="0x7ff14edbc990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edbcb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edbccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14edbce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edbb020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14edbb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14edbb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14edbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14edb67a0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14edb67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edb6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14edb6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7ff14edb6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edb4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edb41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14edb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14edb86d0" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14edb86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14edb8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edb8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edb8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edb7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edb71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edb7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edb74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edb7660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14edb77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edb3c50" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edb3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14edb7ac0" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14edb7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edb7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14edb6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14edb61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14edb6340"/>
        <function-ref name="fired" scoped="" ref="0x7ff14edb64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14edb4610" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14edb4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14edb4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14edb4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edb4cb0"/>
        <function-ref name="get" scoped="" ref="0x7ff14edb4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edb31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14edb3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edb34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14edb3660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14edb37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14edb3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14edaecb0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14edaecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edad0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14edad230"/>
        <function-ref name="captured" scoped="" ref="0x7ff14edad3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edad550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edad6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14edad870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14edb0b30" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14edb0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14edaf020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14edaf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edaf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14edaf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14edaf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edaf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14edaf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14edafb10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14edafca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14edab2f0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14edab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14edab670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14edae020" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14edae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14edae3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14edae530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14edae6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14edae850"/>
        <function-ref name="fired" scoped="" ref="0x7ff14edae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14edadb40" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14edadb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14edac020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14edac1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14edac340"/>
        <function-ref name="get" scoped="" ref="0x7ff14edac4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14edac660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14edac7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14edac980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14edacb10"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14edacca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14edace30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14edab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14eda62f0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14eda62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14eda6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14eda6800"/>
        <function-ref name="captured" scoped="" ref="0x7ff14eda6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14eda6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14eda6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14eda6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14eda8220" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14eda8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14eda85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14eda8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14eda88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14eda8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14eda8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14eda8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14eda7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14eda71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14eda7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14eda37a0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14eda37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14eda3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14eda7610" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14eda7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14eda7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14eda7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14eda7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14eda7e40"/>
        <function-ref name="fired" scoped="" ref="0x7ff14eda6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14eda5160" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14eda5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14eda54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14eda5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14eda5800"/>
        <function-ref name="get" scoped="" ref="0x7ff14eda5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14eda5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14eda5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14eda5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14eda3020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14eda31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14eda3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14eda34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14ed9e7a0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14ed9e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ed9eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ed9ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ed9ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ed9d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ed9d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ed9d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14eda06d0" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14eda06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14eda0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14eda0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14eda0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ed9f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ed9f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ed9f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ed9f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ed9f660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ed9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14ed9cc50" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14ed9cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ed9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14ed9fac0" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14ed9fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ed9fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ed9e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ed9e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ed9e340"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ed9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14ed9d610" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14ed9d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14ed9d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14ed9db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ed9dcb0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ed9de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ed9c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ed9c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14ed9c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ed9c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ed9c660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14ed9c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14ed9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14ed97cb0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14ed97cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ed960a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14ed96230"/>
        <function-ref name="captured" scoped="" ref="0x7ff14ed963c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ed96550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ed966e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14ed96870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff14ed99b30" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff14ed99b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14ed98020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14ed981b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ed98340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14ed984d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14ed98660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ed987f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14ed98980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14ed98b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14ed98ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff14ed932f0" loc="48:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff14ed932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ed93670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff14ed97020" loc="45:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff14ed97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14ed973a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14ed97530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14ed976c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14ed97850"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ed979e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff14ed96b40" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14ed96b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14ed94020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14ed941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14ed94340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ed944d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14ed94660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ed947f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14ed94980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ed94b10"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ed94ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14ed94e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14ed93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7ff14ed8d240" loc="7:../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7ff14ed8d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ed8d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7ff14ed91a90" loc="4:../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7ff14ed91a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ed91e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7ff14ed8e260" loc="5:../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7ff14ed8e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ed8e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7ff14ed8e9f0" loc="6:../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7ff14ed8e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14ed8ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7ff14f02a4c0" loc="55:../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff14f02a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ff14f02a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7ff14f33e3b0" loc="51:../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ff14f33e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ff14f33e730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ff14f33e8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7ff14f33ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7ff14f166bc0" loc="52:../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7ff14f166bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ff14f2a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7ff14eeeeb40" loc="39:../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff14eeeeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff14ed56b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff14ed561b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff14ed56340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff14ed564d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff14ed56020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff14ed56660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff14ed567f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff14ed56980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ff14ed4adc0" loc="60:../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ff14ed4adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ed49180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ff14ed57590" loc="57:../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff14ed57590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff14ed57910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ff14ed4a6c0" loc="59:../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7ff14ed4a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ed4aa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ff14ed57c00" loc="58:../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff14ed57c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ed4a020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff14ed4a1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff14ed4a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ff14f830410" loc="48:../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ff14f830410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14f830790"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14f830920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ff14f3a73a0" loc="47:../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff14f3a73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14f3a7720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff14f3a78b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff14f3a7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ff14ef50040" loc="56:../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ff14ef50040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14ef503c0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14ef50550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7ff14ef4c490" loc="57:../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ff14ef4c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ff14ef4c810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ff14ef4c9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7ff14ef4cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ff14ef52140" loc="55:../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff14ef52140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ef524c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff14ef52650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff14ef527e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiChannel" ref="0x7ff14ec903a0" loc="18:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7ff14ec903a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14ec90720"/>
        <function-ref name="configure" scoped="" ref="0x7ff14ec908b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff14ec90a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7ff14ecbe970" loc="13:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7ff14ecbe970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14ecbecf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14ecbee80"/>
        <function-ref name="start" scoped="" ref="0x7ff14ecc3030"/>
        <function-ref name="stop" scoped="" ref="0x7ff14ecc31c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ff14ed3bc40" loc="8:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff14ed3bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff14ed3a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ff14ecd55a0" loc="10:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14ecd55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14ecd5920"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14ecd5ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14ecd5c40"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14ecd5dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14ed2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff14ecb47a0" loc="14:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14ecb47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14ecb4b20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14ecb4cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14ecb4e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14ecc2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14ecc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getData" ref="0x7ff14ec7d380" loc="94:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="getData" scoped="" ref="0x7ff14ec7d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14ec7d700"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14ec7d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7ff14eccde20" loc="11:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7ff14eccde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14ecca390"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ece2970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14eccb720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14eccb2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14eccac90"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14ecca810"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14ece2df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14ed2da80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14eccbd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14ece2020"/>
        <function-ref name="stop" scoped="" ref="0x7ff14ece24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7ff14ec8e5d0" loc="19:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff14ec8e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff14ecb5240"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14ed30500" loc="7:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14ed30500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14ed30880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14ed30a10"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14ed30ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14ed30d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14ed3b020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ed3b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14ed3b340"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14ed3b980"/>
        <function-ref name="set" scoped="" ref="0x7ff14ed3b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14ed3b660"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14ed3b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7ff14ecc9340" loc="12:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7ff14ecc9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14ecc5870"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ecc8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14ecc6c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14ecc6780"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14ecc41e0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14ecc5cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14ecc6300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14ecc8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14ecc5260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14ecc84f0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14ecc89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff14ecb0880" loc="17:LowPowerC.nc">
      <component-ref qname="LowPowerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14ecb0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14ecb0c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14ecb0d90"/>
        <function-ref name="request" scoped="" ref="0x7ff14ecbd020"/>
        <function-ref name="granted" scoped="" ref="0x7ff14ecbd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14ecbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ff14ec6a8c0" loc="46:../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14ec6a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14ec6ac40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14ec6add0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14ec67020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14ec671b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14ec67340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec674d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14ec67660"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14ec67ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec677f0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14ec67980"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14ec67b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ff14ec5b910" loc="50:../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ff14ec5b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec5bc90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec5be20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec61020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec611b0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec61340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec614d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec61660"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec617f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14ec66c30" loc="46:../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ec66c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ec63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ff14ec61b10" loc="51:../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ff14ec61b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec5a020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec5a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec5a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec5a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec5a7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec5a980"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec5ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ff14ec632a0" loc="47:../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14ec632a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14ec63620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14ec637b0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14ec63940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14ec63ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14ec63c60"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec63df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14ec62020"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14ec62660"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec621b0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14ec62340"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14ec624d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ff14ec5ae30" loc="52:../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ff14ec5ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec591e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec59370"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec59500"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec59690"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec59820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec599b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec59b40"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec59cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7ff14ec3e360" loc="41:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ff14ec3e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec3e6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec3e870"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec3ea00"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec3eb90"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec3ed20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec3d020"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec3d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec3d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7ff14ec3d6a0" loc="42:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ff14ec3d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec3da20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec3dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec3dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec3c020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec3c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec3c340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec3c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec3c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7ff14ec3bc40" loc="44:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ec3bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ec3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7ff14ec3c9c0" loc="43:../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ff14ec3c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec3cd40"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec3b020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec3b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec3b340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec3b660"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec3b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec3b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff14ec24020" loc="53:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff14ec24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec24530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec246c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec24850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec249e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec24b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec24d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec23020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec23340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec23660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec23a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec23c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff14ec10020" loc="66:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff14ec10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec10530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec106c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec10850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec10b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec10d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec0f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec0f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec0f340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec0f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec0f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec0f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec0fa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec0fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7ff14ebc7560" loc="145:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7ff14ebc7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebc78e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebc7a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebc7c00"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebc7d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebc5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebc51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebc5340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebc54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebc5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebc57f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebc5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebc5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebc5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebc4020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebc41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7ff14eba2570" loc="165:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7ff14eba2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eba28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eba2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eba2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eba2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eba1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eba11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eba1340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eba14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eba1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eba17f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eba1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eba1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eba1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eba0020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eba01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7ff14ebc4580" loc="146:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7ff14ebc4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebc4900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebc4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebc4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebc4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebc3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebc31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebc3340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebc34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebc3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebc37f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebc3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebc3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebc3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebc2020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7ff14ec0c020" loc="71:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7ff14ec0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec0c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec0c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec0c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec0c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec0c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec0cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec0cd00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec0b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec0b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec0b340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec0b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec0b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec0b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec0ba80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec0bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7ff14ebf8200" loc="84:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7ff14ebf8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebf8580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebf8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebf88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebf8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebf8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebf8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebf7020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebf71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebf7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebf74d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebf7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebf77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebf7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebf7c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebf7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7ff14ebe3200" loc="97:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7ff14ebe3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebe3580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebe3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebe38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebe3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebe3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebe3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebe2020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebe21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebe2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebe24d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebe2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebe27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebe2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebe2c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebe2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7ff14ebd3200" loc="108:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7ff14ebd3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebd3580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebd3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebd38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebd3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebd3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebd3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebd2020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebd21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebd2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebd24d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebd2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebd27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebd2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebd2c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebd2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7ff14ebbe580" loc="149:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7ff14ebbe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebbe900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebbea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebbec20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebbedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebbd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebbd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebbd340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebbd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebbd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebbd7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebbd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebbdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebbdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebbc020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7ff14ebae570" loc="159:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7ff14ebae570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebae8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebaea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebaec10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebaeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebad340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebad7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebadb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebadca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebac020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7ff14eb9a580" loc="171:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7ff14eb9a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb9a900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb9aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb9ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb9adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb99020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb99340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb994d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb99660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb997f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb99980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb99b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb99ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb98020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff14ec1e020" loc="56:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff14ec1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec1e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec1e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec1e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec1e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec1e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec1eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec1ed00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec1d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec1d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec1d340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec1d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec1d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec1d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec1da80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec1dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7ff14ebbc580" loc="150:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7ff14ebbc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebbc900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebbca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebbcc20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebbcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebbb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebbb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebbb340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebbb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebbb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebbb7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebbb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebbbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebbbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebba020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff14ec1a020" loc="61:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff14ec1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec1a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec1a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec1a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec1a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec1a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec1ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec1ad00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec19020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec191b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec19340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec194d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec19660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec197f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec19a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec19c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7ff14ec06020" loc="74:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7ff14ec06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec06530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec066c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec06850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec069e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec06b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec06d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec05020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec05340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec05660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec05a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec05c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7ff14ebf1200" loc="87:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7ff14ebf1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebf1580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebf1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebf18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebf1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebf1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebf1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebf0020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebf01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebf0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebf04d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebf0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebf07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebf0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebf0c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebf0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7ff14ebdd200" loc="100:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7ff14ebdd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebdd580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebdd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebdd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebdda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebddbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebdc020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebdc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebdc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebdc4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebdc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebdc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebdc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebdcc10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebdcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7ff14ebcd200" loc="111:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7ff14ebcd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebcd580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebcd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebcd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebcda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebcdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebcdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebcc020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebcc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebcc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebcc4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebcc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebcc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebcc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebccc10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff14ec29020" loc="51:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff14ec29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec29530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec296c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec29850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec29b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec29d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec28020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec28340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec28660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec28a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec28c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff14ec14020" loc="64:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff14ec14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec144a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec14630"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec147c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec14950"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec14ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec14c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec14e00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec13020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec13340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec13660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec13a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec13c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7ff14ec00020" loc="77:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7ff14ec00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec00530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec006c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec00850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec009e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec00b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec00d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebff340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebffa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7ff14ebc9580" loc="144:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7ff14ebc9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebc9900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebc9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebc9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebc9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebc81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebc8340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebc84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebc8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebc87f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebc8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebc8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebc8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebc7020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7ff14eba8570" loc="162:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7ff14eba8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eba88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eba8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eba8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eba8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eba7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eba71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eba7340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eba74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eba7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eba77f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eba7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eba7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eba7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eba6020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eba61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7ff14eb9c570" loc="169:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7ff14eb9c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb9c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb9ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb9cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb9cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb9b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb9b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb9b340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb9b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb9b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb9b7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb9b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb9bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb9bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb9a020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7ff14ebb4580" loc="155:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7ff14ebb4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebb4900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebb4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebb4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebb4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebb3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebb31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebb3340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebb34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebb3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebb37f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebb3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebb3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebb3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebb2020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7ff14ebfc020" loc="82:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7ff14ebfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebfc5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebfc730"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebfc8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebfca50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebfcbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebfcd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebfb020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebfb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebfb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebfb4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebfb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebfb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebfb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebfbc10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebfbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7ff14ebe7200" loc="95:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7ff14ebe7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebe7580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebe7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebe78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebe7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebe7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebe7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebe6020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebe61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebe6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebe64d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebe6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebe67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebe6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebe6c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebe6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7ff14ebd7200" loc="106:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7ff14ebd7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebd7580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebd7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebd78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebd7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebd7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebd7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebd6020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebd61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebd6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebd64d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebd6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebd67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebd6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebd6c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebd6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7ff14eba6570" loc="163:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7ff14eba6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eba68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eba6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eba6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eba6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eba5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eba51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eba5340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eba54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eba5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eba57f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eba5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eba5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eba5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eba4020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eba41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7ff14ebba570" loc="152:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7ff14ebba570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebba8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebbaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebbac10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebbada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebb9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebb91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebb9340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebb94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebb9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebb97f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebb9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebb9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebb9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebb8020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff14ec22020" loc="54:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff14ec22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec22530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec226c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec22850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec229e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec22b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec22d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec21340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec21660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec21a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec21c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff14ec0e020" loc="67:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff14ec0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec0e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec0e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec0e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec0e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec0eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec0ed00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec0d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec0d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec0d340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec0d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec0d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec0d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec0da80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec0dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7ff14ebdb200" loc="104:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7ff14ebdb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebdb580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebdb710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebdb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebdba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebdbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebdbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebda020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebda1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebda340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebda4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebda660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebda7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebda980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebdac10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebdada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7ff14ec0a020" loc="72:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7ff14ec0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec0a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec0a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec0a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec0a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec0a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec0ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec0ad00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec09020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec091b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec09340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec094d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec09660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec097f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec09a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec09c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7ff14ebf5200" loc="85:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7ff14ebf5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebf5580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebf5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebf58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebf5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebf5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebf5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebf4020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebf41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebf4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebf44d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebf4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebf47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebf4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebf4c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebf4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7ff14ebe1200" loc="98:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7ff14ebe1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebe1580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebe1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebe18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebe1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebe1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebe1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebe0020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebe01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebe0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebe04d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebe0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebe07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebe0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebe0c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebe0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7ff14ebd1200" loc="109:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7ff14ebd1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebd1580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebd1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebd18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebd1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebd1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebd1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebd0020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebd01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebd0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebd04d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebd0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebd07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebd0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebd0c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebd0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7ff14ebb6580" loc="154:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7ff14ebb6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebb6900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebb6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebb6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebb6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebb5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebb51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebb5340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebb54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebb5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebb57f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebb5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebb5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebb5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebb4020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff14ec36020" loc="49:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff14ec36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec36530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec366c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec36850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec369e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec36b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec36d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec35020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec35340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec35660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec35a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec35c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff14ec18020" loc="62:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff14ec18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec18530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec186c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec18850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec189e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec18b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec18d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec17020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec17340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec17660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec17a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec17c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7ff14ec04020" loc="75:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7ff14ec04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec043a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec04530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec046c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec04850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec049e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec04b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec04d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec03020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec031b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec03340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec034d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec03660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec037f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec03a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec03c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7ff14ebef200" loc="88:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7ff14ebef200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebef580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebef710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebef8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebefa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebefbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebefd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebee020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebee1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebee340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebee4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebee660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebee7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebee980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebeec10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebeeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7ff14ebb2580" loc="156:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7ff14ebb2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebb2900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebb2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebb2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebb2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebb1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebb11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebb1340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebb14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebb1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebb17f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebb1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebb1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebb1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebb0020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebb01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7ff14ebac570" loc="160:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7ff14ebac570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebac8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebaca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebacc10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebacda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebab020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebab340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebab660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebab7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebab980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebabb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebabca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebaa020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebaa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7ff14eba0570" loc="166:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7ff14eba0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eba08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eba0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eba0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eba0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb9f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb9f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb9f340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb9f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb9f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb9f7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb9f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb9fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb9fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb9e020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7ff14ebeb200" loc="93:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7ff14ebeb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebeb580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebeb710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebeb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebeba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebebbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebebd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebea020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebea340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebea4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebea660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebea980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebeac10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebeada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7ff14ebb0580" loc="157:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7ff14ebb0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebb0900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebb0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebb0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebb0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebaf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebaf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebaf340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebaf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebaf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebaf7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebaf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebafb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebafca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebae020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff14ec27020" loc="52:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff14ec27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec27530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec276c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec27850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec27b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec27d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec26020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec26340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec26660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec26a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec26c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff14ec12020" loc="65:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff14ec12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec12530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec126c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec12850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec12b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec12d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec11020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec11340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec11660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec11a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec11c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7ff14ebfe020" loc="78:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7ff14ebfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebfe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebfe530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebfe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebfe850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebfe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebfeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebfed00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebfd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebfd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebfd340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebfd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebfd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebfd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebfda80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebfdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7ff14ebb8580" loc="153:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7ff14ebb8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebb8900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebb8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebb8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebb8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebb7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebb7340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebb74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebb7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebb77f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebb7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebb7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebb7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebb6020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7ff14eba4570" loc="164:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7ff14eba4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eba48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eba4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eba4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eba4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eba3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eba31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eba3340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eba34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eba3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eba37f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eba3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eba3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eba3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eba2020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eba21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7ff14ebfa200" loc="83:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7ff14ebfa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebfa580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebfa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebfa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebfaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebfabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebfad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebf9020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebf91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebf9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebf94d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebf9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebf97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebf9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebf9c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebf9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7ff14ebe5200" loc="96:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7ff14ebe5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebe5580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebe5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebe58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebe5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebe5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebe5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebe4020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebe41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebe4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebe44d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebe4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebe47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebe4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebe4c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebe4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7ff14ebd5200" loc="107:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7ff14ebd5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebd5580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebd5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebd58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebd5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebd5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebd5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebd4020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebd41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebd4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebd44d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebd4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebd47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebd4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebd4c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebd4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff14ec20020" loc="55:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff14ec20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec20530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec206c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec20850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec209e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec20b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec20d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec1f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec1f340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec1f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec1f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec1f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec1fa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7ff14ebd9200" loc="105:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7ff14ebd9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebd9580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebd9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebd98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebd9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebd9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebd9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebd8020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebd81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebd8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebd84d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebd8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebd87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebd8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebd8c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebd8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff14ec1c020" loc="60:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff14ec1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec1c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec1c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec1c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec1c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec1c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec1cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec1cd00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec1b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec1b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec1b340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec1b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec1b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec1b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec1ba80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec1bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7ff14ec08020" loc="73:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7ff14ec08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec08530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec086c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec08850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec089e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec08b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec08d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec07020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec07340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec07660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec07a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec07c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7ff14ebf3200" loc="86:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7ff14ebf3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebf3580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebf3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebf38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebf3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebf3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebf3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebf2020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebf21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebf2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebf24d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebf2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebf27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebf2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebf2c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebf2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7ff14ebdf200" loc="99:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7ff14ebdf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebdf580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebdf710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebdf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebdfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebdfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebdfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebde020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebde1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebde340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebde4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebde660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebde7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebde980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebdec10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebdeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7ff14ebcf200" loc="110:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7ff14ebcf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebcf580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebcf710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebcf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebcfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebcfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebcfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebce020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebce340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebce4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebce660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebce7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebce980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebcec10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff14ec2b020" loc="50:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff14ec2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec2b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec2b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec2b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec2b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec2b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec2bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec2bd00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec2a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec2a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec2a340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec2a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec2a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec2a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec2aa80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec2ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff14ec16020" loc="63:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff14ec16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec163a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec16530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec166c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec16850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec169e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec16b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec16d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec15020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec15340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec15660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec15a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec15c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7ff14ec02020" loc="76:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7ff14ec02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ec023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ec02530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ec026c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ec02850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ec029e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ec02b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ec02d00"/>
        <function-ref name="get" scoped="" ref="0x7ff14ec01020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ec011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ec01340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ec014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ec01660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ec017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ec01a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ec01c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7ff14ebed200" loc="89:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7ff14ebed200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebed580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebed710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebed8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebeda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebedbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebedd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebec020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebec4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebec660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebec7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebec980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebecc10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7ff14ebc0560" loc="148:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7ff14ebc0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebc08e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebc0a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebc0c00"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebc0d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebbf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebbf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebbf340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebbf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebbf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebbf7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebbf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebbfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebbfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebbe020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7ff14ebaa570" loc="161:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7ff14ebaa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebaa8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebaaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebaac10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebaada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eba9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eba91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eba9340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eba94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eba9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eba97f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eba9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eba9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eba9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eba8020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eba81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7ff14ebc2580" loc="147:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7ff14ebc2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebc2900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebc2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebc2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebc2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebc1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebc11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebc1340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebc14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebc1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebc17f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebc1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebc1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebc1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebc0020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7ff14ebe9200" loc="94:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7ff14ebe9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebe9580"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebe9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebe98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebe9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebe9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebe9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebe8020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebe81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebe8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebe84d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebe8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebe87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebe8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebe8c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebe8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7ff14eb9e570" loc="168:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7ff14eb9e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb9e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb9ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb9ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb9eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb9d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb9d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb9d340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb9d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb9d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb9d7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb9d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb9db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb9dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb9c020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7ff14eb98580" loc="172:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7ff14eb98580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb98900"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb98a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb98c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb98db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb96020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb96340"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb964d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb96660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb967f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb96980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb96b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb96ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb95020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7ff14ebcb1f0" loc="143:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7ff14ebcb1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ebcb970"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ebcbb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ebcbc90"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ebcbe20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ebca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ebca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ebca340"/>
        <function-ref name="get" scoped="" ref="0x7ff14ebca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ebca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ebca7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ebca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ebcab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ebcaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ebc9020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ebc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb6c6d0" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb6c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb6ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb6cbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb6cd70"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb6b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb6b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb6b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb6b4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb6b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb6b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb6b980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb6bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb6bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb6be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb6a120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb6a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb67100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb67100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb67480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb67610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb677a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb67930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb67ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb67c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb67de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb66020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb66340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb66660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb66a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb66c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb63d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb63d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb620e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb62270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb62400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb62590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb62720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb628b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb62a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb62bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb62d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb61020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb61340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb61760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb5e740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb5e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb5eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb5ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb5ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb5d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb5d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb5d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb5d4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb5d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb5d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb5d980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb5db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb5dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb5de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb5c120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb5c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb59100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb59100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb59480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb59610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb597a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb59930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb59ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb59c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb59de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb58020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb58340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb58660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb58a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb58c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb55d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb55d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb540e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb54270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb54400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb54590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb54720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb548b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb54a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb54bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb54d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb53020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb53340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb53760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb50740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb50740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb50ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb50c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb50de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb4e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb4e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb4e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb4e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb4e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb4e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb4e980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb4eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb4eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb4ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb4d120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb4d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb4a100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb4a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb4a480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb4a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb4a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb4a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb4aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb4ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb4ade0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb49020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb49340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb49660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb49a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb49c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb46d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb46d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb450e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb45270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb45400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb45590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb45720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb45a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb45bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb45d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb44020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb44340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb44760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb41740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb41740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb41ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb41c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb41de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb40020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb40340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb404d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb40660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb40980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb40b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb40ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb40e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb3f120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb3f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb3c100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb3c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb3c480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb3c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb3c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb3c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb3cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb3cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb3cde0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb3b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb3b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb3b340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb3b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb3b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb3b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb3ba80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb3bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb38d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb38d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb370e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb37270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb37400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb37590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb37720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb37a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb37bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb37d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb36020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb36340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb36760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb33860" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb33860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb33be0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb33d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb32020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb32340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb32660"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb327f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb32980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb32b10"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb32ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb32e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb31020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb312b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb31440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb2e270" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb2e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb2e5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb2e780"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb2e910"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb2eaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb2ec30"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb2edc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb2d020"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb2d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb2d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb2d4d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb2d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb2d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb2d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb2dc10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb2dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb2ad10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb2ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb280e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb28270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb28400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb28590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb28720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb288b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb28a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb28bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb28d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb27020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb271b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb27340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb274d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb27760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb278f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb24740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb24740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb24ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb24c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb24de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb23020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb23340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb234d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb23660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb23980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb23b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb23ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb23e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb22120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb1f100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb1f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb1f480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb1f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb1f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb1f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb1fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb1fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb1fde0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb1e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb1e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb1e340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb1e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb1e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb1e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb1ea80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb1ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb1bd10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb1bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb1a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb1a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb1a400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb1a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb1a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb1a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb1aa40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb1abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb1ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb19020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb19340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb19760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb16740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb16740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb16ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb16c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb16de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb15020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb151b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb15340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb154d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb15660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb157f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb15980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb15b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb15ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb15e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb14120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb11100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb11100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb11480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb11610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb117a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb11930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb11ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb11c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb11de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb10020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb10340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb10660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb10a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb10c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb0dd10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb0dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb0c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb0c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb0c400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb0c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb0c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb0c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb0ca40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb0cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb0cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb0b020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb0b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb0b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb0b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb0b760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb0b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb08740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb08740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb08ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb08c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb08de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb07340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb074d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb07660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb07980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb07b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb07ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb07e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb06120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eb02100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eb02100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eb02480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eb02610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eb027a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eb02930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eb02ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eb02c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eb02de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eb01020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eb011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eb01340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eb014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eb01660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eb017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eb01a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eb01c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eafed10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eafed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eafd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eafd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eafd400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eafd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eafd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eafd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eafda40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eafdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eafdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eafc020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eafc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eafc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eafc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eafc760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eafc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaf9a60" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaf9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaf9de0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaf8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaf81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaf8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaf84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaf8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaf87f0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaf8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaf8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaf8ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaf8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaf7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaf71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaf7440"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaf75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaf4460" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaf4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaf47e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaf4970"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaf4b00"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaf4c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaf4e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaf3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaf31b0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaf3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaf34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaf3660"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaf37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaf3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaf3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaf3da0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaf0e00" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaf0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaef1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaef350"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaef4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaef670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaef800"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaefb20"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaefcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaefe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaee020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaee760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaeb740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaeb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaebac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaebc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaebde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaea4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaea660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaea980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaeab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaeaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaeae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eae9120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eae92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eae6100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eae6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eae6480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eae6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eae67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eae6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eae6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eae6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eae6de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eae5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eae51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eae5340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eae54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eae5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eae57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eae5a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eae5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eae2d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eae2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eae00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eae0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eae0400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eae0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eae0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eae08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eae0a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eae0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eae0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eadf020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eadf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eadf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eadf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eadf760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eadf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eadc740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eadc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eadcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eadcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eadcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eadb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eadb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eadb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eadb4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eadb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eadb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eadb980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eadbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eadbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eadbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eada120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eada2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ead7100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ead7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ead7480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ead7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ead77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ead7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ead7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ead7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ead7de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ead6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ead61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ead6340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ead64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ead6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ead67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ead6a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ead6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ead3d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ead3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ead20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ead2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ead2400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ead2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ead2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ead28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ead2a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14ead2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ead2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ead1020"/>
        <function-ref name="set" scoped="" ref="0x7ff14ead11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ead1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ead14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ead1760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ead18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eace740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eace740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaceac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eacec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eacede0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eacd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eacd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eacd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eacd4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eacd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eacd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eacd980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eacdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eacdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eacde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eacc120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eacc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eac9100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eac9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eac9480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eac9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eac97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eac9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eac9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eac9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eac9de0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eac8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eac81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eac8340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eac84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eac8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eac87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eac8a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eac8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eac5d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eac5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eac40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eac4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eac4400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eac4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eac4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eac48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eac4a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eac4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eac4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eac3020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eac31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eac3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eac34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eac3760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eac38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eac0740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eac0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eac0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eac0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eac0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eabf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eabf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eabf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eabf4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eabf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eabf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eabf980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eabfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eabfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eabfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eabe120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eabe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eabb100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eabb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eabb480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eabb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eabb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eabb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eabbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eabbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eabbde0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eab9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eab91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eab9340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eab94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eab9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eab97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eab9a80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eab9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eab6d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eab6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eab50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eab5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eab5400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eab5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eab5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eab58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eab5a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eab5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eab5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eab4020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eab41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eab4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eab44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eab4760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eab48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eab1740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eab1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eab1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eab1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eab1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eab0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eab01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eab0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eab04d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eab0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eab07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eab0980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eab0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eab0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eab0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaaf120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaaf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaac100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaac480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaac610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaac7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaac930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaacac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaacc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaacde0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaab340"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaaba80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaa8d10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaa8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaa70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaa7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaa7400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaa7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaa7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaa78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaa7a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaa7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaa7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaa6020"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaa61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaa6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaa64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaa6760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaa68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14eaa3740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14eaa3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14eaa3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14eaa3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14eaa3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14eaa2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14eaa21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14eaa2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14eaa24d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14eaa2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14eaa27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14eaa2980"/>
        <function-ref name="set" scoped="" ref="0x7ff14eaa2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14eaa2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14eaa2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14eaa1120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14eaa12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ea9e100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ea9e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea9e480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea9e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea9e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea9e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea9eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea9ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea9ede0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea9d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea9d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea9d340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea9d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea9d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea9d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea9da80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea9dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ea9ad10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ea9ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea990e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea99270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea99400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea99590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea99720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea998b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea99a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea99bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea99d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea98020"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea98340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea98760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ea94740" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ea94740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea94ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea94c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea94de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea93020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea931b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea93340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea934d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea93660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea937f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea93980"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea93b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea93ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea93e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea92120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ea8f100" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ea8f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea8f480"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea8f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea8f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea8f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea8fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea8fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea8fde0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea8e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea8e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea8e340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea8e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea8e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea8e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea8ea80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea8ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff14ea8bd10" loc="47:../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff14ea8bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea8a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea8a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea8a400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea8a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea8a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea8a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea8aa40"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea8abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea8ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea89020"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea891b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea89340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea894d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea89760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea898f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14ea122f0" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14ea122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea12670"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea12800"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea12990"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea12b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea12cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea12e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea11020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea11340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea114d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea11660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea11980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea11c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea11da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14ea23020" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14ea23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea23530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea236c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea23850"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea239e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea23b70"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea23d00"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14ea0ede0" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14ea0ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea0d180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea0d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea0d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea0d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea0d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea0d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea0dae0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea0dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea0de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea0c020"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea0c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea0c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea0c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea0c760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea0c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14ea0fb90" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14ea0fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea0e020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea0e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea0e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea0e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea0e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea0e7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea0e980"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea0eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14ea09930" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14ea09930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea09cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea09e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14ea07020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea07340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14ea074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea07660"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14ea07980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14ea07b10"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea07ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14ea07e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14ea06020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14ea062b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea06440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14ea0a710" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14ea0a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14ea0aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14ea0ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14ea0adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14ea09020"/>
        <function-ref name="get" scoped="" ref="0x7ff14ea091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14ea09340"/>
        <function-ref name="set" scoped="" ref="0x7ff14ea094d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14ea09660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff14daed020" loc="49:../../..//tos/system/AMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14daed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14daed3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14daed530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14daed6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14daed850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14daed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff14daedc30" loc="50:../../..//tos/system/AMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14daedc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14daec020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14daec1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14daec340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14daec4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14daec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff14daec8b0" loc="51:../../..//tos/system/AMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14daec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14daecc30"/>
        <function-ref name="source" scoped="" ref="0x7ff14daecdc0"/>
        <function-ref name="address" scoped="" ref="0x7ff14daeb020"/>
        <function-ref name="destination" scoped="" ref="0x7ff14daeb1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14daeb340"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14daeb4d0"/>
        <function-ref name="type" scoped="" ref="0x7ff14daeb660"/>
        <function-ref name="setType" scoped="" ref="0x7ff14daeb7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14daeb980"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14daebb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14daebca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff14daea020" loc="52:../../..//tos/system/AMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff14daea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14daea3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14daea530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14daea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff14d37e420" loc="49:../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14d37e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14d37e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14d37e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14d37eac0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14d37ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14d37ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff14d37d060" loc="50:../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14d37d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14d37d3e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14d37d570"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14d37d700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14d37d890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14d37da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff14d37dc70" loc="51:../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14d37dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14d37c020"/>
        <function-ref name="source" scoped="" ref="0x7ff14d37c1b0"/>
        <function-ref name="address" scoped="" ref="0x7ff14d37c340"/>
        <function-ref name="destination" scoped="" ref="0x7ff14d37c4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14d37c660"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14d37c7f0"/>
        <function-ref name="type" scoped="" ref="0x7ff14d37c980"/>
        <function-ref name="setType" scoped="" ref="0x7ff14d37cb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14d37cca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14d37ce30"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14d37b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff14d37b2b0" loc="52:../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff14d37b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14d37b630"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14d37b7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14d37b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff14d371390" loc="44:../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14d371390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14d371710"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14d3718a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14d371a30"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14d371bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14d371d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ff14d370060" loc="46:../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14d370060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14d3703e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14d370570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14d370700"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14d370890"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14d370a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ff14d370c70" loc="47:../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="LowPowerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14d370c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14d36f020"/>
        <function-ref name="source" scoped="" ref="0x7ff14d36f1b0"/>
        <function-ref name="address" scoped="" ref="0x7ff14d36f340"/>
        <function-ref name="destination" scoped="" ref="0x7ff14d36f4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14d36f660"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14d36f7f0"/>
        <function-ref name="type" scoped="" ref="0x7ff14d36f980"/>
        <function-ref name="setType" scoped="" ref="0x7ff14d36fb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14d36fca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14d36fe30"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14d36e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14e9bac20" loc="43:../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14e9bac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e9b7020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e9b71b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e9b7340"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e9b74d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e9b7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ff14e96d400" loc="48:../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14e96d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e96d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e96d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e96dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e96dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e96dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14e96e580" loc="46:../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14e96e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e96e920"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e96eab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e96ec40"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e96edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e96d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff14e96a720" loc="50:../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14e96a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e96aaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14e96ac30"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e96adc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e969020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14e9691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7ff14e969480" loc="169:../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7ff14e969480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e969800"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e969990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7ff14e969c60" loc="126:../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7ff14e969c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e968020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e9681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ff14e96b060" loc="49:../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14e96b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14e96b3e0"/>
        <function-ref name="source" scoped="" ref="0x7ff14e96b570"/>
        <function-ref name="address" scoped="" ref="0x7ff14e96b700"/>
        <function-ref name="destination" scoped="" ref="0x7ff14e96b890"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14e96ba20"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14e96bbb0"/>
        <function-ref name="type" scoped="" ref="0x7ff14e96bd40"/>
        <function-ref name="setType" scoped="" ref="0x7ff14e96a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14e96a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14e96a340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14e96a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff14e964140" loc="61:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff14e964140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14e9644c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14e964650"/>
        <function-ref name="start" scoped="" ref="0x7ff14e9647e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e964970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff14e9631d0" loc="63:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14e9631d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e963550"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e9636e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e963870"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e963a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e963b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff14e961c10" loc="65:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff14e961c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e960020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff14e9602b0" loc="67:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14e9602b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e960630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14e9607c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e960950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e960ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14e960c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff14e94f9e0" loc="70:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14e94f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14e951020"/>
        <function-ref name="clear" scoped="" ref="0x7ff14e951750"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14e958890"/>
        <function-ref name="set" scoped="" ref="0x7ff14e951e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff14e9438a0" loc="72:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e9438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff14e943c20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff14e943db0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff14e949020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff14e9491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14e961030" loc="64:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14e961030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e9613b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff14e95a800" loc="69:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e95a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14e95ab80"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14e95ad10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14e959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff14e95b020" loc="68:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14e95b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14e95b3a0"/>
        <function-ref name="source" scoped="" ref="0x7ff14e95b530"/>
        <function-ref name="address" scoped="" ref="0x7ff14e95b6c0"/>
        <function-ref name="destination" scoped="" ref="0x7ff14e95b850"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14e95b9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14e95bb70"/>
        <function-ref name="type" scoped="" ref="0x7ff14e95bd00"/>
        <function-ref name="setType" scoped="" ref="0x7ff14e95a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14e95a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14e95a340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14e95a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff14e94eaf0" loc="71:../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14e94eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14e94b0d0"/>
        <function-ref name="clear" scoped="" ref="0x7ff14e94b800"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14e94d970"/>
        <function-ref name="set" scoped="" ref="0x7ff14e94a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff14e937680" loc="55:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff14e937680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14e937a00"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14e937b90"/>
        <function-ref name="start" scoped="" ref="0x7ff14e937d20"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e936020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff14e91dd40" loc="64:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e91dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14e9250e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14e925270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14e925400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14e925590"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14e925720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14e9258b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ff14e910d20" loc="67:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ff14e910d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ff14e91a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff14e931760" loc="60:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14e931760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e931ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14e931c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e931e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e930020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14e9301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff14e9367f0" loc="56:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14e9367f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e936b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e936d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e934020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e9341b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e934340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff14e933880" loc="58:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff14e933880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e933c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff14e928970" loc="61:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e928970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14e928cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14e928e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14e92f030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14e92f1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14e92f350"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14e92f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff14e925bb0" loc="65:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e925bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff14e923020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff14e9231b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff14e923340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff14e9234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14e934b20" loc="57:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14e934b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e933020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff14e92f810" loc="62:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e92f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14e92fb90"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14e92fd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14e92e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff14e91b020" loc="66:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff14e91b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff14e91b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff14e91b530"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff14e91b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff14e91b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff14e91b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff14e932020" loc="59:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14e932020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14e9323a0"/>
        <function-ref name="source" scoped="" ref="0x7ff14e932530"/>
        <function-ref name="address" scoped="" ref="0x7ff14e9326c0"/>
        <function-ref name="destination" scoped="" ref="0x7ff14e932850"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14e9329e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14e932b70"/>
        <function-ref name="type" scoped="" ref="0x7ff14e932d00"/>
        <function-ref name="setType" scoped="" ref="0x7ff14e931020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14e9311b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14e931340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14e9314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff14e924a80" loc="63:../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14e924a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff14e924e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff14e90fb70" loc="43:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff14e90fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14e90c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14e90c1b0"/>
        <function-ref name="start" scoped="" ref="0x7ff14e90c340"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e90c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff14e9069d0" loc="55:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14e9069d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff14e906d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff14e905b70" loc="57:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff14e905b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff14e904020"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff14e9041b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff14e904340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff14e9044d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff14e904660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff14e907140" loc="53:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e907140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14e9074c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14e907650"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14e9077e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14e907970"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14e907b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14e907c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff14e909d10" loc="50:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff14e909d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e9080e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e908270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e908400"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e908590"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e908720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff14e905080" loc="56:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14e905080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff14e905400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff14e905590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff14e905720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff14e9058b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ff14e90a820" loc="47:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ff14e90a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e90aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff14e906020" loc="54:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14e906020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14e9063a0"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14e906530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14e9066c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e90cd00" loc="45:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e90cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e90b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e90b230"/>
        <function-ref name="request" scoped="" ref="0x7ff14e90b3c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e90b550"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e90b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ff14e90ba00" loc="46:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ff14e90ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e90bd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e90a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e90a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e90a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e90a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff14e909020" loc="48:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff14e909020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e9093a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14e909530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e9096c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e909850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14e9099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff14e908a90" loc="51:../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14e908a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e908e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff14e901390" loc="44:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff14e901390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14e901710"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14e9018a0"/>
        <function-ref name="start" scoped="" ref="0x7ff14e901a30"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e901bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff14e8fe330" loc="47:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e8fe330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14e8fe6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14e8fe840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14e8fe9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14e8feb60"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14e8fecf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14e8fee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14e901e80" loc="45:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14e901e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e900220"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e9003b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e900540"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e9006d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e900860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14e900b40" loc="46:../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14e900b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14e8fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff14e8fde70" loc="39:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff14e8fde70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14e8fa220"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14e8fa3b0"/>
        <function-ref name="start" scoped="" ref="0x7ff14e8fa540"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e8fa6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff14e8f97e0" loc="41:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14e8f97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14e8f9b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14e8f9cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14e8f9e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14e8f8030"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14e8f81c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14e8f8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ff14e8ee060" loc="47:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ff14e8ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14e8ee3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14e8ee570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14e8ee700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14e8ee890"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14e8eea20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14e8eebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff14e8e3330" loc="50:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14e8e3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14e8e36b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14e8e3840"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14e8e39d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14e8e3b60"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14e8e3cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14e8e3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7ff14e8e52a0" loc="46:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff14e8e52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e8e5620"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e8e57b0"/>
        <function-ref name="modify" scoped="" ref="0x7ff14e8e5940"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e8e5ad0"/>
        <function-ref name="resend" scoped="" ref="0x7ff14e8e5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14e8fa990" loc="40:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14e8fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e8fad10"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e8f9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14e8f91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14e8f9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e8f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ff14e8e2420" loc="48:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff14e8e2420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff14e8e27a0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff14e8e2930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ff14e8ed760" loc="45:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ff14e8ed760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14e8edae0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e8edc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14e8db920" loc="51:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14e8db920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14e8dbca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14e8dbe30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14e8e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7ff14e8f0b50" loc="44:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e8f0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff14e8f6020"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff14e8f61b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff14e8f6340"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff14e8f64d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff14e8f6660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff14e8f67f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff14e8f6980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff14e8f6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14e8e2bf0" loc="49:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14e8e2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14e8e4020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14e8e41b0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14e8e4340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14e8e44d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14e8e4660"/>
        <function-ref name="get" scoped="" ref="0x7ff14e8e47f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14e8e4980"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14e8e3020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e8e4b10"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14e8e4ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14e8e4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff14e8f8640" loc="43:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e8f8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e8f89c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e8f8b50"/>
        <function-ref name="request" scoped="" ref="0x7ff14e8f8ce0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e8f8e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e8f7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7ff14e8df110" loc="52:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7ff14e8df110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14e8df590"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14e8df720"/>
        <function-ref name="isState" scoped="" ref="0x7ff14e8df8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14e8dfa40"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14e8dfbd0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14e8dfd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7ff14e8d1b70" loc="76:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7ff14e8d1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e8d0020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e8d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7ff14e8d2ba0" loc="75:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7ff14e8d2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e8d1020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e8d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7ff14e8d4c20" loc="74:../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7ff14e8d4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e8d2020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e8d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ff14e879dc0" loc="45:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff14e879dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff14e885180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff14e885310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff14e8854a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff14e885630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff14e8857c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff14e885950"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff14e885ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff14e885c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff14e885e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff14e884020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff14e8841b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff14e884340"/>
        <function-ref name="sync" scoped="" ref="0x7ff14e8844d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff14e884760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff14e8848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ff14e8750c0" loc="47:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ff14e8750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e875cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e874170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ff14e884bf0" loc="46:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e884bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff14e877020"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff14e8771b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff14e877340"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff14e8774d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff14e877660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff14e8777f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff14e877980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff14e877b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e88a950" loc="44:../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e88a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e88acd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e88ae60"/>
        <function-ref name="request" scoped="" ref="0x7ff14e886020"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e8861b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e886340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ff14e86e970" loc="46:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff14e86e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff14e86ecf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff14e86ee80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff14e86d030"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff14e86d1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff14e86d350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff14e86d4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff14e86d670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff14e86d800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff14e86d990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff14e86db20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff14e86dcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff14e86de40"/>
        <function-ref name="sync" scoped="" ref="0x7ff14e86c020"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff14e86c2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff14e86c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7ff14e8478e0" loc="66:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e8478e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e847c60"/>
        <function-ref name="write" scoped="" ref="0x7ff14e847df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7ff14e868020" loc="50:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e868020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff14e8683a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7ff14e860d90" loc="52:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7ff14e860d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14e85e670"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e85f5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14e85e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14e85fa90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14e85eb30"/>
        <function-ref name="start" scoped="" ref="0x7ff14e867bc0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e85f110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7ff14e84a5f0" loc="64:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e84a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e84a970"/>
        <function-ref name="write" scoped="" ref="0x7ff14e84ab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7ff14e85c380" loc="54:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ff14e85c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e85c700"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e85c890"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e85ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e85cbb0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e85cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e85b020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e85b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e85b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ff14e86bb40" loc="48:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ff14e86bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e86a750"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e86abd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7ff14e835820" loc="126:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7ff14e835820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e835ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e835d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7ff14e8461c0" loc="67:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff14e8461c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e846540"/>
        <function-ref name="write" scoped="" ref="0x7ff14e8466d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ff14e846a70" loc="68:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e846a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e846df0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e845020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7ff14e84f3d0" loc="62:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e84f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e84f750"/>
        <function-ref name="write" scoped="" ref="0x7ff14e84f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ff14e850810" loc="57:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14e850810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff14e850b90"/>
        <function-ref name="changed" scoped="" ref="0x7ff14e850d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff14e857020"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff14e8571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff14e85d060" loc="53:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff14e85d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e85d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e85d570"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e85d700"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e85d890"/>
        <function-ref name="get" scoped="" ref="0x7ff14e85da20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e85dbb0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e85dd40"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e85c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7ff14e843120" loc="71:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e843120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e8436a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7ff14e85b6a0" loc="55:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ff14e85b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e85ba20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e85bbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e85bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e85a020"/>
        <function-ref name="get" scoped="" ref="0x7ff14e85a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e85a340"/>
        <function-ref name="set" scoped="" ref="0x7ff14e85a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e85a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14e870510" loc="44:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14e870510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14e870890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ff14e847020" loc="65:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e847020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e8473a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e847530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7ff14e843a40" loc="72:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e843a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e843dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff14e8411d0" loc="74:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff14e8411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e841550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e8416e0"/>
        <function-ref name="request" scoped="" ref="0x7ff14e841870"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e841a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e841b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7ff14e840d90" loc="76:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7ff14e840d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e83f180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e83f310"/>
        <function-ref name="request" scoped="" ref="0x7ff14e83f4a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e83f630"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e83f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ff14e86c740" loc="47:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff14e86c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff14e86cac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff14e86cc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff14e86cde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff14e86b020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff14e86b1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff14e86b340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff14e86b4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff14e86b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7ff14e84fc80" loc="63:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e84fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e84a0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e84a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7ff14e848b00" loc="61:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e848b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e848e80"/>
        <function-ref name="write" scoped="" ref="0x7ff14e84f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7ff14e8422b0" loc="69:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff14e8422b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e842630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14e83fa80" loc="78:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14e83fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14e83fe00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14e83e020"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14e83e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14e83e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14e83e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e83e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14e83e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14e83ee30"/>
        <function-ref name="set" scoped="" ref="0x7ff14e83e980"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14e83eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14e83eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7ff14e836940" loc="125:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7ff14e836940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e836cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e836e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e870b80" loc="45:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e870b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e86e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e86e1b0"/>
        <function-ref name="request" scoped="" ref="0x7ff14e86e340"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e86e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e86e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7ff14e854520" loc="60:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff14e854520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e8548a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e854a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7ff14e84ca90" loc="59:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e84ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e854020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e8541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7ff14e8580e0" loc="56:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ff14e8580e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e858460"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e8585f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff14e858780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff14e858910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7ff14e840020" loc="75:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7ff14e840020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e8403a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e840530"/>
        <function-ref name="request" scoped="" ref="0x7ff14e8406c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e840850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e8409e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7ff14e8429c0" loc="70:../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e8429c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e842d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14e7bf7e0" loc="45:../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14e7bf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14e7bfb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ff14e7bc220" loc="46:../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7bc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14e7b9b30"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e7bba60"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14e7b94e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14e7b9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14e7b8020"/>
        <function-ref name="start" scoped="" ref="0x7ff14e7bb090"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e7bb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14e7b7d40" loc="42:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14e7b7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14e7b60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ff14e7b65f0" loc="43:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff14e7b65f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14e6bce50"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6bde00"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14e6bc800"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14e6bc340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14e6bb340"/>
        <function-ref name="start" scoped="" ref="0x7ff14e6bd430"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e6bd940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d30a8b0" loc="44:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d30a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d3060d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d3080d0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d308a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d308590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d306590"/>
        <function-ref name="start" scoped="" ref="0x7ff14d3096e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d309bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14d30a060" loc="43:../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14d30a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14d30a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d303870" loc="44:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d303870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d2ff090"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d300090"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d300a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d300550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d2ff550"/>
        <function-ref name="start" scoped="" ref="0x7ff14d3016a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d301bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14d303020" loc="43:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14d303020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14d3033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff14d2e9020" loc="41:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d2e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14d2e93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14d2e9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14d2e96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14d2e9850"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d2e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff14d2ec570" loc="39:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d2ec570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14d2ec8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14d2eca80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d2ecc10"/>
        <function-ref name="get" scoped="" ref="0x7ff14d2ecda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d2eb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14d2eb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14d2eb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14d2eb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14d2eb660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14d2eb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14d2eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff14d2ebc10" loc="40:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d2ebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14d2ea020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14d2ea1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d2ea340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14d2ea4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14d2ea660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d2ea7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14d2ea980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14d2eab10"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14d2eaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff14e794ba0" loc="52:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14e794ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14e792020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14e7921b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14e792340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14e7924d0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e792660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff14e7974d0" loc="50:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7974d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e797850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14e7979e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14e797b70"/>
        <function-ref name="get" scoped="" ref="0x7ff14e797d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14e796020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e7961b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14e796340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e7964d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e796660"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14e7967f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14e796980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff14e795280" loc="51:../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e795280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14e795600"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14e795790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14e795920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14e795ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14e795c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14e795dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14e794020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14e7941b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14e794340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff14d2e0da0" loc="49:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d2e0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14d2df180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14d2df310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14d2df4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14d2df630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d2df7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff14d2e24c0" loc="47:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d2e24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14d2e2840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14d2e29d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d2e2b60"/>
        <function-ref name="get" scoped="" ref="0x7ff14d2e2cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d2e2e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14d2e1030"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14d2e11c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14d2e1350"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14d2e14e0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14d2e1670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14d2e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d2e6340" loc="46:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d2e6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d2e4ba0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d2e5b80"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d2e4550"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d2e4090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d2e2090"/>
        <function-ref name="start" scoped="" ref="0x7ff14d2e51b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d2e56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14d2e7a30" loc="45:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14d2e7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14d2e7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff14d2e1a90" loc="48:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d2e1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14d2e1e10"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14d2e0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d2e01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14d2e0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14d2e04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d2e0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14d2e07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14d2e0980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14d2e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff14e742020" loc="43:../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14e742020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14e742e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e741800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e741340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e741cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7ff14e739020" loc="43:../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff14e739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14e739e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e738800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e738340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e738cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff14e7262c0" loc="45:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14e7262c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e726640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14e7267d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14e726960"/>
        <function-ref name="get" scoped="" ref="0x7ff14e726af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14e726c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e726e10"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14e725020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e7251b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e725340"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14e7254d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14e725660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff14e7350a0" loc="44:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14e7350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14e727020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e7279a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e7274e0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e727e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ff14e701020" loc="63:../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ff14e701020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14e701e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e700800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e700340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e700cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff14e705ad0" loc="62:../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14e705ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14e704970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e703340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e704e30"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14e703800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d2fda90" loc="61:../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d2fda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d2f92e0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d2fa2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d2fac60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d2fa7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d2f97a0"/>
        <function-ref name="start" scoped="" ref="0x7ff14d2fc8d0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d2fcde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff14d2f6210" loc="73:../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff14d2f6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d2f3b30"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d2f5a60"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d2f34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d2f3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d2f2020"/>
        <function-ref name="start" scoped="" ref="0x7ff14d2f5090"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d2f55a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff14d2f9e10" loc="68:../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14d2f9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14d2f8ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14d2f7670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14d2f71b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14d2f7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7ff14e6b69c0" loc="44:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ff14e6b69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b6d40"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6b5340"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6b5660"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6b57f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7ff14e6b5cf0" loc="45:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ff14e6b5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b3230"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6b3550"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6b36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6b3870"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6b3a00"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6b3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7ff14e6b2020" loc="46:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ff14e6b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b2530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6b2850"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6b29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6b2b70"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6b2d00"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7ff14e6b7690" loc="43:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff14e6b7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b7a10"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b7ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b7d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6b6020"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6b6340"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6b64d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7ff14e6b06a0" loc="48:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ff14e6b06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b0a20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b0bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6af020"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6af340"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6af4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7ff14e6b83e0" loc="42:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ff14e6b83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b8760"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b88f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b8a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6b8c10"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6b8da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6b7020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7ff14e6b1370" loc="47:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ff14e6b1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6b16f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6b1880"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6b1a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6b1ba0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6b1d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6b0020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e6adc50" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e6adc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6ac1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e6ac340"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6ac4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6ac660"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e6ac7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6ac980"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6acb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e6acca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e6ace30"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6ab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e6ab1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e6ab340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e6ab5d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6ab760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e6aea20" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6aea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6aeda0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6ad340"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6ad660"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6ad980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e6a87a0" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e6a87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6a8b20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6a8cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e6a8e40"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e6a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6a74d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e6a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e6a7980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e6a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e6a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e6a6120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e6a9520" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6a9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6a98a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6a9a30"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6a9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6a9d50"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6a81b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6a8340"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e6a32f0" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e6a32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6a3670"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6a3800"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e6a3990"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6a3b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6a3cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e6a3e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6a2020"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6a21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e6a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e6a24d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6a2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e6a27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e6a2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e6a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e6a4060" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e6a43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6a4570"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6a4700"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6a4890"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6a4a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6a4bb0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6a4d40"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e69fde0" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e69fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e69d180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e69d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e69d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e69d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e69d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e69d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e69dae0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e69dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e69de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e69c020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e69c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e69c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e69c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e69c760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e69c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e6a0b70" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6a0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e69f020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e69f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e69f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e69f4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e69f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e69f7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e69f980"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e69fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e699930" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e699930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e699cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e699e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e698020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e698340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e6984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e698660"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6987f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e698980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e698b10"/>
        <function-ref name="set" scoped="" ref="0x7ff14e698ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e698e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e697020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e6972b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e697440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e69a710" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e69a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e69aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e69ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e69adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e699020"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e699340"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6994d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e699660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e694480" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e694480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e694800"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e694990"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e694b20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e694cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e694e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e693020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e6931b0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e693340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e6934d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e693660"/>
        <function-ref name="set" scoped="" ref="0x7ff14e6937f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e693980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e693b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e693da0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e692020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e6951b0" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e6951b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e695530"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e6956c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e695850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e6959e0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e695b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e695d00"/>
        <function-ref name="set" scoped="" ref="0x7ff14e694020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e6941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14e68f020" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14e68f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e68f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e68f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e68f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e68f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e68f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e68fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e68fd00"/>
        <function-ref name="get" scoped="" ref="0x7ff14e68e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e68e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e68e340"/>
        <function-ref name="set" scoped="" ref="0x7ff14e68e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e68e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e68e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e68ea80"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e68ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14e691d70" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e691d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e690180"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e690310"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e6904a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e690630"/>
        <function-ref name="get" scoped="" ref="0x7ff14e6907c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e690950"/>
        <function-ref name="set" scoped="" ref="0x7ff14e690ae0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e690c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7ff14e6745a0" loc="42:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ff14e6745a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff14e674920"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e674ab0"/>
        <function-ref name="captured" scoped="" ref="0x7ff14e674c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff14e674dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7ff14e67b210" loc="43:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ff14e67b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e67b590"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e67b720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff14e67b8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff14e67ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7ff14e67be30" loc="44:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff14e67be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e67a1e0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e67a370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff14e67a500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff14e67a690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7ff14e65fda0" loc="42:../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7ff14e65fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14e65d180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff14e65d310"/>
        <function-ref name="captured" scoped="" ref="0x7ff14e65d4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14e65d630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14e65d7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff14e65d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff14e660020" loc="40:../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff14e660020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff14e6603a0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e660530"/>
        <function-ref name="captured" scoped="" ref="0x7ff14e6606c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff14e660850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff14e660ae0" loc="41:../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14e660ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14e660e60"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14e65f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14e65f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14e65f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14e65f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14e65f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14e65f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14e65f980"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14e65fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7ff14e65dc20" loc="43:../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14e65dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e65c020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e65c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e65c340"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e65c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e65c660"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e65c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e65c980"/>
        <function-ref name="get" scoped="" ref="0x7ff14e65cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e65cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e65ce30"/>
        <function-ref name="set" scoped="" ref="0x7ff14e65b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e65b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e65b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e65b5d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e65b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff14e64ec40" loc="46:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff14e64ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e64d020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e64d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e64d340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e64d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e64d660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e64d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff14e644bc0" loc="58:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff14e644bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e643020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6431b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e643340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6434d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e643660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff14e64bbc0" loc="49:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff14e64bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e64a020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e64a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e64a340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e64a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e64a660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e64a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff14e649bc0" loc="53:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff14e649bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e648020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6481b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e648340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6484d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e648660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff14e654d20" loc="44:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff14e654d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e64f0e0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e64f270"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e64f400"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e64f590"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e64f720"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e64f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff14e646bc0" loc="56:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff14e646bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e6450a0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e645230"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6453c0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e645550"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6456e0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e645870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff14e64dbc0" loc="47:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff14e64dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e64c020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e64c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e64c340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e64c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e64c660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e64c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff14e643bc0" loc="59:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff14e643bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e642020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6421b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e642340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6424d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e642660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff14e651e70" loc="42:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff14e651e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e655220"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6553b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e655540"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6556d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e655860"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6559f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff14e648bc0" loc="54:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff14e648bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e647020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6471b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e647340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6474d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e647660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff14e64fc80" loc="45:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff14e64fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e64e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e64e230"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e64e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e64e550"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e64e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e64e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff14e645c40" loc="57:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff14e645c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e644020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6441b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e644340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6444d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e644660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff14e64cbc0" loc="48:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff14e64cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e64b020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e64b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e64b340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e64b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e64b660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e64b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff14e64abc0" loc="52:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff14e64abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e649020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6491b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e649340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6494d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e649660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff14e655dc0" loc="43:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff14e655dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e654180"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e654310"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6544a0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e654630"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6547c0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e654950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff14e647bc0" loc="55:../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff14e647bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e646020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6461b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e646340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6464d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e646660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff14e63ba30" loc="43:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff14e63ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e63bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e63a020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e63a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e63a340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e63a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e63a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff14e630bc0" loc="55:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff14e630bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e62f020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e62f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e62f340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e62f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e62f660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e62f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff14e637a30" loc="46:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff14e637a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e637db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e636020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6361b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e636340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6364d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e636660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff14e635a30" loc="50:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff14e635a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e635db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e634020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6341b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e634340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6344d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e634660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff14e63da30" loc="41:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff14e63da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e63ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e63c020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e63c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e63c340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e63c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e63c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff14e632a30" loc="53:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff14e632a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e631020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6311b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e631340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6314d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e631660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff14e63aa30" loc="44:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff14e63aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e63adb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e639020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6391b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e639340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6394d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e639660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff14e62fbc0" loc="56:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff14e62fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e62e020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e62e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e62e340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e62e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e62e660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e62e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff14e6419c0" loc="39:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff14e6419c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e641d40"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e63e020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e63e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e63e340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e63e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e63e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff14e634a30" loc="51:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff14e634a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e634db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e633020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6331b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e633340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6334d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e633660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff14e63ca30" loc="42:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff14e63ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e63cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e63b020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e63b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e63b340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e63b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e63b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff14e631bc0" loc="54:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff14e631bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e630020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e6301b0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e630340"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e6304d0"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e630660"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e6307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff14e639a30" loc="45:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff14e639a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e639db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e637020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6371b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e637340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6374d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e637660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff14e636a30" loc="49:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff14e636a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e636db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e635020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6351b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e635340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6354d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e635660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff14e63ea30" loc="40:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff14e63ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e63edb0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e63d020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e63d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e63d340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e63d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e63d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff14e633a30" loc="52:../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff14e633a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e633db0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e632020"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e6321b0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e632340"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e6324d0"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e632660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ff14e54f610" loc="46:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ff14e54f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e54f990"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e54fb20"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e54fcb0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e54fe40"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e54e020"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e54e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ff14e55da30" loc="45:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ff14e55da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e55ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e54f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff14e54f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff14e54f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ff14e54c610" loc="46:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ff14e54c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14e54c990"/>
        <function-ref name="fired" scoped="" ref="0x7ff14e54cb20"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e54ccb0"/>
        <function-ref name="edge" scoped="" ref="0x7ff14e54ce40"/>
        <function-ref name="enable" scoped="" ref="0x7ff14e54b020"/>
        <function-ref name="getValue" scoped="" ref="0x7ff14e54b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ff14e54da70" loc="45:../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ff14e54da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e54ddf0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14e54c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff14e54c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff14e54c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff14e0f4e50" loc="69:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e0f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f3410"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff14e0fd160" loc="47:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff14e0fd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff14e0f7e50" loc="63:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e0f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f6210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff14e0f1880" loc="72:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14e0f1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f1c00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff14e0e90a0" loc="86:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff14e0e90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e9420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff14e0f00a0" loc="73:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff14e0f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f0420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff14e0dd500" loc="108:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff14e0dd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0dd880"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0dda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff14e0e0500" loc="104:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14e0e0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e0880"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff14e0fc490" loc="50:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff14e0fc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff14e0e6880" loc="93:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff14e0e6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e6c00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff14e0e1500" loc="102:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14e0e1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e1880"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff14e0f6e50" loc="65:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff14e0f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f5210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff14e0f5e50" loc="67:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e0f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f4210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff14e0ec880" loc="83:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff14e0ec880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ecc00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ecd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff14e0ed0a0" loc="79:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff14e0ed0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ed420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ed5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff14e0f0880" loc="74:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e0f0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f0c00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14e102a90" loc="42:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e102a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14e102e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14e0ff020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14e0ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff14e0fbe00" loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14e0fbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fa1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff14e0fa490" loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff14e0fa490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fa910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff14e0e5c80" loc="95:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14e0e5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e30a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff14e0fabe0" loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff14e0fabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff14e0e1ce0" loc="103:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14e0e1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e00a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff14e0fb160" loc="52:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e0fb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff14e0e60a0" loc="92:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff14e0e60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e6420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff14e0f5670" loc="66:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14e0f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff14e0f6670" loc="64:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e0f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f69f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff14e0ffad0" loc="46:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0ffad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0ffe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff14e0e70a0" loc="90:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14e0e70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e7420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff14e0e9880" loc="87:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff14e0e9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e9c00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff14e0e7880" loc="91:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14e0e7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e7c00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff14e0dfce0" loc="107:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff14e0dfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0dd0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0dd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff14e0e0ce0" loc="105:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14e0e0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0df0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0df230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff14e0ed880" loc="80:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff14e0ed880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0edc00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0edd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff14e0e80a0" loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff14e0e80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e8420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff14e0e2ce0" loc="101:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff14e0e2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e10a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff14e0ef880" loc="76:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff14e0ef880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0efc00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0efd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff14e0ddce0" loc="111:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff14e0ddce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e0dc0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e0dc230"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0dc3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e0dc550"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e0dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff14e0ff480" loc="45:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14e0ff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0ff800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff14e0f7670" loc="62:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff14e0f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff14e0f4670" loc="68:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14e0f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f49f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff14e0ea0a0" loc="84:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff14e0ea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ea420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ea5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff14e0ef0a0" loc="75:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e0ef0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ef420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ef5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff14e0ea880" loc="85:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff14e0ea880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0eac00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ead90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff14e0f3870" loc="70:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e0f3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f3bf0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff14e0fd7b0" loc="48:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff14e0fd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff14e0f10a0" loc="71:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14e0f10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0f1420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0f15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e103e20" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e103e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e1021c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e102350"/>
        <function-ref name="request" scoped="" ref="0x7ff14e1024e0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e102670"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e102800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff14e0f82f0" loc="57:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff14e0f82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0f8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff14e0f7020" loc="59:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff14e0f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff14e0e2500" loc="100:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff14e0e2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e2880"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff14e0e3ce0" loc="99:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e0e3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e20a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff14e0fb7b0" loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14e0fb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff14e0e3500" loc="96:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14e0e3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e3880"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff14e0df500" loc="106:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff14e0df500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0df880"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0dfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff14e0ec0a0" loc="81:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14e0ec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ec420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ec5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff14e0e8880" loc="89:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff14e0e8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e8c00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff14e0fde00" loc="49:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff14e0fde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff14e0fcae0" loc="51:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e0fcae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0fce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff14e0ee0a0" loc="77:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff14e0ee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ee420"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ee5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff14e0f8940" loc="58:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff14e0f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0f8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff14e0ee880" loc="78:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff14e0ee880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0eec00"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0eed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff14e0e50a0" loc="94:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff14e0e50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0e5820"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0e59b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff14e0dc9b0" loc="112:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff14e0dc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e0dcd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e0db020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0db1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e0db340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e0db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ff14e50c630" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ff14e50c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e50c9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e50cb40"/>
        <function-ref name="write" scoped="" ref="0x7ff14e50ccd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e50ce60"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e50b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14e50d680" loc="40:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e50d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14e50da00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14e50db90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14e50dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ff14e50b8c0" loc="42:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ff14e50b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e50bc40"/>
        <function-ref name="write" scoped="" ref="0x7ff14e50bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ff14e5096f0" loc="43:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ff14e5096f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e509a70"/>
        <function-ref name="write" scoped="" ref="0x7ff14e509c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e510960" loc="39:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e510960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e510ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e510e70"/>
        <function-ref name="request" scoped="" ref="0x7ff14e50d030"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e50d1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e50d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ff14e508510" loc="44:../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ff14e508510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e508890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7ff14e4f2680" loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e4f2680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e4f2a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e4f2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ff14e503bb0" loc="46:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ff14e503bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e501020"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e5011b0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e501340"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e5014d0"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e501660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14e507920" loc="44:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e507920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14e507ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14e507e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14e504020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7ff14e4fc080" loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff14e4fc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff14e4fc400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7ff14e4fb020" loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7ff14e4fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14e4fb3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14e4fb530"/>
        <function-ref name="isState" scoped="" ref="0x7ff14e4fb6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14e4fb850"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14e4fb9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14e4fbb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff14e4fe400" loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff14e4fe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e4fe780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e4fe910"/>
        <function-ref name="request" scoped="" ref="0x7ff14e4feaa0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e4fec30"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e4fedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ff14e500020" loc="47:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ff14e500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e5003a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e500530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ff14e500db0" loc="48:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ff14e500db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e4ff180"/>
        <function-ref name="write" scoped="" ref="0x7ff14e4ff310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14e4fbdf0" loc="57:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14e4fbdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14e4f91c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14e4f9350"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14e4f94e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14e4f9670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14e4f9800"/>
        <function-ref name="get" scoped="" ref="0x7ff14e4f9990"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14e4f9b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14e4f31b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e4f9cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14e4f9e40"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14e4f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e504810" loc="45:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e504810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e504b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e504d20"/>
        <function-ref name="request" scoped="" ref="0x7ff14e503020"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e5031b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e503340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7ff14e4ed120" loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7ff14e4ed120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e4ed4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e4ed630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ff14e4ffba0" loc="49:../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ff14e4ffba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e4fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff14e493770" loc="67:../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14e493770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14e493af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14e493c80"/>
        <function-ref name="isState" scoped="" ref="0x7ff14e493e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14e48b020"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14e48b1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14e48b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff14e48f280" loc="66:../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14e48f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14e48f600"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14e48f790"/>
        <function-ref name="isState" scoped="" ref="0x7ff14e48f920"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14e48fab0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14e48fc40"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14e48fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14e48a020" loc="66:../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14e48a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14e48a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff14e48ab70" loc="67:../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14e48ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14e489020"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14e4891b0"/>
        <function-ref name="isState" scoped="" ref="0x7ff14e489340"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14e4894d0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14e489660"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14e4897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff14e129020" loc="44:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e129020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e1293a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e129530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff14e4708f0" loc="43:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff14e4708f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff14e470c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e471c40" loc="42:../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e471c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e470020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e4701b0"/>
        <function-ref name="request" scoped="" ref="0x7ff14e470340"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e4704d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e470660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14d1f08f0" loc="82:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d1f08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14d1f0c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14d1f0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff14d1ec2b0" loc="87:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff14d1ec2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14d1ec630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14d1ec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff14d1eca50" loc="89:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14d1eca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff14d1ecdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff14d1ed0c0" loc="83:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff14d1ed0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff14d1ed440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14d1f3c30" loc="81:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14d1f3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d1f0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d1f01b0"/>
        <function-ref name="request" scoped="" ref="0x7ff14d1f0340"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d1f04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d1f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff14d1ed6d0" loc="85:../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14d1ed6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff14d1eda50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff14d1edbe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff14d1edd70"/>
        <function-ref name="write" scoped="" ref="0x7ff14d1ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff14e40b5e0" loc="74:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e40b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14e40b960"/>
        <function-ref name="configure" scoped="" ref="0x7ff14e40baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff14e3ff510" loc="77:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e3ff510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e3ff890"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e3ffa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff14e3fc600" loc="80:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14e3fc600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff14e3fc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff14e40bdd0" loc="75:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff14e40bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff14e40a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff14e3fe370" loc="79:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff14e3fe370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e3fe6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e3fe880"/>
        <function-ref name="request" scoped="" ref="0x7ff14e3fea10"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e3feba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e3fed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e411a20" loc="73:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e411a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e411da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e40d020"/>
        <function-ref name="request" scoped="" ref="0x7ff14e40d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e40d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e40d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff14e40a480" loc="76:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14e40a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff14e40a800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff14e40a990"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff14e40ab20"/>
        <function-ref name="write" scoped="" ref="0x7ff14e40acb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff14e3f86a0" loc="81:../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff14e3f86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e3f8a20"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e3f8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff14e387c40" loc="76:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e387c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14e386020"/>
        <function-ref name="configure" scoped="" ref="0x7ff14e3861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff14e385700" loc="79:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff14e385700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14e385aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14e385c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff14e384e00" loc="82:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff14e384e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff14e3831c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff14e386440" loc="77:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff14e386440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff14e3867c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7ff14e383490" loc="83:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff14e383490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff14e383810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff14e3839a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff14e383b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff14e383cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff14e383e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff14e382020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff14e3821b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff14e382340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff14e3824d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff14e382660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff14e3827f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff14e382980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff14e382b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff14e382da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff14e381020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff14e3811b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff14e381340"/>
        <function-ref name="isUart" scoped="" ref="0x7ff14e3814d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff14e381660"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff14e3817f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff14e381980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff14e381b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff14e381ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff14e381e30"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14e380020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff14e3803b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff14e380540"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff14e3806d0"/>
        <function-ref name="tx" scoped="" ref="0x7ff14e380860"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff14e3809f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff14e380b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff14e380d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff14e37f020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff14e37f1b0"/>
        <function-ref name="rx" scoped="" ref="0x7ff14e37f340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff14e37f4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff14e37f660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff14e37f7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff14e37f980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff14e37fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14e37e5a0" loc="85:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14e37e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14e37e920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14e37eab0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14e37ec40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14e37edd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14e37c020"/>
        <function-ref name="get" scoped="" ref="0x7ff14e37c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14e37c340"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14e37c980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e37c660"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14e37c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14e37c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff14e384060" loc="81:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff14e384060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e384400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e384590"/>
        <function-ref name="request" scoped="" ref="0x7ff14e384720"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e3848b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e384a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e388e80" loc="75:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e388e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e387240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e3873d0"/>
        <function-ref name="request" scoped="" ref="0x7ff14e387560"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e3876f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e387880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff14e386a50" loc="78:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff14e386a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff14e386dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff14e385020"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff14e3851b0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e385340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff14e37fde0" loc="84:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff14e37fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e37e180"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e37e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7ff14e37cc50" loc="102:../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7ff14e37cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14e37b020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14e37b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ff14e36c8a0" loc="78:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff14e36c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e36cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff14e36f3b0" loc="77:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff14e36f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e36f730"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e36f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff14e376860" loc="76:../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff14e376860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff14e376be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff14e376d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff14e373020"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff14e3731b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff14e373340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff14e3734d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff14e373660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff14e3737f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff14e373980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff14e373b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff14e373ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff14e373e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff14e372020"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff14e3722b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff14e372440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff14e3725d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff14e372760"/>
        <function-ref name="isUart" scoped="" ref="0x7ff14e3728f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff14e372a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff14e372c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff14e372da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff14e371020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff14e3711b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff14e371340"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14e3714d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff14e371860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff14e3719f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff14e371b80"/>
        <function-ref name="tx" scoped="" ref="0x7ff14e371d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff14e370020"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff14e3701b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff14e370340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff14e3704d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff14e370660"/>
        <function-ref name="rx" scoped="" ref="0x7ff14e3707f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff14e370980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff14e370b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff14e370ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff14e370e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff14e36f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff14e333670" loc="82:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff14e333670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e3339f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e333b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e333d10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e332020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e3321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e332340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e3324d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e332660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e3327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e332980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e332b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e332ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e332e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e331120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e3312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff14e366dc0" loc="76:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff14e366dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e365180"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e365310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7ff14e331670" loc="83:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7ff14e331670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e3319f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e331b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e331d10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e330020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e3301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e330340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e3304d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e330660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e3307f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e330980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e330b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e330ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e330e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e32f120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e32f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7ff14e32f670" loc="84:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7ff14e32f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e32f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e32fb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e32fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e32e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e32e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e32e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e32e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e32e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e32e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e32e980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e32eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e32eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e32ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e32d120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e32d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7ff14e36a020" loc="75:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff14e36a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff14e36a3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff14e36a530"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff14e36a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff14e36a850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff14e36a9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff14e36ab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff14e36ad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff14e369020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff14e3691b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff14e369340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff14e3694d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff14e369660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff14e3697f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff14e369a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff14e369c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff14e369da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff14e368020"/>
        <function-ref name="isUart" scoped="" ref="0x7ff14e3681b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff14e368340"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff14e3684d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff14e368660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff14e3687f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff14e368980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff14e368b10"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14e368ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff14e367220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff14e3673b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff14e367540"/>
        <function-ref name="tx" scoped="" ref="0x7ff14e3676d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff14e367860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff14e3679f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff14e367b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff14e367d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff14e366020"/>
        <function-ref name="rx" scoped="" ref="0x7ff14e3661b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff14e366340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff14e3664d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff14e366660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff14e3667f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff14e366980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7ff14e33c5b0" loc="79:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ff14e33c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff14e33c930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff14e33cac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff14e33cc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff14e33cde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff14e363020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff14e3631b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff14e363340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff14e3634d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14e363660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff14e3637f0"/>
        <function-ref name="getData" scoped="" ref="0x7ff14e363980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff14e363b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff14e363ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff14e362020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff14e3621b0"/>
        <function-ref name="getIV" scoped="" ref="0x7ff14e362340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff14e3624d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff14e362660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff14e3627f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff14e362980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff14e362b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff14e362ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff14e362e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff14e33b020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff14e33b1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff14e33b540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff14e33b6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff14e33b860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff14e33b9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff14e33bb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff14e33bd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff14e33a020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff14e33a1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff14e33a340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff14e33a4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff14e33a660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff14e33a7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff14e33a980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff14e33ab10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff14e33aca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff14e33ae30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff14e339020"/>
        <function-ref name="setData" scoped="" ref="0x7ff14e3391b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff14e339340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff14e3394d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff14e339660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff14e3397f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff14e339980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff14e339b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff14e338420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff14e3385b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff14e338740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff14e3388d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff14e338a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff14e338bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff14e338d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff14e337020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff14e3371b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff14e337340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7ff14e335670" loc="81:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7ff14e335670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e3359f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e335b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e335d10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e334020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e3341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e334340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e3344d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e334660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e3347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e334980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e334b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e334ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e334e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e333120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e3332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff14e365750" loc="77:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e365750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e365ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff14e337700" loc="80:../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff14e337700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e337a80"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e337c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e337da0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e336020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e3361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e336340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e3364d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14e336660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e3367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e336980"/>
        <function-ref name="set" scoped="" ref="0x7ff14e336b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e336ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e336e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e335120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e3352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14d1e42c0" loc="42:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d1e42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14d1e4640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14d1e47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ff14d1dd440" loc="46:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff14d1dd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14d1dd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff14d1d6760" loc="51:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d1d6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14d1d6ae0"/>
        <function-ref name="configure" scoped="" ref="0x7ff14d1d6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ff14d1dda50" loc="48:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff14d1dda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff14d1dddd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff14d1dc020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff14d1dc1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff14d1dc340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff14d1dc4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff14d1dc660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff14d1dc7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff14d1dc980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14d1dcb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff14d1dcca0"/>
        <function-ref name="getData" scoped="" ref="0x7ff14d1dce30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff14d1db020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff14d1db1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff14d1db440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff14d1db5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7ff14d1db760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff14d1db8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff14d1dba80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff14d1dbc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff14d1dbda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff14d1da020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff14d1da1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff14d1da340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff14d1da4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff14d1da660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff14d1da9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff14d1dab80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff14d1dad10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff14d1d9020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff14d1d91b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff14d1d9340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff14d1d94d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff14d1d9660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff14d1d97f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff14d1d9980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff14d1d9b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff14d1d9ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff14d1d9e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff14d1d8020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff14d1d81b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff14d1d8340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff14d1d84d0"/>
        <function-ref name="setData" scoped="" ref="0x7ff14d1d8660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff14d1d87f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff14d1d8980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff14d1d8b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff14d1d8ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff14d1d8e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff14d1d7020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff14d1d75b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff14d1d7740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff14d1d78d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff14d1d7a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff14d1d7bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff14d1d7d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff14d1d6020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff14d1d61b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff14d1d6340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff14d1d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff14d1dfc10" loc="45:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff14d1dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14d1dd020"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14d1dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14d1e5640" loc="41:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14d1e5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d1e59c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d1e5b50"/>
        <function-ref name="request" scoped="" ref="0x7ff14d1e5ce0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d1e5e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d1e4030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff14d1e32b0" loc="44:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff14d1e32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff14d1e3630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff14d1e37c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff14d1e3950"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff14d1e3ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff14d1e3c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff14d1e3e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff14d1e2020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff14d1e21b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff14d1e2340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff14d1e24d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff14d1e2660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff14d1e27f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff14d1e2980"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff14d1e2c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff14d1e2da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff14d1e1020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff14d1e11b0"/>
        <function-ref name="isUart" scoped="" ref="0x7ff14d1e1340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff14d1e14d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff14d1e1660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff14d1e17f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff14d1e1980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff14d1e1b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff14d1e1ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14d1e1e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff14d1e0220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff14d1e03b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff14d1e0540"/>
        <function-ref name="tx" scoped="" ref="0x7ff14d1e06d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff14d1e0860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff14d1e09f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff14d1e0b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff14d1e0d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff14d1df020"/>
        <function-ref name="rx" scoped="" ref="0x7ff14d1df1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff14d1df340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff14d1df4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff14d1df660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff14d1df7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff14d1df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff14d1e4a60" loc="43:../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d1e4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14d1e4de0"/>
        <function-ref name="userId" scoped="" ref="0x7ff14d1e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14e28b8a0" loc="42:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14e28b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14e28bc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14e28bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff14e289020" loc="45:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e289020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14e2893a0"/>
        <function-ref name="configure" scoped="" ref="0x7ff14e289530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff14e291a80" loc="39:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff14e291a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e291e00"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e28e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e28c5c0" loc="41:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e28c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e28c940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e28cad0"/>
        <function-ref name="request" scoped="" ref="0x7ff14e28cc60"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e28cdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e28b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff14e28e9a0" loc="40:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e28e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e28ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff14e28a130" loc="43:../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e28a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14e28a4b0"/>
        <function-ref name="userId" scoped="" ref="0x7ff14e28a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ff14e2744b0" loc="43:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e2744b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14e274830"/>
        <function-ref name="userId" scoped="" ref="0x7ff14e2749c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff14e2875c0" loc="39:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff14e2875c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e287960"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e287af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7ff14e275e70" loc="42:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff14e275e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e274220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff14e275020" loc="40:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff14e275020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14e2753c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7ff14e275690" loc="41:../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7ff14e275690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff14e275a10"/>
        <function-ref name="txDone" scoped="" ref="0x7ff14e275ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14e1fbbf0" loc="92:../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14e1fbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14e1fa020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14e1fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff14e1f9930" loc="96:../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14e1f9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14e1f9cd0"/>
        <function-ref name="configure" scoped="" ref="0x7ff14e1f9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff14e1fa400" loc="93:../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff14e1fa400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e1fa780"/>
        <function-ref name="requested" scoped="" ref="0x7ff14e1fa910"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e1faaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e1fac30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14e1fadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e1fce60" loc="91:../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e1fce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e1fb230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e1fb3c0"/>
        <function-ref name="request" scoped="" ref="0x7ff14e1fb550"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e1fb6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e1fb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff14e1f9060" loc="94:../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14e1f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14e1f93e0"/>
        <function-ref name="userId" scoped="" ref="0x7ff14e1f9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14d171140" loc="44:../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14d171140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14d1714c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff14d171750" loc="45:../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff14d171750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff14d171ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff14d171c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff14d171df0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff14d170020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14d16d850" loc="55:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d16d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14d16dbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14d16dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff14d16b590" loc="60:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d16b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14d16b930"/>
        <function-ref name="configure" scoped="" ref="0x7ff14d16bac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff14d16bd50" loc="61:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff14d16bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff14d16a100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff14d16a290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff14d16a420"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff14d16a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff14d16c020" loc="56:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff14d16c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d16c3a0"/>
        <function-ref name="requested" scoped="" ref="0x7ff14d16c530"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d16c6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d16c850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14d16c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14d16a800" loc="62:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14d16a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14d16ab80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14d16ad10"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14d169020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14d1691b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14d169340"/>
        <function-ref name="get" scoped="" ref="0x7ff14d1694d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14d169660"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14d169ca0"/>
        <function-ref name="set" scoped="" ref="0x7ff14d169980"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14d1697f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14d169b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14d16e970" loc="54:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14d16e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d16ed10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d16d020"/>
        <function-ref name="request" scoped="" ref="0x7ff14d16d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d16d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d16d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff14d16cc30" loc="57:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d16cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14d16b020"/>
        <function-ref name="userId" scoped="" ref="0x7ff14d16b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ff14d168020" loc="75:../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ff14d168020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14d1683a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14d168530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ff14e1f1880" loc="4:../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff14e1f1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff14e1f1c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff14e1f1d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff14e1ee020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff14e1ee1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff14e1ee340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff14e1ee4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff14e1ee660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff14e1ee7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14e1ee980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff14e1eeb10"/>
        <function-ref name="getData" scoped="" ref="0x7ff14e1eeca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff14e1eee30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff14e1ed020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff14e1ed2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff14e1ed440"/>
        <function-ref name="getIV" scoped="" ref="0x7ff14e1ed5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff14e1ed760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff14e1ed8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff14e1eda80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff14e1edc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff14e1edda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff14e1ec020"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff14e1ec1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff14e1ec340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff14e1ec4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff14e1ec860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff14e1ec9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff14e1ecb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff14e1ecd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff14e1eb020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff14e1eb1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff14e1eb340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff14e1eb4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff14e1eb660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff14e1eb7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff14e1eb980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff14e1ebb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff14e1ebca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff14e1ebe30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff14e1ea020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff14e1ea1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff14e1ea340"/>
        <function-ref name="setData" scoped="" ref="0x7ff14e1ea4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff14e1ea660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff14e1ea7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff14e1ea980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff14e1eab10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff14e1eaca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff14e1eae30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff14e1e9420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff14e1e95b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff14e1e9740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff14e1e98d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff14e1e9a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff14e1e9bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff14e1e9d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff14e1e8020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff14e1e81b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff14e1e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7ff14e1de250" loc="41:../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7ff14e1de250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff14e1de5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff14e1de760"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff14e1de8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff14e1dea80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff14e1dec10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff14e1deda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff14e1dd020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff14e1dd1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff14e1dd340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff14e1dd4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff14e1dd660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff14e1dd7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff14e1dd980"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff14e1ddc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff14e1ddda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff14e1dc020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff14e1dc1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7ff14e1dc340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff14e1dc4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff14e1dc660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff14e1dc7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff14e1dc980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff14e1dcb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff14e1dcca0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14e1dce30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff14e1db220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff14e1db3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff14e1db540"/>
        <function-ref name="tx" scoped="" ref="0x7ff14e1db6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff14e1db860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff14e1db9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff14e1dbb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff14e1dbd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff14e1da020"/>
        <function-ref name="rx" scoped="" ref="0x7ff14e1da1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff14e1da340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff14e1da4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff14e1da660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff14e1da7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff14e1da980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff14e1d8cb0" loc="43:../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff14e1d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e1d70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e1d7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e1d73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e1d7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e1d76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e1d7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e1d7a00"/>
        <function-ref name="get" scoped="" ref="0x7ff14e1d7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e1d7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e1d6020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e1d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e1d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e1d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e1d6760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e1d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7ff14e1e5430" loc="39:../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ff14e1e5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff14e1e57b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff14e1e5940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff14e1e5ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff14e1e5c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff14e1e5df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff14e1e4020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff14e1e41b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff14e1e4340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14e1e44d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff14e1e4660"/>
        <function-ref name="getData" scoped="" ref="0x7ff14e1e47f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff14e1e4980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff14e1e4b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff14e1e4da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff14e1e3020"/>
        <function-ref name="getIV" scoped="" ref="0x7ff14e1e31b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff14e1e3340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff14e1e34d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff14e1e3660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff14e1e37f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff14e1e3980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff14e1e3b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff14e1e3ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff14e1e3e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff14e1e2020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff14e1e23b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff14e1e2540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff14e1e26d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff14e1e2860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff14e1e29f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff14e1e2b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff14e1e2d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff14e1e1020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff14e1e11b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff14e1e1340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff14e1e14d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff14e1e1660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff14e1e17f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff14e1e1980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff14e1e1b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff14e1e1ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff14e1e1e30"/>
        <function-ref name="setData" scoped="" ref="0x7ff14e1e0020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff14e1e01b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff14e1e0340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff14e1e04d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff14e1e0660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff14e1e07f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff14e1e0980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff14e1df020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff14e1df1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff14e1df340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff14e1df4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff14e1df660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff14e1df7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff14e1df980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff14e1dfb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff14e1dfca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff14e1dfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff14e1dad40" loc="42:../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff14e1dad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e1d90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e1d9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14e1d9400"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e1d9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e1d9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14e1d98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e1d9a40"/>
        <function-ref name="get" scoped="" ref="0x7ff14e1d9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14e1d9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14e1d8020"/>
        <function-ref name="set" scoped="" ref="0x7ff14e1d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14e1d8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14e1d84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14e1d8760"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e1d88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff14e0c3c60" loc="69:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e0c3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c2210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff14e0ceda0" loc="47:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff14e0ceda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0cd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff14e0c7b50" loc="63:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e0c7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c6020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff14e0c1670" loc="72:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14e0c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c19f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff14e0bae50" loc="86:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff14e0bae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b9210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff14e0c1e50" loc="73:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff14e0c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c0210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff14e0ad2f0" loc="108:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff14e0ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ad670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ad800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff14e0af2f0" loc="104:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14e0af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0af670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0af800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff14e0cc120" loc="50:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff14e0cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0cc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff14e0b5670" loc="93:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff14e0b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff14e0b02f0" loc="102:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14e0b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b0670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff14e0c6c60" loc="65:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff14e0c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c4020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff14e0c4c60" loc="67:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e0c4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c3020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff14e0bb670" loc="83:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff14e0bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0bb9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff14e0bde50" loc="79:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff14e0bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0bc210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff14e0c0670" loc="74:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e0c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c09f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14e0cf760" loc="42:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e0cf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14e0cfae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14e0cfc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14e0cfe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff14e0caaa0" loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14e0caaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0cae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff14e0c9120" loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff14e0c9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0c95a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff14e0b4a70" loc="95:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14e0b4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b4df0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff14e0c9870" loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff14e0c9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0c9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff14e0b0ad0" loc="103:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14e0b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b0e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff14e0ccdc0" loc="52:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e0ccdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0ca180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff14e0b6e50" loc="92:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff14e0b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b5210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff14e0c4480" loc="66:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14e0c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c4800"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff14e0c6480" loc="64:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e0c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c6800"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff14e0ce750" loc="46:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0ce750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0cead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff14e0b7e50" loc="90:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14e0b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b6210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff14e0b9670" loc="87:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff14e0b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b99f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff14e0b6670" loc="91:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14e0b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b69f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff14e0aead0" loc="107:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff14e0aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0aee50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff14e0afad0" loc="105:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14e0afad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0afe50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff14e0bc670" loc="80:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff14e0bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0bc9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff14e0b9e50" loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff14e0b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b7210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff14e0b2ad0" loc="101:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff14e0b2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b2e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff14e0be670" loc="76:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff14e0be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0be9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0beb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff14e0adad0" loc="111:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff14e0adad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e0ade50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e0ac020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ac1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e0ac340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e0ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff14e0ce100" loc="45:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14e0ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0ce480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff14e0c7370" loc="62:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff14e0c7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c76f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff14e0c3480" loc="68:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14e0c3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c3800"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff14e0bbe50" loc="84:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff14e0bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ba210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff14e0c0e50" loc="75:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e0c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0be210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff14e0ba670" loc="85:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff14e0ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ba9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff14e0c2670" loc="70:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e0c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c29f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff14e0cd450" loc="48:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff14e0cd450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0cd7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff14e0c2e50" loc="71:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14e0c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0c1210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e0d0a80" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e0d0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e0d0e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e0cf020"/>
        <function-ref name="request" scoped="" ref="0x7ff14e0cf1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e0cf340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e0cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff14e0c8020" loc="57:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff14e0c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff14e0c8cc0" loc="59:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff14e0c8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0c70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff14e0b22f0" loc="100:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff14e0b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b2670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff14e0b3ad0" loc="99:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e0b3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b3e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff14e0ca450" loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14e0ca450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0ca7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff14e0b32f0" loc="96:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14e0b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b3670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff14e0ae2f0" loc="106:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff14e0ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0ae670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff14e0bce50" loc="81:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14e0bce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0bb210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff14e0b7670" loc="89:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff14e0b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff14e0cdaa0" loc="49:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff14e0cdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0cde20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff14e0cc770" loc="51:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e0cc770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0ccaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff14e0bee50" loc="77:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff14e0bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0bd210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff14e0c8670" loc="58:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff14e0c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0c89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff14e0bd670" loc="78:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff14e0bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0bd9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0bdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff14e0b5e50" loc="94:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff14e0b5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0b4610"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0b47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff14e0ac7a0" loc="112:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff14e0ac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e0acb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e0accb0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0ace40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e0ab020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e0ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff14e097c60" loc="69:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14e097c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e095210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff14e0a1da0" loc="47:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff14e0a1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff14e09ab50" loc="63:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14e09ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e099020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff14e094670" loc="72:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14e094670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0949f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e094b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff14e08de50" loc="86:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff14e08de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08c210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff14e094e50" loc="73:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff14e094e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e093210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff14e0802f0" loc="108:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff14e0802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e080670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e080800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff14e0832f0" loc="104:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14e0832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e083670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e083800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff14e09f120" loc="50:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff14e09f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff14e089670" loc="93:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff14e089670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0899f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e089b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff14e0842f0" loc="102:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14e0842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e084670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e084800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff14e099c60" loc="65:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff14e099c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e098020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff14e098c60" loc="67:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14e098c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e097020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff14e08e670" loc="83:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff14e08e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08e9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff14e091e50" loc="79:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff14e091e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e090210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff14e093670" loc="74:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff14e093670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0939f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e093b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14e0a3760" loc="42:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14e0a3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14e0a3ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14e0a3c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14e0a3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff14e09eaa0" loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14e09eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff14e09d120" loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff14e09d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff14e087a70" loc="95:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14e087a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e087df0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e086020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff14e09d870" loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff14e09d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff14e084ad0" loc="103:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14e084ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e084e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e083020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff14e09fdc0" loc="52:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14e09fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff14e08ae50" loc="92:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff14e08ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e089210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff14e098480" loc="66:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14e098480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e098800"/>
        <function-ref name="write" scoped="" ref="0x7ff14e098990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff14e099480" loc="64:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14e099480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e099800"/>
        <function-ref name="write" scoped="" ref="0x7ff14e099990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff14e0a1750" loc="46:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff14e0a1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0a1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff14e08be50" loc="90:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14e08be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08a210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff14e08c670" loc="87:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff14e08c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08c9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff14e08a670" loc="91:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14e08a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08a9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff14e082ad0" loc="107:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff14e082ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e082e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e080020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff14e083ad0" loc="105:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14e083ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e083e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e082020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff14e090670" loc="80:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff14e090670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0909f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e090b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff14e08ce50" loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff14e08ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08b210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff14e085ad0" loc="101:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff14e085ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e085e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e084020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff14e092670" loc="76:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff14e092670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0929f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e092b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff14e080ad0" loc="111:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff14e080ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e080e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e07f020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e07f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e07f340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e07f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff14e0a1100" loc="45:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14e0a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0a1480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff14e09a370" loc="62:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff14e09a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e09a6f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e09a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff14e097480" loc="68:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14e097480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e097800"/>
        <function-ref name="write" scoped="" ref="0x7ff14e097990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff14e08ee50" loc="84:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff14e08ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08d210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff14e093e50" loc="75:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff14e093e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e092210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff14e08d670" loc="85:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff14e08d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08d9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff14e095670" loc="70:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff14e095670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0959f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e095b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff14e0a0450" loc="48:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff14e0a0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0a07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff14e095e50" loc="71:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14e095e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e094210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14e0a49e0" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14e0a49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14e0a4d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14e0a3020"/>
        <function-ref name="request" scoped="" ref="0x7ff14e0a31b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14e0a3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14e0a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff14e09b020" loc="57:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff14e09b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff14e09bcc0" loc="59:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff14e09bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff14e0852f0" loc="100:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff14e0852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e085670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e085800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff14e086ad0" loc="99:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff14e086ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e086e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14e085020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff14e09e450" loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14e09e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff14e0862f0" loc="96:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14e0862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e086670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e086800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff14e0822f0" loc="106:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff14e0822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e082670"/>
        <function-ref name="write" scoped="" ref="0x7ff14e082800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff14e090e50" loc="81:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14e090e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08e210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff14e08b670" loc="89:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff14e08b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e08b9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e08bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff14e0a0aa0" loc="49:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff14e0a0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e0a0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff14e09f770" loc="51:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff14e09f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff14e092e50" loc="77:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff14e092e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e091210"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff14e09b670" loc="58:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff14e09b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14e09b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff14e091670" loc="78:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff14e091670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0919f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e091b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff14e089e50" loc="94:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff14e089e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e087610"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0877a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff14e07f7a0" loc="112:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff14e07f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14e07fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14e07fcb0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e07fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14e07e020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14e07e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7ff14e077b20" loc="54:../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14e077b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff14e073020"/>
        <function-ref name="changed" scoped="" ref="0x7ff14e0731b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff14e073340"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff14e0734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ff14e076d20" loc="13:../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e076d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff14e05f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ff14e05b310" loc="5:../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff14e05b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff14e05b690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7ff14e058880" loc="8:../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff14e058880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e058c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7ff14e04d020" loc="8:../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff14e04d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e04d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7ff14e043bd0" loc="14:../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff14e043bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e046020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7ff14e046530" loc="15:../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7ff14e046530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14e0468b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14e046a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7ff14e047140" loc="11:../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff14e047140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e0474c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7ff14e04cc50" loc="8:../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff14e04cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e033020"/>
        <function-ref name="write" scoped="" ref="0x7ff14e0331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7ff14e033540" loc="11:../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7ff14e033540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e0338c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e033a50"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e033be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e033d70"/>
        <function-ref name="get" scoped="" ref="0x7ff14e032020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e0321b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14e032340"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e0324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7ff14e029950" loc="15:../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff14e029950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff14e02c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7ff14e02f150" loc="11:../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff14e02f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14e02f4d0"/>
        <function-ref name="write" scoped="" ref="0x7ff14e02f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7ff14e02f9f0" loc="14:../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7ff14e02f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e02fd70"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e02e020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e02e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e02e340"/>
        <function-ref name="get" scoped="" ref="0x7ff14e02e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14e02e660"/>
        <function-ref name="set" scoped="" ref="0x7ff14e02e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14e02e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7ff14e031ca0" loc="41:../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff14e031ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff14e009ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7ff14e007a90" loc="54:../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff14e007a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff14e0068d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff14dff6020" loc="55:../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14dff6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14dff6e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14dff5800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14dff5340"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14dff5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7ff14dff1530" loc="46:../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff14dff1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14dff03d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14dff0d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14dff0890"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14dfee260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff14dfe9020" loc="45:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14dfe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14dfe93a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14dfe9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14dfe96c0"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfe9850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14dfe99e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14dfe9b70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14dfe9d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14dfe8020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14dfe81b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14dfe8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14dfe84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff14dfede50" loc="44:../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14dfede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3ed70"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff14ed3d180"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14dfecca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14dfeb670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14dfeb1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14dfebb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7ff14e034590" loc="3:../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7ff14e034590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14e034910"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14e034aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14e034c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14e034dc0"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfe4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14dfe41b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfe4340"/>
        <function-ref name="clr" scoped="" ref="0x7ff14dfe44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff14dfe2c50" loc="44:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff14dfe2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14dfe1020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14dfe11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14dfe1340"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14dfe14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14dfe1660"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14dfe17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14dfe1980"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfe1b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14dfe1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14dfe1e30"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfe0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14dfe01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14dfe0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14dfe05d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14dfe0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff14dfe39e0" loc="43:../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff14dfe39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14dfe3d60"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14dfe2020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14dfe21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14dfe2340"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfe24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14dfe2660"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfe27f0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14dfe2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff14dfe5a20" loc="14:../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff14dfe5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14dfe5da0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dfdb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff14dfcccb0" loc="46:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14dfcccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14dfcb0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14dfcb230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14dfcb3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14dfcb550"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14dfcb6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14dfcb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ff14dfc6990" loc="47:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff14dfc6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff14dfc6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7ff14dfcc020" loc="45:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff14dfcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dfcc3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dfcc530"/>
        <function-ref name="modify" scoped="" ref="0x7ff14dfcc6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dfcc850"/>
        <function-ref name="resend" scoped="" ref="0x7ff14dfcc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff14dfcf6c0" loc="44:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff14dfcf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14dfcfa40"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dfcfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ff14dfca150" loc="48:../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ff14dfca150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff14dfca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff14dfbc970" loc="51:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14dfbc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14dfbccf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14dfbce80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14dfbb030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14dfbb1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14dfbb350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14dfbb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ff14dfb4950" loc="58:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff14dfb4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14dfb1020"/>
        <function-ref name="clear" scoped="" ref="0x7ff14dfb1750"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14dfb3780"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfb1e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ff14df9c020" loc="78:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14df9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14df9c3a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14df9c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ff14df9c890" loc="79:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14df9c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14df9cc10"/>
        <function-ref name="write" scoped="" ref="0x7ff14df9cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ff14dfbb900" loc="52:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff14dfbb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff14dfbbc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7ff14dfa0530" loc="72:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff14dfa0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dfa08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7ff14dfaf880" loc="60:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ff14dfaf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff14dfafc00"/>
        <function-ref name="disable" scoped="" ref="0x7ff14dfafd90"/>
        <function-ref name="captured" scoped="" ref="0x7ff14dfae020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff14dfae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7ff14dfbaae0" loc="55:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7ff14dfbaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dfb6390"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dfb8360"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14dfb8ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dfb8820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14dfb6850"/>
        <function-ref name="start" scoped="" ref="0x7ff14dfb9970"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dfb9e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff14dfb6d00" loc="56:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14dfb6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14dfb50a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14dfb5230"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14dfb53c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14dfb5550"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14dfb56e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14dfb5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7ff14dfa2550" loc="68:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dfa2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dfa28d0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dfa2a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ff14dfa2e00" loc="69:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14dfa2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dfa11c0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dfa1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7ff14df96d40" loc="83:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14df96d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14df990e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff14df99270"/>
        <function-ref name="sfd" scoped="" ref="0x7ff14df99400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14dfbdbc0" loc="50:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14dfbdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dfbc020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dfbc1b0"/>
        <function-ref name="modify" scoped="" ref="0x7ff14dfbc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dfbc4d0"/>
        <function-ref name="resend" scoped="" ref="0x7ff14dfbc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7ff14dfa4d10" loc="66:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14dfa4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14dfa30e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14dfa3270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14dfa3400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7ff14dfa0c60" loc="73:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14dfa0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff14dfa7820" loc="62:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff14dfa7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14dfa7ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14dfa7d30"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14dfa6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14dfa61b0"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfa6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14dfa64d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfa6660"/>
        <function-ref name="clr" scoped="" ref="0x7ff14dfa67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dfbec60" loc="48:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dfbec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dfbd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14dfb5bb0" loc="57:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dfb5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dfb4020"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14dfb41b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14dfb4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7ff14dfa9be0" loc="59:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14dfa9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14dfaf020"/>
        <function-ref name="isSet" scoped="" ref="0x7ff14dfaf1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dfaf340"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfaf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ff14df9f3e0" loc="74:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14df9f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14df9f960"/>
        <function-ref name="write" scoped="" ref="0x7ff14df9faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff14dfa4020" loc="65:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff14dfa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14dfa43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14dfa4530"/>
        <function-ref name="request" scoped="" ref="0x7ff14dfa46c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14dfa4850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14dfa49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7ff14dfae500" loc="61:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ff14dfae500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14dfae980"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14dfaeb10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14dfaeca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14dfaee30"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfa7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14dfa71b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfa7340"/>
        <function-ref name="clr" scoped="" ref="0x7ff14dfa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ff14df9b130" loc="80:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14df9b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14df9b4b0"/>
        <function-ref name="write" scoped="" ref="0x7ff14df9b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7ff14df9b9c0" loc="81:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff14df9b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14df9bd40"/>
        <function-ref name="write" scoped="" ref="0x7ff14df9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ff14dfa16d0" loc="70:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14dfa16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dfa1a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7ff14dfa6b40" loc="63:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ff14dfa6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14dfa5020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14dfa51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14dfa5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14dfa54d0"/>
        <function-ref name="get" scoped="" ref="0x7ff14dfa5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14dfa57f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14dfa5980"/>
        <function-ref name="clr" scoped="" ref="0x7ff14dfa5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14df996c0" loc="84:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14df996c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14df99a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14df99bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14df99d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14df98020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14df981b0"/>
        <function-ref name="get" scoped="" ref="0x7ff14df98340"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14df984d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14df98b10"/>
        <function-ref name="set" scoped="" ref="0x7ff14df98660"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14df987f0"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14df98980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ff14df9d5e0" loc="77:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14df9d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14df9d960"/>
        <function-ref name="write" scoped="" ref="0x7ff14df9daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff14dfbd320" loc="49:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff14dfbd320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14dfbd6a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dfbd830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7ff14dfa3780" loc="67:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dfa3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14dfa3b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14dfa3c90"/>
        <function-ref name="write" scoped="" ref="0x7ff14dfa3e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14dfa2020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14dfa21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7ff14dfa1de0" loc="71:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff14dfa1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dfa0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7ff14df9fe80" loc="76:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff14df9fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df9d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ff14dfba0f0" loc="53:../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ff14dfba0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff14dfba470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff14defcc60" loc="69:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14defcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defa210"/>
        <function-ref name="write" scoped="" ref="0x7ff14defa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff14df05020" loc="47:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff14df05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff14deffc70" loc="63:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14deffc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defe020"/>
        <function-ref name="write" scoped="" ref="0x7ff14defe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff14def9670" loc="72:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14def9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def99f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff14def2e50" loc="86:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff14def2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def1210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff14def9e50" loc="73:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff14def9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def8210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff14dee52f0" loc="108:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff14dee52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee5670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff14dee82f0" loc="104:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14dee82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee8670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff14df04370" loc="50:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff14df04370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df046f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff14deee670" loc="93:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff14deee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deee9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14deeeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff14dee92f0" loc="102:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dee92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee9670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff14defec60" loc="65:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff14defec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defd020"/>
        <function-ref name="write" scoped="" ref="0x7ff14defd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff14defdc60" loc="67:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14defdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defc020"/>
        <function-ref name="write" scoped="" ref="0x7ff14defc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff14def3670" loc="83:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff14def3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def39f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff14def6e50" loc="79:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff14def6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def5210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff14def8670" loc="74:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff14def8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def89f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14df088f0" loc="42:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14df088f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14df08c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14df08e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14df06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff14df03d00" loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14df03d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df020a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff14df02370" loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff14df02370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df027f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff14deeca70" loc="95:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14deeca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deecdf0"/>
        <function-ref name="write" scoped="" ref="0x7ff14deeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff14df02ac0" loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff14df02ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df02e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff14dee9ad0" loc="103:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14dee9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee9e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff14df03060" loc="52:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14df03060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df033e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff14deefe50" loc="92:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff14deefe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deee210"/>
        <function-ref name="write" scoped="" ref="0x7ff14deee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff14defd480" loc="66:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14defd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defd800"/>
        <function-ref name="write" scoped="" ref="0x7ff14defd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff14defe480" loc="64:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14defe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defe800"/>
        <function-ref name="write" scoped="" ref="0x7ff14defe990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff14df06940" loc="46:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff14df06940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df06cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff14def0e50" loc="90:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14def0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deef210"/>
        <function-ref name="write" scoped="" ref="0x7ff14deef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff14def1670" loc="87:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff14def1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def19f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff14deef670" loc="91:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14deef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deef9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14deefb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff14dee7ad0" loc="107:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff14dee7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee7e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff14dee8ad0" loc="105:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14dee8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee8e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff14def5670" loc="80:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff14def5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff14def1e50" loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff14def1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def0210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff14deeaad0" loc="101:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff14deeaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deeae50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff14def7670" loc="76:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff14def7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff14dee5ad0" loc="111:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dee5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14dee5e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14dee4020"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee41b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14dee4340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14dee44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff14df062f0" loc="45:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14df062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df06670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff14deff490" loc="62:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff14deff490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deff810"/>
        <function-ref name="write" scoped="" ref="0x7ff14deff9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff14defc480" loc="68:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14defc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defc800"/>
        <function-ref name="write" scoped="" ref="0x7ff14defc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff14def3e50" loc="84:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff14def3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def2210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff14def8e50" loc="75:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff14def8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def7210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff14def2670" loc="85:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff14def2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def29f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff14defa670" loc="70:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff14defa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14defa9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14defab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff14df05670" loc="48:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff14df05670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df059f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff14defae50" loc="71:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14defae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def9210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14df09c30" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14df09c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14df08020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14df081b0"/>
        <function-ref name="request" scoped="" ref="0x7ff14df08340"/>
        <function-ref name="granted" scoped="" ref="0x7ff14df084d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14df08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff14df00160" loc="57:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff14df00160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df004e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff14df00e00" loc="59:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff14df00e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14deff1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff14deea2f0" loc="100:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff14deea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deea670"/>
        <function-ref name="write" scoped="" ref="0x7ff14deea800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff14deebad0" loc="99:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff14deebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deebe50"/>
        <function-ref name="write" scoped="" ref="0x7ff14deea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff14df036b0" loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14df036b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df03a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff14deeb2f0" loc="96:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14deeb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deeb670"/>
        <function-ref name="write" scoped="" ref="0x7ff14deeb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff14dee72f0" loc="106:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff14dee72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dee7670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff14def5e50" loc="81:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14def5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def3210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff14def0670" loc="89:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff14def0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def09f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff14df05cc0" loc="49:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff14df05cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df040a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff14df049c0" loc="51:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff14df049c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df04d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff14def7e50" loc="77:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff14def7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def6210"/>
        <function-ref name="write" scoped="" ref="0x7ff14def63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff14df007b0" loc="58:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff14df007b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14df00b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff14def6670" loc="78:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff14def6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14def69f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14def6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff14deeee50" loc="94:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff14deeee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deec610"/>
        <function-ref name="write" scoped="" ref="0x7ff14deec7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff14dee47a0" loc="112:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dee47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14dee4b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14dee4cb0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dee4e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14dee3020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14dee31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ff14ded8df0" loc="42:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14ded8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14ded41c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff14ded4350"/>
        <function-ref name="sfd" scoped="" ref="0x7ff14ded44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14ded47c0" loc="43:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14ded47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14ded4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ff14ded3020" loc="44:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ff14ded3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff14ded33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff14ded85c0" loc="41:../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff14ded85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14ded8940"/>
        <function-ref name="stop" scoped="" ref="0x7ff14ded8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7ff14decc380" loc="54:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ff14decc380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14decc700"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14decc890"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14decca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14deccbb0"/>
        <function-ref name="get" scoped="" ref="0x7ff14deccd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14decb020"/>
        <function-ref name="set" scoped="" ref="0x7ff14decb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14decb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ff14dec4b90" loc="64:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff14dec4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff14dec3020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff14dec31b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff14dec3340"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff14dec34d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff14dec3660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff14dec37f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff14dec3980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff14dec3b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff14dec3ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff14dec3e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff14dec2020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff14dec21b0"/>
        <function-ref name="sync" scoped="" ref="0x7ff14dec2340"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff14dec25d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff14dec2760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7ff14dead9d0" loc="148:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7ff14dead9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14deadd50"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14deac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ff14dec2d70" loc="65:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff14dec2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14dec0330"/>
        <function-ref name="clear" scoped="" ref="0x7ff14dec0a60"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14dec1ba0"/>
        <function-ref name="set" scoped="" ref="0x7ff14debe210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7ff14decb6b0" loc="55:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ff14decb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14decba30"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14decbbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14decbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14deca020"/>
        <function-ref name="get" scoped="" ref="0x7ff14deca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14deca340"/>
        <function-ref name="set" scoped="" ref="0x7ff14deca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff14deca660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ff14debdcb0" loc="69:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14debdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14debc0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14debc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ff14debc590" loc="70:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14debc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14debc910"/>
        <function-ref name="write" scoped="" ref="0x7ff14debcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7ff14debb6d0" loc="72:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff14debb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14debba50"/>
        <function-ref name="write" scoped="" ref="0x7ff14debbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff14dec5330" loc="62:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14dec5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14dec56b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14dec5840"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14dec59d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14dec5b60"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14dec5cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14dec5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ff14decf550" loc="49:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff14decf550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14decf8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff14decfa60"/>
        <function-ref name="sfd" scoped="" ref="0x7ff14decfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7ff14dec63a0" loc="60:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff14dec63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dec6720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff14decd020" loc="53:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff14decd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14decd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14decd530"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14decd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14decd850"/>
        <function-ref name="get" scoped="" ref="0x7ff14decd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14decdb70"/>
        <function-ref name="set" scoped="" ref="0x7ff14decdd00"/>
        <function-ref name="clr" scoped="" ref="0x7ff14decc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7ff14deba020" loc="73:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14deba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14deba3a0"/>
        <function-ref name="write" scoped="" ref="0x7ff14deba530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14ded0620" loc="47:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ded0620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ded09a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14dec41e0" loc="63:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dec41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dec4560"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14dec46f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14dec4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14dece020" loc="50:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14dece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dece3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff14dec96e0" loc="58:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff14dec96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14dec9a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14dec9bf0"/>
        <function-ref name="request" scoped="" ref="0x7ff14dec9d80"/>
        <function-ref name="granted" scoped="" ref="0x7ff14dec7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14dec71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ff14debce00" loc="71:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14debce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14debb1c0"/>
        <function-ref name="write" scoped="" ref="0x7ff14debb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7ff14dec7530" loc="59:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dec7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14dec78b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14dec7a40"/>
        <function-ref name="write" scoped="" ref="0x7ff14dec7bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14dec7d60"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14dec6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ff14deba8b0" loc="74:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14deba8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14debae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ff14dece7c0" loc="51:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ff14dece7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff14deceb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14deb9150" loc="76:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14deb9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14deb94d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14deb9660"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14deb97f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14deb9980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14deb9b10"/>
        <function-ref name="get" scoped="" ref="0x7ff14deb9ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14deb9e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14deb84d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14deb8020"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14deb81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14deb8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ff14debd3e0" loc="68:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14debd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14debd760"/>
        <function-ref name="write" scoped="" ref="0x7ff14debd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7ff14debeb10" loc="67:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff14debeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14debd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7ff14decaa50" loc="56:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff14decaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff14decadd0"/>
        <function-ref name="disable" scoped="" ref="0x7ff14dec9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff14dec91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff14dec9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7ff14dec6ad0" loc="61:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14dec6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dec5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff14ded0ca0" loc="48:../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff14ded0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14decf0a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14decf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff14de4ca70" loc="44:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14de4ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff14de4cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff14de51670" loc="41:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14de519f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14de51b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14de51d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14de4e020"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14de4e1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14de4e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff14de4b550" loc="46:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de4b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14de4ab00"/>
        <function-ref name="clear" scoped="" ref="0x7ff14de492a0"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14de4a3d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14de499d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ff14de4c0c0" loc="43:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de4c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14de4c440"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14de4c5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14de4c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ff14de43480" loc="48:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14de43480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14de43800"/>
        <function-ref name="isSet" scoped="" ref="0x7ff14de43990"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14de43b20"/>
        <function-ref name="set" scoped="" ref="0x7ff14de43cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff14de47660" loc="47:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14de47660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14de46ce0"/>
        <function-ref name="clear" scoped="" ref="0x7ff14de45460"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14de465b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14de45b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff14de4e6e0" loc="42:../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff14de4e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14de4ea60"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14de4ebf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14de4ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff14de3d020" loc="49:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff14de3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff14de3d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff14de42d20" loc="46:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14de42d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14de3f0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14de3f270"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14de3f400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14de3f590"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14de3f720"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14de3f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff14de344a0" loc="56:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14de344a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14de34820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14de349b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14de34b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14de34cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14de34e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff14de3da80" loc="51:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff14de3da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14de3b020"/>
        <function-ref name="clear" scoped="" ref="0x7ff14de3b750"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14de3c8d0"/>
        <function-ref name="set" scoped="" ref="0x7ff14de3be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ff14de3e640" loc="48:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14de3e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14de3e9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14de3eb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14de3ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ff14de358b0" loc="53:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff14de358b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14de35c30"/>
        <function-ref name="isSet" scoped="" ref="0x7ff14de35dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14de34020"/>
        <function-ref name="set" scoped="" ref="0x7ff14de341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7ff14de30820" loc="57:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7ff14de30820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14de324c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7ff14de32b80" loc="58:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ff14de32b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14de317d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff14de39af0" loc="52:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff14de39af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff14de370d0"/>
        <function-ref name="clear" scoped="" ref="0x7ff14de37800"/>
        <function-ref name="isValid" scoped="" ref="0x7ff14de38970"/>
        <function-ref name="set" scoped="" ref="0x7ff14de35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff14de3fc50" loc="47:../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff14de3fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14de3e020"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14de3e1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14de3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff14dddf4e0" loc="48:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff14dddf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14ddd6150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff14ddd67c0" loc="49:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14ddd67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14ddd5620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ddd4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ddd5ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ddd44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ff14ddce020" loc="46:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ff14ddce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14ddcb630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14ddcda60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14ddcc920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14ddcc4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14ddc9020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14ddcbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14ddcc020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14ddcec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14ddcb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14ddcd110"/>
        <function-ref name="stop" scoped="" ref="0x7ff14ddcd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff14ddc9610" loc="47:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff14ddc9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14ddc83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14ddcf130" loc="45:../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14ddcf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14ddcf4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14dd9a870" loc="44:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14dd9a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dd97090"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dd98090"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14dd98a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dd98550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14dd97550"/>
        <function-ref name="start" scoped="" ref="0x7ff14dd996a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dd99bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dd9a020" loc="43:../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dd9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dd9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d03b260" loc="44:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d03b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d039b30"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d03aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d0394e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d039020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d037020"/>
        <function-ref name="start" scoped="" ref="0x7ff14d03a090"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d03a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14d03c9d0" loc="43:../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14d03c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14d03cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff14d023a80" loc="41:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d023a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14d023e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14d021020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14d0211b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14d021340"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d0214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff14d025020" loc="39:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d025020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14d0253a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14d025530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d0256c0"/>
        <function-ref name="get" scoped="" ref="0x7ff14d025850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d0259e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14d025b70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14d025d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14d024020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14d0241b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14d024340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14d0244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff14d024760" loc="40:../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d024760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14d024ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14d024c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d024e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14d023020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14d0231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d023340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14d0234d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14d023660"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14d0237f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff14d018760" loc="49:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff14d018760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14d018ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14d018c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14d018e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14d017020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d0171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff14d01cdd0" loc="47:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff14d01cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14d01b180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14d01b310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d01b4a0"/>
        <function-ref name="get" scoped="" ref="0x7ff14d01b630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d01b7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14d01b950"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14d01bae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14d01bc70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14d01be00"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14d01a020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14d01a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d01fbf0" loc="46:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d01fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d01c4e0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d01d4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d01de60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d01d9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d01c9a0"/>
        <function-ref name="start" scoped="" ref="0x7ff14d01ea80"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d01d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14d01f360" loc="45:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14d01f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14d01f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff14d01a440" loc="48:../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff14d01a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14d01a7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14d01a950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14d01aae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14d01ac70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14d01ae00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14d018020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14d0181b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14d018340"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14d0184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff14ddbab70" loc="43:../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14ddbab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14ddb79b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ddb5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ddb7e70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ddb5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ff14ddafb90" loc="63:../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ff14ddafb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14ddae9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ddac4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ddac020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ddac9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff14ddb2610" loc="62:../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14ddb2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14ddb05b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14ddaf020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14ddb0a70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14ddaf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff14d0355f0" loc="61:../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14d0355f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d033e50"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d034e00"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d033800"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d033340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d032340"/>
        <function-ref name="start" scoped="" ref="0x7ff14d034430"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d034940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff14d02fd20" loc="73:../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff14d02fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ed3e5c0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff14ed3e930"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d02c670"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d02d550"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14d02c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d02da10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14d02cb30"/>
        <function-ref name="start" scoped="" ref="0x7ff14d02eb60"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d02d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff14d0329b0" loc="68:../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14d0329b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14d0307e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14d02f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14d030ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14d02f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7ff14dd659c0" loc="74:../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7ff14dd659c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14dd65d40"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14dd64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7ff14dd69850" loc="49:../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff14dd69850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dd65090"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dd67090"/>
        <function-ref name="startAt" scoped="" ref="0x7ff14dd67a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dd67550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff14dd65550"/>
        <function-ref name="start" scoped="" ref="0x7ff14dd686a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dd68bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14dd6e2f0" loc="48:../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14dd6e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dd6a870"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dd6de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dd6cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dd6c780"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dd691e0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14dd6acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dd6c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dd6d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dd6a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dd6d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dd6d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7ff14dd14a00" loc="71:../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7ff14dd14a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14dd14d80"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14dd13020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7ff14dd19640" loc="49:../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7ff14dd19640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dd15c40"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dd161e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dd15020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dd16ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dd14590"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14dd14110"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dd16660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dd18390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dd15630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dd18860"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dd18d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14dd1f150" loc="48:../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14dd1f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dd1b700"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dd1ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dd1ca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dd1c5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dd19090"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14dd1bba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dd1c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dd1fd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dd1b0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dd1e2a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dd1e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff14dd112b0" loc="48:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff14dd112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14dd0f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff14dd0f690" loc="49:../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff14dd0f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff14dd0e5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14dd0d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14dd0ea70"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14dd0d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14dd068c0" loc="45:../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14dd068c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dcf3cf0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dcf4320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dcf30d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dcf4c20"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dcf1660"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14dcf11e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dcf47a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dcf54e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dcf36e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dcf59b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dcf5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ff14dcfd2c0" loc="49:../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ff14dcfd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dcfa870"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dcfce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dcfbc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dcfb780"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dcf81e0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14dcfacf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dcfb300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dcfc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dcfa260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dcfc4f0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dcfc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff14dce1c60" loc="69:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff14dce1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce0210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff14dceb020" loc="47:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff14dceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dceb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff14dce5c70" loc="63:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff14dce5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce3020"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff14dcdf670" loc="72:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff14dcdf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcdf9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff14dcd8e50" loc="86:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff14dcd8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd7210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff14dcdfe50" loc="73:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff14dcdfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcde210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff14dccb2f0" loc="108:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff14dccb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dccb670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff14dccd2f0" loc="104:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff14dccd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dccd670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff14dcea370" loc="50:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff14dcea370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dcea6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff14dcd3670" loc="93:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff14dcd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd39f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff14dcce2f0" loc="102:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff14dcce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcce670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff14dce3c60" loc="65:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff14dce3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce2020"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff14dce2c60" loc="67:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff14dce2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce1020"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff14dcd9670" loc="83:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff14dcd9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd99f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff14dcdbe50" loc="79:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff14dcdbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcda210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff14dcde670" loc="74:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff14dcde670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcde9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff14dced970" loc="42:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff14dced970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff14dcedcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff14dcede80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff14dcec030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff14dce8d00" loc="54:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff14dce8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff14dce7370" loc="55:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff14dce7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff14dcd2a70" loc="95:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff14dcd2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd2df0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff14dce7ac0" loc="56:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff14dce7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff14dccead0" loc="103:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff14dccead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dccee50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff14dce8060" loc="52:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff14dce8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce83e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff14dcd4e50" loc="92:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff14dcd4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd3210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff14dce2480" loc="66:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff14dce2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce2800"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff14dce3480" loc="64:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff14dce3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce3800"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff14dcec950" loc="46:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff14dcec950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dceccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff14dcd5e50" loc="90:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff14dcd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd4210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff14dcd7670" loc="87:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff14dcd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd79f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff14dcd4670" loc="91:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff14dcd4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd49f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff14dcccad0" loc="107:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff14dcccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dccce50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff14dccdad0" loc="105:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff14dccdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dccde50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff14dcda670" loc="80:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff14dcda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcda9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff14dcd7e50" loc="88:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff14dcd7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd5210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff14dcd0ad0" loc="101:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff14dcd0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd0e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff14dcdc670" loc="76:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff14dcdc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcdc9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff14dccbad0" loc="111:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff14dccbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14dccbe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14dcca020"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcca1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14dcca340"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14dcca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff14dcec300" loc="45:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff14dcec300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dcec680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff14dce5490" loc="62:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff14dce5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce5810"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff14dce1480" loc="68:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff14dce1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce1800"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff14dcd9e50" loc="84:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff14dcd9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd8210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff14dcdee50" loc="75:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff14dcdee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcdc210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff14dcd8670" loc="85:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff14dcd8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd89f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff14dce0670" loc="70:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff14dce0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dce09f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dce0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff14dceb670" loc="48:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff14dceb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dceb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff14dce0e50" loc="71:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff14dce0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcdf210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14dceed00" loc="41:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14dceed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14dced0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14dced230"/>
        <function-ref name="request" scoped="" ref="0x7ff14dced3c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14dced550"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14dced6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff14dce6160" loc="57:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff14dce6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff14dce6e00" loc="59:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff14dce6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff14dcd02f0" loc="100:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff14dcd02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd0670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff14dcd1ad0" loc="99:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff14dcd1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd1e50"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff14dce86b0" loc="53:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff14dce86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce8a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff14dcd12f0" loc="96:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff14dcd12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd1670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff14dccc2f0" loc="106:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff14dccc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dccc670"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff14dcdae50" loc="81:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff14dcdae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd9210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff14dcd5670" loc="89:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff14dcd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd59f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff14dcebcc0" loc="49:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff14dcebcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dcea0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff14dcea9c0" loc="51:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff14dcea9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dcead40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff14dcdce50" loc="77:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff14dcdce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcdb210"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff14dce67b0" loc="58:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff14dce67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff14dce6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff14dcdb670" loc="78:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff14dcdb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcdb9f0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcdbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff14dcd3e50" loc="94:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff14dcd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff14dcd2610"/>
        <function-ref name="write" scoped="" ref="0x7ff14dcd27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff14dcca7a0" loc="112:../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff14dcca7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff14dccab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff14dccacb0"/>
        <function-ref name="write" scoped="" ref="0x7ff14dccae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff14dcc9020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff14dcc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ff14dca0a20" loc="46:../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff14dca0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff14dca0da0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff14dc9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ff14dc9e920" loc="45:../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ff14dc9e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dca0560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dca4990" loc="44:../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dca4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dca4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ff14dc99a20" loc="48:../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff14dc99a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff14dc99da0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff14dc98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ff14dc9b940" loc="47:../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ff14dc9b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dc99560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dc9b080" loc="46:../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dc9b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dc9b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff14dca2aa0" loc="67:../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14dca2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14dca2e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14dc9c020"/>
        <function-ref name="isState" scoped="" ref="0x7ff14dc9c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14dc9c340"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14dc9c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14dc9c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14dc7e020" loc="44:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14dc7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc7e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc7e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc7e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc7e850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc7e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14dc7f220" loc="40:../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14dc7f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc7f5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc7f730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc7f8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc7fa50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc7fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14dc7ae60" loc="45:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14dc7ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc79210"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc793a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc79530"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc796c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc79850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14dc7da20" loc="40:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14dc7da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc7dda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc7a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc7a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc7a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ff14dc788f0" loc="47:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff14dc788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff14dc78c70"/>
        <function-ref name="rand32" scoped="" ref="0x7ff14dc78e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dc7a750" loc="41:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dc7a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dc7aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14dc77170" loc="48:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dc77170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc774f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14dc77680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14dc77810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7ff14dc79ae0" loc="46:../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14dc79ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14dc79e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14dc78020"/>
        <function-ref name="isState" scoped="" ref="0x7ff14dc781b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14dc78340"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14dc784d0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14dc78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff14dc7b690" loc="67:../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14dc7b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14dc7ba10"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14dc7bba0"/>
        <function-ref name="isState" scoped="" ref="0x7ff14dc7bd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14dc66020"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14dc661b0"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14dc66340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff14dc5f950" loc="47:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc5f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc5fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14dc62aa0" loc="42:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14dc62aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc62e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ff14dc5f200" loc="43:../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff14dc5f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc5f580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff14dc5a3f0" loc="49:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc5a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc5a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dc5bb70" loc="45:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dc5bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dc5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14dc5ee30" loc="43:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14dc5ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc5b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14dc5aa70" loc="50:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dc5aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc5adf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14dc59020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14dc591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ff14dc5b570" loc="44:../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff14dc5b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff14dc2b020" loc="75:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14dc2b6b0" loc="76:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14dc2b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc2ba30"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc2bbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc2bd50"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc29020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14dc2f8e0" loc="65:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14dc2f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc2fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc2fdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc2e020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc2e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff14dc2ec90" loc="68:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff14dc2ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc2d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc2d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc2d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc2d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc2d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14dc2e5e0" loc="66:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14dc2e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc2e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14dc30be0" loc="64:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14dc30be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14dc2f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14dc2f1b0"/>
        <function-ref name="request" scoped="" ref="0x7ff14dc2f340"/>
        <function-ref name="granted" scoped="" ref="0x7ff14dc2f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14dc2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff14dc2da50" loc="69:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14dc2da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc2ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff14dc2c170" loc="71:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff14dc2c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14dc2c4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14dc2c680"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc2c810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc2c9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14dc2cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14dc21d70" loc="58:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14dc21d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc20180"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc20310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc204a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc20630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc207c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff14dc20b10" loc="59:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff14dc20b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7ff14dbf1db0" loc="184:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7ff14dbf1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14dbf0180"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14dbf0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff14dc1f2f0" loc="60:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14dc1f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14dc1f670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14dc1f800"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14dc1f990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14dc1fb20"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14dc1fcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14dc1fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff14dc23a20" loc="51:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff14dc23a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc23da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc22020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc221b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc22340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff14dc1eb70" loc="62:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff14dc1eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff14dc1d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff14dc1d1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff14dc1d340"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff14dc1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14dc1e170" loc="61:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14dc1e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc1e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14dc1e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14dc1e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ff14dc23370" loc="49:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ff14dc23370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc236f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14dc257b0" loc="46:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14dc257b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14dc25b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14dc25cc0"/>
        <function-ref name="request" scoped="" ref="0x7ff14dc25e50"/>
        <function-ref name="granted" scoped="" ref="0x7ff14dc24020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14dc241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ff14dc244d0" loc="48:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ff14dc244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dc24850"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc249e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc24b70"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dc24d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dc23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff14dc22840" loc="52:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff14dc22840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dc22bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff14dc21020" loc="54:../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff14dc21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14dc213a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14dc21530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dc216c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dc21850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14dc219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dbd1dd0" loc="44:../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dbd1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dbd0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff14dbd0410" loc="45:../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff14dbd0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff14dbd0790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff14dbd0920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff14dbd0ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff14dbd0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff14dbc5b80" loc="46:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff14dbc5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14dbc4020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14dbc41b0"/>
        <function-ref name="start" scoped="" ref="0x7ff14dbc4340"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dbc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14dbc3860" loc="51:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14dbc3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dbc3be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dbc3d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dbc2020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dbc21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dbc2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff14dbc2690" loc="52:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff14dbc2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dbc2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14dbc9ce0" loc="43:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14dbc9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dbc60a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dbc6230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dbc63c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dbc6550"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dbc66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff14dbc5080" loc="45:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14dbc5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff14dbc5400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff14dbc5590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff14dbc5720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff14dbc58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7ff14dbc4800" loc="47:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7ff14dbc4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14dbc4b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14dbc4d10"/>
        <function-ref name="isState" scoped="" ref="0x7ff14dbc3020"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14dbc31b0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14dbc3340"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14dbc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ff14dbc2d90" loc="53:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ff14dbc2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14dbc1180"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14dbc1310"/>
        <function-ref name="start" scoped="" ref="0x7ff14dbc14a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dbc1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14dbc6980" loc="44:../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14dbc6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14dbc6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff14dbbe2d0" loc="41:../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff14dbbe2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff14dbbe650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff14dbbe7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff14dbbe970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff14dbbeb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff14dbbf580" loc="67:../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff14dbbf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff14dbbf900"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff14dbbfa90"/>
        <function-ref name="isState" scoped="" ref="0x7ff14dbbfc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff14dbbfdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff14dbb5020"/>
        <function-ref name="forceState" scoped="" ref="0x7ff14dbb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14dbb0d70" loc="45:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14dbb0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dbaf180"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dbaf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dbaf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dbaf630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dbaf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff14dbb3350" loc="40:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff14dbb3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14dbb36d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14dbb3860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14dbb39f0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14dbb3b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14dbb3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff14dbb0020" loc="41:../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff14dbb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff14dbb03a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff14dbb0530"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff14dbb06c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff14dbb0850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff14dbb09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7ff14dbab1c0" loc="44:../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff14dbab1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff14dbab540"/>
        <function-ref name="noAck" scoped="" ref="0x7ff14dbab6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff14dbab860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff14dbae410" loc="40:../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff14dbae410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff14dbae790"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff14dbae920"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff14dbaeab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff14dbaec40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff14dbaedd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff14db8b690" loc="59:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff14db8b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14db8ba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff14db8d860" loc="58:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff14db8d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14db8dbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14db8dd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14db8b020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14db8b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14db8b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ff14db89610" loc="62:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff14db89610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff14db89990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff14db89b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff14db89cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff14db89e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff14db88020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff14db881b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff14db88340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff14db884d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff14db88660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff14db887f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff14db88980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff14db88b10"/>
        <function-ref name="sync" scoped="" ref="0x7ff14db88ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff14db87020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff14db871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff14db8e8b0" loc="54:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff14db8e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14db8ec30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14db8edc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14db8d020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14db8d1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14db8d340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14db8d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ff14db8fce0" loc="53:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ff14db8fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ff14db8e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ff14db861f0" loc="64:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ff14db861f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff14db86570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff14db86700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff14db86890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff14db86a20"/>
        <function-ref name="setCca" scoped="" ref="0x7ff14db86bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff14db86d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff14db90a80" loc="52:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff14db90a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14db90e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff14db8f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14db8f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14db8f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff14db8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff14db93020" loc="48:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff14db93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff14db933a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff14db93530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff14db936c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff14db93850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff14db939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff14db92df0" loc="50:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff14db92df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14db911c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff14db8bce0" loc="60:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff14db8bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff14db8a0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff14db8a230"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff14db8a3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff14db8a550"/>
        <function-ref name="getPower" scoped="" ref="0x7ff14db8a6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff14db8a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ff14db874d0" loc="63:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff14db874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff14db87950"/>
        <function-ref name="changed" scoped="" ref="0x7ff14db87ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff14db87c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff14db87e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff14db8ab70" loc="61:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff14db8ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff14db89020"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff14db891b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff14db89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff14db92210" loc="49:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff14db92210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff14db92590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff14db85d30" loc="67:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff14db85d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff14db840e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff14db84270"/>
        <function-ref name="led1On" scoped="" ref="0x7ff14db84400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff14db84590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff14db84720"/>
        <function-ref name="get" scoped="" ref="0x7ff14db848b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff14db84a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff14db831b0"/>
        <function-ref name="set" scoped="" ref="0x7ff14db84bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7ff14db84d60"/>
        <function-ref name="led2On" scoped="" ref="0x7ff14db83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff14db91470" loc="51:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff14db91470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff14db917f0"/>
        <function-ref name="source" scoped="" ref="0x7ff14db91980"/>
        <function-ref name="address" scoped="" ref="0x7ff14db91b10"/>
        <function-ref name="destination" scoped="" ref="0x7ff14db91ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7ff14db91e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff14db90020"/>
        <function-ref name="type" scoped="" ref="0x7ff14db901b0"/>
        <function-ref name="setType" scoped="" ref="0x7ff14db90340"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff14db904d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff14db90660"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff14db907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7ff14db850f0" loc="66:../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7ff14db850f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14db85470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14db85600"/>
        <function-ref name="request" scoped="" ref="0x7ff14db85790"/>
        <function-ref name="granted" scoped="" ref="0x7ff14db85920"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14db85ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14dae86d0" loc="45:../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="LowPowerAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14dae86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dae4c40"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dae61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dae4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dae6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dae3590"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14dae3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dae6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dae7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dae4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dae7860"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dae7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14dae1060" loc="45:../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="LowPowerAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14dae1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14dadd630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14dae0ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14dade920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14dade4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14dadc020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14daddab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14dade020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14dae1c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14dadd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14dae0170"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dae0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7ff14d850d30" loc="48:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff14d850d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14d84f0e0"/>
        <function-ref name="configure" scoped="" ref="0x7ff14d84f270"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff14d84f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7ff14d851d70" loc="47:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff14d851d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14d850180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff14d850310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff14d8504a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff14d850630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff14d8507c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff14d850950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff14d850ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7ff14d84f650" loc="49:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7ff14d84f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff14d84f9d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff14d84fb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff14d84d020" loc="51:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff14d84d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff14d84dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14d851160" loc="46:../../..//tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14d851160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d8514e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d851670"/>
        <function-ref name="request" scoped="" ref="0x7ff14d851800"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d851990"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d851b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7ff14daba2e0" loc="42:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7ff14daba2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14daba660"/>
        <function-ref name="configure" scoped="" ref="0x7ff14daba7f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff14daba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7ff14dab4a70" loc="44:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7ff14dab4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14dab4df0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14dab7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7ff14dab82c0" loc="43:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff14dab82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff14dab8640"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff14dab87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7ff14dabcb10" loc="41:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7ff14dabcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14dabb020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff14dabb1b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff14dabb340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff14dabb4d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff14dabb660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff14dabb7f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff14dabb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14dabd7c0" loc="40:../../..//tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14dabd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14dabdb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14dabdcd0"/>
        <function-ref name="request" scoped="" ref="0x7ff14dabde60"/>
        <function-ref name="granted" scoped="" ref="0x7ff14dabc020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14dabc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7ff14daaf370" loc="42:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7ff14daaf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14daaf6f0"/>
        <function-ref name="configure" scoped="" ref="0x7ff14daaf880"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff14daafa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7ff14da9d8d0" loc="48:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ff14da9d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ff14da9dc50"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ff14da9dde0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ff14daab020"/>
        <function-ref name="isBusy" scoped="" ref="0x7ff14daab1b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ff14daab340"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ff14daab4d0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ff14daab660"/>
        <function-ref name="startConversion" scoped="" ref="0x7ff14daab7f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ff14daab980"/>
        <function-ref name="getMem" scoped="" ref="0x7ff14daabb10"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ff14daabca0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ff14daabe30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ff14daaa020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ff14daaa2b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ff14daaa440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7ff14da8e540" loc="58:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7ff14da8e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da8e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da8ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da8ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da8ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da8d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da8d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da8d340"/>
        <function-ref name="get" scoped="" ref="0x7ff14da8d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da8d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da8d7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14da8d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da8db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da8dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da8c020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7ff14da97850" loc="53:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7ff14da97850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14da97bd0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14da97d60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14da96020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14da961b0"/>
        <function-ref name="fired" scoped="" ref="0x7ff14da96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7ff14da9a020" loc="50:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7ff14da9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14da9a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14da9a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14da9a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14da9a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14da9a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14da9ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14da9ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14da99020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14da991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7ff14daad1d0" loc="44:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7ff14daad1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff14daad550"/>
        <function-ref name="stop" scoped="" ref="0x7ff14daad6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7ff14da92540" loc="56:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7ff14da92540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da928c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da92a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da92be0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da92d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da91020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da91340"/>
        <function-ref name="get" scoped="" ref="0x7ff14da914d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da91660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da917f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14da91980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da91b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da91ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da90020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7ff14daae320" loc="43:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff14daae320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff14daae6a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff14daae830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7ff14da88540" loc="61:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7ff14da88540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da888c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da88a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da88be0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da88d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da87020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da87340"/>
        <function-ref name="get" scoped="" ref="0x7ff14da874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da87660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da877f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14da87980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da87b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da87ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da86020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7ff14da966d0" loc="54:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7ff14da966d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da96b50"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da96ce0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da96e70"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da95030"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da951c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da95350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da954e0"/>
        <function-ref name="get" scoped="" ref="0x7ff14da95670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da95800"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da95990"/>
        <function-ref name="set" scoped="" ref="0x7ff14da95b20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da95cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da95e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da94120"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14dab2020" loc="40:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14dab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14dab23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7ff14da8c540" loc="59:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7ff14da8c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da8c8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da8ca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da8cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da8cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da8b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da8b340"/>
        <function-ref name="get" scoped="" ref="0x7ff14da8b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da8b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da8b7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14da8b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da8bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da8bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da8a020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7ff14daaa780" loc="49:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7ff14daaa780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff14daaab00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff14daaac90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14daaae20"/>
        <function-ref name="get" scoped="" ref="0x7ff14da9b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14da9b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff14da9b340"/>
        <function-ref name="getMode" scoped="" ref="0x7ff14da9b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff14da9b660"/>
        <function-ref name="overflow" scoped="" ref="0x7ff14da9b7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7ff14da9b980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff14da9bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7ff14daadaf0" loc="47:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7ff14daadaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14daade70"/>
        <function-ref name="userId" scoped="" ref="0x7ff14daac030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7ff14da99560" loc="51:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7ff14da99560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff14da998e0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff14da99a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff14da99c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff14da99d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff14da98020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff14da981b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff14da98340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff14da984d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ff14da98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7ff14dab2d00" loc="41:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7ff14dab2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff14dab10a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff14dab1230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff14dab13c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff14dab1550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff14dab16e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff14dab1870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff14dab1a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7ff14da90540" loc="57:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7ff14da90540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da908c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da90a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da90be0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da90d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da8f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da8f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da8f340"/>
        <function-ref name="get" scoped="" ref="0x7ff14da8f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da8f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da8f7f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14da8f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da8fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da8fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da8e020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7ff14da989e0" loc="52:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7ff14da989e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff14da98d60"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff14da97020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff14da971b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff14da97340"/>
        <function-ref name="fired" scoped="" ref="0x7ff14da974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7ff14da94640" loc="55:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7ff14da94640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da949c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da94b50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da94ce0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da94e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da93030"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da931c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da93350"/>
        <function-ref name="get" scoped="" ref="0x7ff14da934e0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da93670"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da93800"/>
        <function-ref name="set" scoped="" ref="0x7ff14da93990"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da93b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da93cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da92020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7ff14da8a540" loc="60:../../..//tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7ff14da8a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff14da8a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff14da8aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff14da8abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff14da8ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff14da89020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff14da891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff14da89340"/>
        <function-ref name="get" scoped="" ref="0x7ff14da894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff14da89660"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff14da897f0"/>
        <function-ref name="set" scoped="" ref="0x7ff14da89980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff14da89b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff14da89ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff14da88020"/>
        <function-ref name="clr" scoped="" ref="0x7ff14da881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7ff14d9ca080" loc="46:../../..//tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ff14d9ca080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ff14d9ca400"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ff14d9ca590"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ff14d9ca720"/>
        <function-ref name="isBusy" scoped="" ref="0x7ff14d9ca8b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ff14d9caa40"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ff14d9cabd0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ff14d9cad60"/>
        <function-ref name="startConversion" scoped="" ref="0x7ff14d9c9020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ff14d9c91b0"/>
        <function-ref name="getMem" scoped="" ref="0x7ff14d9c9340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ff14d9c94d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ff14d9c9660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ff14d9c97f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ff14d9c9a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ff14d9c9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14d9393a0" loc="86:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14d9393a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14d939740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14d9398d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff14d938570" loc="89:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14d938570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14d938910"/>
        <function-ref name="configure" scoped="" ref="0x7ff14d938aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14d93b520" loc="85:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14d93b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d93b8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d93ba50"/>
        <function-ref name="request" scoped="" ref="0x7ff14d93bbe0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d93bd70"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d939020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff14d939b20" loc="87:../../..//tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14d939b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14d938020"/>
        <function-ref name="userId" scoped="" ref="0x7ff14d9381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff14cf3a920" loc="44:../../..//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff14cf3a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff14cf3aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7ff14cf39020" loc="45:../../..//tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7ff14cf39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff14cf393a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff14cf39530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff14cf396c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff14cf39850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff14cf36d80" loc="52:../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff14cf36d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff14cf35180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff14cf35310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff14cf35e50" loc="56:../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff14cf35e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff14cf34220"/>
        <function-ref name="configure" scoped="" ref="0x7ff14cf343b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff14cf34640" loc="57:../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff14cf34640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff14cf349c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff14cf34b50"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff14cf34ce0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff14cf34e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff14cf36020" loc="51:../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff14cf36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14cf363c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14cf36550"/>
        <function-ref name="request" scoped="" ref="0x7ff14cf366e0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14cf36870"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14cf36a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff14cf35560" loc="53:../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff14cf35560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff14cf358e0"/>
        <function-ref name="userId" scoped="" ref="0x7ff14cf35a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ff14cf33170" loc="68:../../..//tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ff14cf33170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14cf334f0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14cf33680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7ff14d91c740" loc="55:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7ff14d91c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff14d91b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7ff14d91d1d0" loc="54:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7ff14d91d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d91d550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d91d6e0"/>
        <function-ref name="request" scoped="" ref="0x7ff14d91d870"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d91da00"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d91db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7ff14d921d20" loc="52:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7ff14d921d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d91e0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d91e270"/>
        <function-ref name="request" scoped="" ref="0x7ff14d91e400"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d91e590"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d91e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7ff14d9169a0" loc="43:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ff14d9169a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ff14d916d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ff14d915020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ff14d9151b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7ff14d915340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ff14d9154d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ff14d915660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ff14d9157f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7ff14d915980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ff14d915b10"/>
        <function-ref name="getMem" scoped="" ref="0x7ff14d915ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ff14d915e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ff14d914020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ff14d9141b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ff14d914440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ff14d9145d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7ff14d909020" loc="45:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7ff14d909020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d905630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d908a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14d907920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14d9074a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14d904020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14d905ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d907020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14d909c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14d905020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14d908110"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d9085e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7ff14d917e00" loc="39:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff14d917e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14d9161c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14d916350"/>
        <function-ref name="start" scoped="" ref="0x7ff14d9164e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d916670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7ff14d9046c0" loc="46:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7ff14d9046c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d900c40"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d9021e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14d900020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14d902ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14d8ff590"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14d8ff110"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d902660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14d903390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14d900630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14d903860"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d903d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7ff14d917240" loc="38:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff14d917240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14d9175c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14d917750"/>
        <function-ref name="start" scoped="" ref="0x7ff14d9178e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d917a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7ff14d914a90" loc="44:../../..//tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7ff14d914a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d90f020"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d912510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14d911300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14d912e10"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14d90f920"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14d90f4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d912990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14d9136b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14d911910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14d913b80"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d912090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7ff14d8af020" loc="43:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7ff14d8af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff14d8afc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7ff14d8b29c0" loc="42:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff14d8b29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14d8b2d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14d8b1020"/>
        <function-ref name="start" scoped="" ref="0x7ff14d8b11b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d8b1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7ff14d8b3030" loc="40:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7ff14d8b3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d8b33b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d8b3540"/>
        <function-ref name="request" scoped="" ref="0x7ff14d8b36d0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d8b3860"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d8b39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7ff14d8b7ca0" loc="38:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7ff14d8b7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff14d8b40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff14d8b4230"/>
        <function-ref name="request" scoped="" ref="0x7ff14d8b43c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff14d8b4550"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff14d8b46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7ff14d8ad7f0" loc="52:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7ff14d8ad7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff14d8adb70"/>
        <function-ref name="runTask" scoped="" ref="0x7ff14d8add00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7ff14d8b3d80" loc="41:../../..//tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff14d8b3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff14d8b2180"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff14d8b2310"/>
        <function-ref name="start" scoped="" ref="0x7ff14d8b24a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d8b2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14d87e4e0" loc="45:../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14d87e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d87aa20"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d87c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14d87cda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14d87c920"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14d8794a0"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14d879020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d87c4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14d87d110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14d87a410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14d87d5e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d87dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14d877020" loc="45:../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14d877020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d873630"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d876a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14d875920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14d8754a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14d872020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14d873ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d875020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14d877c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14d873020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14d876110"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d8765e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff14d871b40" loc="45:../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff14d871b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ef18db0"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff14ed3e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff14d86c110"/>
        <function-ref name="fired" scoped="" ref="0x7ff14d86f5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff14d86d4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff14d86d020"/>
        <function-ref name="getdt" scoped="" ref="0x7ff14d86ca10"/>
        <function-ref name="gett0" scoped="" ref="0x7ff14d86c590"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff14d86fa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff14d870750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff14d86dab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff14d870c20"/>
        <function-ref name="stop" scoped="" ref="0x7ff14d86f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7ff14cf50670" loc="44:../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7ff14cf50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff14cf4f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7ff14cf4f9e0" loc="45:../../..//tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="LowPowerAppC.AutoAdc.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7ff14cf4f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff14cf4d6b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff14ef14560" loc="62:../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ff14ef15190" loc="60:../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7ff14eee6420" loc="48:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7ff14eee8700" loc="43:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7ff14eee7ce0" loc="47:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7ff14eee8020" loc="42:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7ff14eee8e70" loc="45:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7ff14eeea0e0" loc="40:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7ff14eeea7c0" loc="41:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7ff14eee75c0" loc="46:../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7ff14f02a020" loc="62:../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7ff14f2efc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7ff14ee94020" loc="55:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ff14ee95cc0" loc="55:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7ff14ee98390" loc="42:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff14eedeec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff14eedd940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ff14ee94890" loc="57:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7ff14ee937b0" loc="59:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7ff14ee95560" loc="47:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ff14ee93020" loc="58:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7ff14ee98b30" loc="43:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7ff14ee97350" loc="44:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7ff14ee97da0" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff14eedeec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff14eedd940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff14ee97b20" loc="46:../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff14eedeec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff14eedd940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ff14ee860e0" loc="44:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7ff14ee84730" loc="84:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7ff14ee844b0" loc="84:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ff14ee832e0" loc="91:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff14ee83060" loc="91:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff14ee85ca0" loc="73:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff14ee853e0" loc="68:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7ff14ee86a90" loc="56:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ff14ee86810" loc="56:../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ff14ee8d3e0" loc="40:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7ff14ee8dd60" loc="41:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff14ee8dae0" loc="41:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7ff14ee8c790" loc="42:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ff14ee8c510" loc="42:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7ff14ee8b2a0" loc="43:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ff14ee8b020" loc="43:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff14ee8b990" loc="45:../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff14ee9e810" loc="52:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ff14ee9b2a0" loc="55:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7ff14ee9b020" loc="55:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ff14ee9c020" loc="53:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff14eea3aa0" loc="45:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ff14ee9c760" loc="54:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff14eea09b0" loc="47:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ff14ee9e120" loc="51:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff14eea0270" loc="46:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ff14ee9f0e0" loc="48:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7ff14ee9f9f0" loc="50:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff14ee9f770" loc="50:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7ff14ee9bcb0" loc="56:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7ff14ee9ba30" loc="56:../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff14ee5d1f0" loc="39:../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7ff14ef4da80" loc="85:../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7ff14ef4c1f0" loc="86:../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7ff14ef4d2b0" loc="79:../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7ff14f166810" loc="52:../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff14f3a8020" loc="57:../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7ff14f3a7020" loc="72:../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7ff14f3a8790" loc="65:../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7ff14f39c270" loc="67:../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7ff14f39cac0" loc="75:../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <function command="" provided="0" name="getData" ref="0x7ff14ec93d00" loc="102:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="95:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7ff14ec93020" loc="86:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14ecacd30"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7ff14ecab230"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14ec96a50" loc="86:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7ff14ec96e40" loc="87:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14ecacd30"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7ff14ecab230"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7ff14ec94200" loc="87:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7ff14ec945a0" loc="87:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff14ec94950" loc="88:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7ff14ec94cc0" loc="88:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7ff14ec92d40" loc="112:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="104:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7ff14ec92720" loc="112:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff14ec92ab0" loc="112:../../..//tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ff14ecbf020" loc="113:../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff14ecc1d30" loc="113:../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ff14ecbe520" loc="138:../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff14ecbe2a0" loc="138:../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff14ecc1350" loc="104:../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff14ecbf870" loc="130:../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7ff14ecdc020" loc="80:../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff14ecde650" loc="80:../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff14ecde9d0" loc="80:../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14ecded00" loc="80:../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff14ecd8660" loc="135:../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecd8060" loc="135:../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14ecd8390" loc="135:../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff14ecd7790" loc="123:../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff14ecdb390" loc="96:../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecdb110" loc="96:../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff14ecda8b0" loc="110:../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecda2d0" loc="110:../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff14ecda620" loc="110:../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff14ecbc110" loc="65:../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecc3e40" loc="65:../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7ff14ecbb2a0" loc="78:../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecbb020" loc="78:../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff14ecb6620" loc="126:../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecb6020" loc="126:../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14ecb6350" loc="126:../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff14ecb76d0" loc="106:../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7ff14ecb9730" loc="94:../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14ecb9170" loc="94:../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14ecb94a0" loc="94:../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14ed2fa60" loc="53:../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14ed2fa60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ff14ecce7c0" loc="136:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff14ecd2070" loc="83:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ff14ecd1df0" loc="114:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff14ecd1820" loc="114:../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ff14ecd1b60" loc="114:../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ff14ecd1070" loc="98:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ff14eccd8a0" loc="151:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ff14eccd020" loc="144:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ff14ecd2850" loc="92:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ff14ecd65f0" loc="64:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff14ecd6370" loc="64:../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ff14eccfdc0" loc="129:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff14eccf7f0" loc="129:../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ff14eccfb30" loc="129:../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ff14ecd3110" loc="73:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff14ecd6e30" loc="73:../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff14ecd3910" loc="78:../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../..//tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../..//tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7ff14ec8f390" loc="45:../../..//tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7ff14ec8f390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7ff14ec8fd60" loc="58:../../..//tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../..//tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7ff14ec8f390"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ff14ed36570" loc="61:../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ff14ed36d20" loc="67:../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ff14ed35540" loc="72:../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ff14ed344d0" loc="83:../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ff14ed33c20" loc="100:../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff14ed31480" loc="117:../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ff14ed35cd0" loc="77:../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff14ed30020" loc="134:../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ff14ed31d70" loc="134:../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ff14ed37db0" loc="56:../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ff14ed34cb0" loc="89:../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ff14ed33470" loc="94:../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ff14ecb2a40" loc="120:../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7ff14ecb3a50" loc="97:../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7ff14ecb30e0" loc="88:../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ff14ecb2270" loc="102:../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ff14ecb04e0" loc="128:../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff14ec5c020" loc="44:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff14ec5c750" loc="45:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff14ec5d0e0" loc="42:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff14ec5b5e0" loc="47:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff14ec5d7e0" loc="43:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff14ec5ce70" loc="46:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff14ec5f2b0" loc="40:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff14ec5f980" loc="41:../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff14ec31020" loc="78:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff14ec31770" loc="80:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7ff14ec2c2e0" loc="110:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff14ec2c060" loc="110:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff14ec33770" loc="58:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff14ec30780" loc="87:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7ff14ec2cbd0" loc="117:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff14ec30020" loc="85:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff14ec32820" loc="73:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7ff14ec2d020" loc="99:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7ff14ec32020" loc="66:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff14ec378b0" loc="48:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7ff14ec2e020" loc="92:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7ff14ec2d7c0" loc="101:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7ff14ec2e7e0" loc="94:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff14ec33020" loc="53:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7ff14e9e8d30" loc="177:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9e8ab0" loc="177:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7ff14e9f2920" loc="88:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9f26a0" loc="88:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7ff14e9f7d50" loc="68:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ff14e9f4840" loc="78:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9f45c0" loc="78:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ff14e9ef360" loc="121:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9f1d30" loc="121:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff14e9ef0d0" loc="121:../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ff14e9f0d30" loc="103:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9f0750" loc="103:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff14e9f0aa0" loc="103:../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7ff14e9ec810" loc="147:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9ec590" loc="147:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7ff14e9eab90" loc="162:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9ea5e0" loc="162:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7ff14e9ea900" loc="162:../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff14ecf1d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ff14e9ee600" loc="136:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9ee380" loc="136:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7ff14e9e72f0" loc="187:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff14e9e9cf0" loc="187:../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7ff14e9e7060" loc="187:../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7ff14e9e6190" loc="195:../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ff14e9e3ad0" loc="59:../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9e3850" loc="59:../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ff14e9e1cd0" loc="71:../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9e1a50" loc="71:../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ff14e9e0020" loc="85:../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9e2ce0" loc="85:../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff14e9d25e0" loc="75:../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9d2020" loc="75:../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e9d2350" loc="75:../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff14e9cdbb0" loc="125:../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9cd5b0" loc="125:../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e9cd8e0" loc="125:../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff14e9d0d20" loc="112:../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff14e9cf900" loc="89:../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9cf680" loc="89:../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff14e9cee00" loc="100:../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9ce820" loc="100:../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff14e9ceb70" loc="100:../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff14e95e300" loc="78:../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
              <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e962860" loc="78:../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ff14e962bb0" loc="78:../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e95e020" loc="78:../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14e959790" loc="35:../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14e959790"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff14e9599d0" loc="35:../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e9599d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7ff14e955840" loc="63:../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e9599d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9555c0" loc="63:../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7ff14e9529d0" loc="70:../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e952750" loc="70:../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7ff14e9565f0" loc="49:../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e956370" loc="49:../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff14e950d00" loc="78:../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e9599d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e950710" loc="78:../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7ff14e950a70" loc="78:../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e9599d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7ff14e945e30" loc="65:../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e945810" loc="65:../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7ff14e945ba0" loc="65:../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7ff14e943020" loc="71:../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e944d70" loc="71:../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7ff14e945020" loc="57:../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7ff14e947560" loc="52:../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7ff14e9472e0" loc="52:../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7ff14e91d430" loc="95:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e91d1b0" loc="95:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7ff14e91f720" loc="81:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e91f4a0" loc="81:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7ff14e922dc0" loc="66:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ff14e922b40" loc="66:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7ff14e9222a0" loc="60:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ff14e922020" loc="60:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7ff14e920880" loc="73:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7ff14e920600" loc="73:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7ff14e91e5e0" loc="88:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e91e360" loc="88:../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7ff14e911e60" loc="59:../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7ff14e911850" loc="59:../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff14e911bd0" loc="59:../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7ff14e92c0c0" loc="56:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e92daa0" loc="56:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7ff14e92ddf0" loc="56:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7ff14e9286d0" loc="77:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e9280d0" loc="77:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7ff14e928440" loc="77:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7ff14e92cba0" loc="64:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7ff14fad8110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e92c920" loc="64:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7ff14e929600" loc="75:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e929380" loc="75:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7ff14e92d2a0" loc="47:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e92d020" loc="47:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7ff14e92a720" loc="72:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e92a4a0" loc="72:../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7ff14e915630" loc="65:../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9153b0" loc="65:../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7ff14e9196f0" loc="46:../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9190d0" loc="46:../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7ff14e919460" loc="46:../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7ff14e9165f0" loc="59:../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e916370" loc="59:../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7ff14e918af0" loc="53:../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9184d0" loc="53:../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7ff14e918860" loc="53:../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7ff14e914630" loc="71:../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e9143b0" loc="71:../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7ff14e9240b0" loc="47:../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e92edd0" loc="47:../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff14e8eb3a0" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e8efdc0" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7ff14e8eb110" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff14e8e96a0" loc="65:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7ff14e8e7e70" loc="84:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff14e8e7060" loc="84:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff14e8e78a0" loc="84:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e8e7bd0" loc="84:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff14e8e8840" loc="73:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff14e8e8260" loc="73:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff14e8e85b0" loc="73:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7ff14e8ebe30" loc="58:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7ff14e8ebbb0" loc="58:../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7ff14e8e20e0" loc="52:../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7ff14e8ec870" loc="46:../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ff14e8f5a40" loc="95:../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff14e8ed270" loc="105:../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7ff14e8dc2e0" loc="49:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e8dc020" loc="49:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7ff14e8de710" loc="42:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ff14ed2b720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ff14ed28090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e8de410" loc="42:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7ff14e8db620" loc="53:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ff14ed28b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ff14ed264f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14e8db320" loc="53:../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7ff14e8f36e0" loc="71:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7ff14e8f0840" loc="97:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7ff14e8f0070" loc="90:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7ff14e8f7e20" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7ff14e8f4e80" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7ff14e8f2020" loc="76:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7ff14e8f2840" loc="83:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7ff14e8f46c0" loc="56:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7ff14e8d6d00" loc="71:../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7ff14e8d7350" loc="56:../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7ff14e8d6530" loc="66:../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7ff14e8d62b0" loc="66:../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7ff14e8d7ac0" loc="61:../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7ff14e8d9020" loc="45:../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ff14e8e0c90" loc="45:../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7ff14e8d9ad0" loc="51:../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ff14e8d9850" loc="51:../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7ff14e87a870" loc="106:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7ff14e87a290" loc="106:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7ff14e87a5e0" loc="106:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7ff14e87b1f0" loc="93:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7ff14e87c880" loc="87:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7ff14e87c210" loc="87:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7ff14e87c5f0" loc="87:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7ff14e883c10" loc="55:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff14e883990" loc="55:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7ff14e87ba70" loc="98:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7ff14e87f730" loc="72:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ff14e87f4b0" loc="72:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7ff14e881d30" loc="61:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7ff14e881ab0" loc="61:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7ff14e879ae0" loc="117:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7ff14e87d9c0" loc="78:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ff14e87d740" loc="78:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7ff14e8792b0" loc="112:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7ff14e8804d0" loc="66:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ff14e941360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ff14e941ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7ff14e880cc0" loc="71:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7ff14e8831f0" loc="54:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7ff14e881390" loc="60:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7ff14e87d020" loc="77:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ff14e8764b0" loc="49:../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff14e8764b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ff14e876d70" loc="55:../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff14e873ae0" loc="63:../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff14e8764b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff14e873530" loc="63:../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ff14e873850" loc="63:../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff14e8764b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff14e849c10" loc="55:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e849990" loc="55:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff14e848710" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e848490" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7ff14e869c50" loc="48:../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ff14e941360"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ff14e941ac0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14e865020" loc="56:../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14e865020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff14e865260" loc="56:../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ff14e861e00" loc="109:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff14e864e40" loc="78:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7ff14e861460" loc="103:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff14e862e60" loc="103:../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7ff14e8611d0" loc="103:../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ff14e862640" loc="88:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7ff14e860620" loc="116:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff14e865dc0" loc="66:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff14e865b40" loc="66:../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e865260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff14e864680" loc="73:../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7ff14e852560" loc="50:../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7ff14e8504f0" loc="60:../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7ff14e852d40" loc="55:../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7ff14e853cd0" loc="45:../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7ff14e8536f0" loc="45:../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff14ecef180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7ff14e853a40" loc="45:../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff14ecef560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7ff14e845e40" loc="53:../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff14e84ee80" loc="52:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff14e84e020" loc="52:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ff14e84e890" loc="52:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e84ebe0" loc="52:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff14e84c610" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff14e84d770" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ff14e84c020" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e84c370" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff14e855c30" loc="68:../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff14e855470" loc="61:../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7ff14e856ce0" loc="54:../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7ff14e856420" loc="53:../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14e7404f0" loc="57:../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14e7404f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff14e740730" loc="57:../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e740730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ff14e73f070" loc="64:../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e740730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff14e73e190" loc="76:../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff14e73f8f0" loc="71:../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ff14e73e8f0" loc="82:../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7ff14e675020" loc="54:../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff14e6741f0" loc="66:../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ff14e6759c0" loc="61:../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff14e675740" loc="61:../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7ff14e677770" loc="53:../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff14e652020" loc="52:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff14e651ac0" loc="72:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff14e6537c0" loc="47:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7ff14e6512a0" loc="67:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7ff14e651020" loc="67:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7ff14e653020" loc="42:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7ff14e652820" loc="59:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7ff14e53f270" loc="24:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7ff14e53fac0" loc="31:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7ff14e53e350" loc="39:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7ff14e518b60" loc="62:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e518580" loc="62:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e5188d0" loc="62:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7ff14e513dd0" loc="91:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e513490" loc="91:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e5137e0" loc="91:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff14e513b30" loc="91:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff14e5146b0" loc="82:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e5140d0" loc="82:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e514420" loc="82:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7ff14e519730" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff14ed3a8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e519150" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e5194a0" loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff14e5152c0" loc="71:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e516930" loc="71:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff14e516c80" loc="71:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff14e515020" loc="71:../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff14e4f8df0" loc="76:../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ff14e4f8480" loc="76:../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ff14e4f8810" loc="76:../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e4f8b50" loc="76:../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff14e4f43c0" loc="88:../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ff14e4f56a0" loc="88:../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ff14e4f5a30" loc="88:../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e4f5d70" loc="88:../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff14e4f4110" loc="89:../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7ff14e4fdc90" loc="45:../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7ff14e4fda10" loc="45:../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7ff14e4186f0" loc="53:../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ff14e417070" loc="61:../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7ff14e410710" loc="39:../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff14e44c020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff14e44c440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7ff14e4152a0" loc="62:../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e415020" loc="62:../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7ff14e413680" loc="74:../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e413400" loc="74:../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7ff14e415b10" loc="68:../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff14e4122a0" loc="81:../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e412020" loc="81:../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7ff14e400ca0" loc="65:../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7ff14e400480" loc="59:../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7ff14e3f82a0" loc="54:../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e3f8020" loc="54:../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7ff14e3f9780" loc="49:../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7ff14e3d5af0" loc="213:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7ff14e3e0790" loc="143:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7ff14e3ed610" loc="50:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e468080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff14e4688c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff14e3ed390" loc="50:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e468080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff14e4688c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7ff14e3e3870" loc="123:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7ff14e3eaa90" loc="70:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e463080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff14e4638c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff14e3ea810" loc="70:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e463080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff14e4638c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7ff14e3dae70" loc="180:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7ff14e3d6480" loc="197:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7ff14e3ea070" loc="65:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e466020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff14e4667b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7ff14e3e92b0" loc="75:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e463080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff14e4638c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7ff14e3e5020" loc="97:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7ff14e3e6d30" loc="97:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7ff14e3e6610" loc="95:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7ff14e3da740" loc="179:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7ff14e3eb840" loc="60:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e466020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff14e4667b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff14e3eb5c0" loc="60:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e466020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff14e4667b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7ff14e3e8420" loc="85:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7ff14e3d85d0" loc="181:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7ff14e3e8e00" loc="90:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7ff14e3e8b80" loc="90:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7ff14e3e4910" loc="113:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7ff14e3e30e0" loc="118:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7ff14e3db840" loc="177:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7ff14e3dd790" loc="163:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7ff14e3e17e0" loc="133:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7ff14e3da020" loc="178:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7ff14e3df020" loc="148:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7ff14e3d8cf0" loc="182:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ff14e3e5800" loc="103:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ff14e46edc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7ff14e46a680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7ff14e3d74c0" loc="187:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7ff14e3d5350" loc="207:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7ff14e3e9c50" loc="80:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7ff14e3e99d0" loc="80:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7ff14e3d34d0" loc="224:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e3d3250" loc="224:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7ff14e3eddf0" loc="55:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14e468080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff14e4688c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7ff14e3e1020" loc="128:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7ff14e3df770" loc="153:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7ff14e3db020" loc="174:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff14e43ae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff14e4392b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14e3dccf0" loc="174:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff14e43ae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff14e4392b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7ff14e3dc2a0" loc="168:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff14e44c020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff14e44c440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14e3dc020" loc="168:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff14e44c020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff14e44c440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7ff14e3d3d90" loc="231:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7ff14e3d7cb0" loc="192:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7ff14e3e4070" loc="108:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7ff14e3d6be0" loc="202:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7ff14e3dd020" loc="158:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7ff14e3e0020" loc="138:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff14e36c600" loc="39:../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7ff14e345070" loc="80:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7ff14e358b10" loc="31:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7ff14e34cd50" loc="62:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff14e34cad0" loc="62:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7ff14e35f270" loc="11:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7ff14e348350" loc="71:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7ff14e351cf0" loc="49:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7ff14e359c50" loc="28:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7ff14e3569c0" loc="34:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ff14e35ac00" loc="25:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ff14e35a980" loc="25:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7ff14e35c120" loc="21:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7ff14e354790" loc="41:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7ff14e34bc80" loc="66:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7ff14e3468f0" loc="78:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7ff14e34c390" loc="61:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7ff14e341b60" loc="91:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7ff14e33c270" loc="100:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7ff14e35e0e0" loc="14:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7ff14e354020" loc="38:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7ff14e353910" loc="45:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7ff14e359500" loc="27:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7ff14e361020" loc="7:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7ff14e34eba0" loc="58:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff14e34e920" loc="58:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7ff14e3647e0" loc="6:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7ff14e34ab80" loc="69:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7ff14e3457d0" loc="81:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7ff14e33e350" loc="94:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7ff14e33da90" loc="97:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7ff14e347270" loc="74:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7ff14e343020" loc="83:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7ff14e34b520" loc="65:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7ff14e342bb0" loc="87:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7ff14e35e800" loc="15:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7ff14e34f020" loc="53:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7ff14e342020" loc="86:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7ff14e346190" loc="77:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7ff14e351520" loc="46:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7ff14e3512a0" loc="46:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7ff14e33eaf0" loc="95:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7ff14e34e1f0" loc="57:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7ff14e348ac0" loc="72:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7ff14e361aa0" loc="8:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff14e426b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ff14e424020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14e361820" loc="8:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff14e426b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ff14e424020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7ff14e355870" loc="37:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7ff14e35d980" loc="19:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff14e35d700" loc="19:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7ff14e353120" loc="42:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14e354e70" loc="42:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7ff14e3413b0" loc="90:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7ff14e35a270" loc="24:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7ff14e35d020" loc="18:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7ff14e34f9e0" loc="54:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7ff14e34f760" loc="54:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7ff14e35f9a0" loc="12:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7ff14e343740" loc="84:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7ff14e3479e0" loc="75:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7ff14e34a420" loc="68:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7ff14e350740" loc="50:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7ff14e3504c0" loc="50:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7ff14e355120" loc="35:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7ff14e3583b0" loc="29:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7ff14e33d2b0" loc="96:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7ff14e35caa0" loc="22:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff14e35c820" loc="22:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7ff14e340350" loc="92:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7ff14e356270" loc="32:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7ff14e340b10" loc="93:../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7ff14e29f780" loc="90:../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7ff14e29e020" loc="98:../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ff14e269900" loc="56:../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7ff14e268a20" loc="73:../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ff14e269070" loc="46:../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ff14e2681f0" loc="65:../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ff14e267390" loc="81:../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7ff14e25cb50" loc="79:../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff14e265b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff14e25c8d0" loc="79:../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff14e265b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7ff14e261b80" loc="53:../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7ff14e25e6b0" loc="62:../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff14e265b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff14e25e430" loc="62:../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff14e265b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7ff14e25c020" loc="70:../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7ff14e265b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff14e0585e0" loc="13:../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff14e058360" loc="13:../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff14e044b00" loc="10:../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7ff14e0441c0" loc="10:../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff14e044530" loc="10:../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e044860" loc="10:../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff14e043880" loc="11:../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff14e0432c0" loc="11:../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff14e0435f0" loc="11:../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14e02a530" loc="59:../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14e02a530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff14e02a770" loc="59:../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e02a770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7ff14e0292e0" loc="66:../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e02a770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff14e029060" loc="66:../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff14e02a770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7ff14dfc6580" loc="43:../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff14df969e0" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ff14df96020" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7ff14df96750" loc="63:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7ff14df977f0" loc="55:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7ff14df97020" loc="49:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff14df9ad30" loc="49:../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7ff14dfab3d0" loc="58:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14dfab150" loc="58:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7ff14dfad3d0" loc="50:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14dfad150" loc="50:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff14dfa9350" loc="72:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14dfa90d0" loc="72:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff14dfaa390" loc="65:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff14dfaa110" loc="65:../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff14ece0800"/>
                <typename><typedef-ref name="message_t" ref="0x7ff14ecdfe40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff14de33910" loc="53:../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff14de33910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ff14de30270" loc="61:../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff14fad7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7ff14dca15e0" loc="53:../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff14dca15e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7ff14dc9e2a0" loc="64:../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff14dca15e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7ff14dc9e020" loc="64:../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff14dca15e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7ff14dac8df0" loc="189:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7ff14dad1aa0" loc="84:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14dad1820" loc="84:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7ff14dace020" loc="106:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14dacf990" loc="106:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7ff14dacfd00" loc="106:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7ff14dac9a70" loc="177:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14daca7e0" loc="177:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7ff14dac90d0" loc="177:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff14dac9450" loc="177:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7ff14dac97c0" loc="177:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7ff14dac4770" loc="227:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7ff14dac40d0" loc="227:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff14dac4460" loc="227:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7ff14dacc3c0" loc="138:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff14dacd150" loc="138:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff14ecac020"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff14ecad610"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7ff14dacd9f0" loc="138:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff14dacdd80" loc="138:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7ff14dacc110" loc="138:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7ff14dac7ad0" loc="206:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff14dac7850" loc="206:../../..//tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7ff14dac12b0" loc="49:../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7ff14dac1ad0" loc="54:../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../..//tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../..//tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../..//tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ff14dab57b0" loc="95:../../..//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../..//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff14dab4030" loc="105:../../..//tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../..//tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff14f3a3c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7ff14daa72d0" loc="63:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ec9a5f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7ff14ec99090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7ff14daa53f0" loc="82:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14ecacd30"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7ff14ecab230"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ff14daa5170" loc="82:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7ff14daa2b10" loc="106:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7ff14da9fd70" loc="118:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff14f3ac090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7ff14da9f5b0" loc="112:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7ff14da9f330" loc="112:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7ff14daa7af0" loc="68:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ec98710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7ff14ec96020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7ff14daa68d0" loc="75:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14ecacd30"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7ff14ecab230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ff14daa6280" loc="75:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7ff14daa6640" loc="75:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff14ecacd30"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7ff14ecab230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7ff14da9ee00" loc="128:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7ff14daa9020" loc="51:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ec9a5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7ff14ec99090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7ff14daacd60" loc="51:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ec9a5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7ff14ec99090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7ff14daa4020" loc="89:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ff14daa5c40" loc="89:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff14fad7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7ff14daa4aa0" loc="95:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7ff14daa4820" loc="95:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7ff14daa2350" loc="101:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff14fad7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7ff14da9e570" loc="123:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7ff14da9d5d0" loc="133:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7ff14daa9a80" loc="57:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ec98710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7ff14ec96020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7ff14daa9800" loc="57:../../..//tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff14ec98710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7ff14ec96020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
