<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9bbbefec40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9bbc0d80d0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9bbc0d80d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9bbbf1a590"/></to>
    </wire>
    <wire loc="20:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9bbbe988f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9bbabb5020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9bbabb5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9bba6aea40"/></to>
    </wire>
    <wire loc="21:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f9bbbe7c7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9bbba24140"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9bbba24140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9fb880"/></to>
    </wire>
    <wire loc="22:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbbef2590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="51:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd1f2a0"/></to>
    </wire>
    <wire loc="23:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f9bbbe8b9e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbab9d5a0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbab9d5a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbadc52c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f9bbbe87020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbab96020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbab96020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbadc52c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbbe725f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbabb5c30"/></to>
    </wire>
    <wire loc="32:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbbe725f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbaba8020"/></to>
    </wire>
    <wire loc="33:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbbe725f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbaba4780"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbaba4780"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbba21630"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbaba8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbba21630"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbabb5c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bba6ad720"/></to>
    </wire>
    <wire loc="30:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="R_A" scoped="" ref="0x7f9bbbe94220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbabaf910"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbabaf910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbba223f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="R_B" scoped="" ref="0x7f9bbbe948e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbaba41b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbaba41b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbba223f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbab8c610"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f9bbbc9b200"/></to>
    </wire>
    <wire loc="493:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f9bbbc9b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb6d100"/></to>
    </wire>
    <wire loc="38:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f9bbbe6d1d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbab8d390"/></to>
    </wire>
    <wire loc="41:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbab877a0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f9bbbc99200"/></to>
    </wire>
    <wire loc="494:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f9bbbc99200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb68d10"/></to>
    </wire>
    <wire loc="42:ReceivingBuffer_AppC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f9bbbe7b510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbab885b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbac99dd0"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbad22b70"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbad41750"/></to>
    </wire>
    <wire loc="52:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbad5e080"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbae97130"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbaf98620"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbb086c60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbb87f7e0"/></to>
    </wire>
    <wire loc="103:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bba49b140"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbb549020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbb92f4a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9bbbf1ac00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9bbc5753a0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9bbc5753a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9bbc120140"/></to>
    </wire>
    <wire loc="68:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9bbbf0d6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbc0da560"/></to>
    </wire>
    <wire loc="48:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbc0da560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbc0d5770"/></to>
    </wire>
    <wire loc="71:../../../..//tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbbf0ddc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></to>
    </wire>
    <wire loc="49:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f9bbc0d5e80"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f9bbc0d2be0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f9bbc0d2be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbc0b3b60"/></to>
    </wire>
    <wire loc="50:../../../..//tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9bbc0d1580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbc0d4a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f9bbc0d1c60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbbcfcdd0"/></to>
    </wire>
    <wire loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbc0b3b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbc09a940"/></to>
    </wire>
    <wire loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f9bbc0a92c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f9bbc099020"/></to>
    </wire>
    <wire loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9bbc1f84c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9bbc098360"/></to>
    </wire>
    <wire loc="113:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f9bbc0555a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf926d0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f9bbc043020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf8bb30"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f9bbc04c700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf98160"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f9bbc030a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf71cb0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f9bbc053aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf99480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f9bbc036020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf71020"/></to>
    </wire>
    <wire loc="170:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f9bbc02da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf5acb0"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f9bbc03d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf6b220"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f9bbc056b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbfe89d0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f9bbc032a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf802f0"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f9bbc0383e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf81610"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f9bbc0425a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf82220"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f9bbc04b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf907a0"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f9bbc02fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf692f0"/></to>
    </wire>
    <wire loc="140:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f9bbc041be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf7b6d0"/></to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f9bbc052890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf91ac0"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f9bbc066060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbff6540"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f9bbc036da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf6a610"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f9bbc05c0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf9a020"/></to>
    </wire>
    <wire loc="161:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f9bbc03ca50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf636d0"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f9bbc0466d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbfa0a90"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f9bbc031a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf797a0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f9bbc04ecf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbfa1de0"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f9bbc0371f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf7aac0"/></to>
    </wire>
    <wire loc="163:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f9bbc02ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf617a0"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f9bbc03e0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf73b30"/></to>
    </wire>
    <wire loc="120:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="162:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f9bbc035b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf62ac0"/></to>
    </wire>
    <wire loc="128:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f9bbc033a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbbf89cb0"/></to>
    </wire>
    <wire loc="169:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f9bbc034a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf5a020"/></to>
    </wire>
    <wire loc="127:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f9bbc039570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9bbbf89020"/></to>
    </wire>
    <wire loc="168:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f9bbc03a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f9bbbf5cb30"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f9bbbff4450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbff5d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f9bbbff4aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f9bbbf54a90"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f9bbbff2120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f9bbbf51260"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf9f930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbff6540"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf9d020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbff5d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf97020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbff6540"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf957a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbff5d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf8f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbff6540"/></to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf8ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbff5d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f9bbbfec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f9bbbfec940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f9bbbf519f0"/></to>
    </wire>
    <wire loc="123:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f9bbbfeb020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f9bbbf50240"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf88b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf852f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf7f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf7e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf78610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="144:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf77c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf70b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf6e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf68160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf677a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf60610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="165:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf5fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbbf59b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></to>
    </wire>
    <wire loc="172:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f9bbbf572f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc11e040"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9bbc11a490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9bbc50c3b0"/></to>
    </wire>
    <wire loc="60:ReceivingBufferC.nc">
      <from><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f9bbbe64db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:ReceivingBufferC.nc">
      <from><interface-ref name="updateSchedule" scoped="" ref="0x7f9bbbe60020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:ReceivingBufferC.nc">
      <from><interface-ref name="initializeFlow" scoped="" ref="0x7f9bbbe65e70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:ReceivingBufferC.nc">
      <from><interface-ref name="initializeSchedule" scoped="" ref="0x7f9bbbe62100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:ReceivingBufferC.nc">
      <from><interface-ref name="initializeCluster" scoped="" ref="0x7f9bbbe5e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:ReceivingBufferC.nc">
      <from><interface-ref name="PermutateCipher" scoped="" ref="0x7f9bbbe61020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbbcfcdd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbbd22c40"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9bbbd1ea00"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f9bbbd205a0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9bbbd205a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbbae3020"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9bbbd1dca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9bbbcfe830"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9bbbcfe830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbbacfb90"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9bbbd1b020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f9bbbcfdb50"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9bbbcfdb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbbaca710"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbbad22f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f9bbbca3200"/></to>
    </wire>
    <wire loc="486:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f9bbbca3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb80740"/></to>
    </wire>
    <wire loc="62:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbbacede0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f9bbbca1200"/></to>
    </wire>
    <wire loc="487:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f9bbbca1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb7b100"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbbac9930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f9bbbc9f200"/></to>
    </wire>
    <wire loc="488:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f9bbbc9f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb77d10"/></to>
    </wire>
    <wire loc="442:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f9bbbce5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc19100"/></to>
    </wire>
    <wire loc="455:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f9bbbcd0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbead10"/></to>
    </wire>
    <wire loc="531:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f9bbbc87560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbdcd10"/></to>
    </wire>
    <wire loc="551:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f9bbbc62570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb50100"/></to>
    </wire>
    <wire loc="532:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f9bbbc85580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbd6740"/></to>
    </wire>
    <wire loc="460:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f9bbbccc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbe0100"/></to>
    </wire>
    <wire loc="473:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f9bbbcb8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbb0e00"/></to>
    </wire>
    <wire loc="497:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f9bbbc93200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb5ad10"/></to>
    </wire>
    <wire loc="535:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f9bbbc7f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbcdd10"/></to>
    </wire>
    <wire loc="545:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f9bbbc6e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb6d100"/></to>
    </wire>
    <wire loc="557:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f9bbbc5a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb4cd10"/></to>
    </wire>
    <wire loc="445:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f9bbbcdf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc0b100"/></to>
    </wire>
    <wire loc="536:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f9bbbc7d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbc8740"/></to>
    </wire>
    <wire loc="450:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f9bbbcdb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc02740"/></to>
    </wire>
    <wire loc="463:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f9bbbcc6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbd1100"/></to>
    </wire>
    <wire loc="476:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f9bbbcb2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbba2d10"/></to>
    </wire>
    <wire loc="489:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f9bbbc9d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb72740"/></to>
    </wire>
    <wire loc="500:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f9bbbc8d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb4cd10"/></to>
    </wire>
    <wire loc="440:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f9bbbce9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc23d10"/></to>
    </wire>
    <wire loc="453:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f9bbbcd5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbf3860"/></to>
    </wire>
    <wire loc="466:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f9bbbcc0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbc3100"/></to>
    </wire>
    <wire loc="530:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f9bbbc89580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbdcd10"/></to>
    </wire>
    <wire loc="548:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f9bbbc68570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb5e100"/></to>
    </wire>
    <wire loc="555:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f9bbbc5c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb4cd10"/></to>
    </wire>
    <wire loc="541:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f9bbbc75580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb85d10"/></to>
    </wire>
    <wire loc="471:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f9bbbcbc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbbaa60"/></to>
    </wire>
    <wire loc="484:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f9bbbca8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb89100"/></to>
    </wire>
    <wire loc="495:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f9bbbc97200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb63740"/></to>
    </wire>
    <wire loc="549:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f9bbbc66570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb5ad10"/></to>
    </wire>
    <wire loc="538:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f9bbbc7b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb94d10"/></to>
    </wire>
    <wire loc="443:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f9bbbce3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc15d10"/></to>
    </wire>
    <wire loc="456:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f9bbbcce020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbe5740"/></to>
    </wire>
    <wire loc="461:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f9bbbcca020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbdcd10"/></to>
    </wire>
    <wire loc="474:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f9bbbcb6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbab740"/></to>
    </wire>
    <wire loc="498:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f9bbbc91200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb55740"/></to>
    </wire>
    <wire loc="540:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f9bbbc77580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb89100"/></to>
    </wire>
    <wire loc="438:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f9bbbcf6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc2d6d0"/></to>
    </wire>
    <wire loc="451:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f9bbbcd9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbfc100"/></to>
    </wire>
    <wire loc="464:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f9bbbcc4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbcdd10"/></to>
    </wire>
    <wire loc="477:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f9bbbcb0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb9d740"/></to>
    </wire>
    <wire loc="542:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f9bbbc72580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbc3100"/></to>
    </wire>
    <wire loc="546:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f9bbbc6c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb68d10"/></to>
    </wire>
    <wire loc="552:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f9bbbc60570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb4cd10"/></to>
    </wire>
    <wire loc="482:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f9bbbcac200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb94d10"/></to>
    </wire>
    <wire loc="543:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f9bbbc70580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbbfd10"/></to>
    </wire>
    <wire loc="441:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f9bbbce7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc1e740"/></to>
    </wire>
    <wire loc="454:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f9bbbcd2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbee270"/></to>
    </wire>
    <wire loc="467:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f9bbbcbe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbbfd10"/></to>
    </wire>
    <wire loc="539:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f9bbbc79580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb8e740"/></to>
    </wire>
    <wire loc="550:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f9bbbc64570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb55740"/></to>
    </wire>
    <wire loc="472:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f9bbbcba200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbb4460"/></to>
    </wire>
    <wire loc="485:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f9bbbca6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb85d10"/></to>
    </wire>
    <wire loc="496:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f9bbbc95200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb5e100"/></to>
    </wire>
    <wire loc="444:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f9bbbce1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc10740"/></to>
    </wire>
    <wire loc="449:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f9bbbcdd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc07d10"/></to>
    </wire>
    <wire loc="462:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f9bbbcc8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbd6740"/></to>
    </wire>
    <wire loc="475:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f9bbbcb4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbba6100"/></to>
    </wire>
    <wire loc="499:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f9bbbc8f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb50100"/></to>
    </wire>
    <wire loc="439:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f9bbbceb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbc28100"/></to>
    </wire>
    <wire loc="452:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f9bbbcd7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbf8d10"/></to>
    </wire>
    <wire loc="465:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f9bbbcc2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbc8740"/></to>
    </wire>
    <wire loc="478:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f9bbbcae200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb98100"/></to>
    </wire>
    <wire loc="534:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f9bbbc81560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbd1100"/></to>
    </wire>
    <wire loc="547:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f9bbbc6a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb63740"/></to>
    </wire>
    <wire loc="533:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f9bbbc83580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbd1100"/></to>
    </wire>
    <wire loc="483:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f9bbbcaa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb8e740"/></to>
    </wire>
    <wire loc="554:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f9bbbc5e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb50100"/></to>
    </wire>
    <wire loc="558:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f9bbbc58580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbb72740"/></to>
    </wire>
    <wire loc="529:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f9bbbc8b1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9bbbbe0100"/></to>
    </wire>
    <wire loc="63:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9bba6aea40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9bba6a1a20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bba6ad720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbba21630"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bbabb48b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bba6ac400"/></to>
    </wire>
    <wire loc="65:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bba6ac400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f9bbabb2020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f9bba6aba80"/></to>
    </wire>
    <wire loc="66:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f9bba6aba80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbba1f990"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbba21630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbb9f5760"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbb9f6020"/></to>
    </wire>
    <wire loc="85:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbba1f990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9f3810"/></to>
    </wire>
    <wire loc="60:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bba69f780"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbba7a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bba69e400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bbba7a940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbba2e4b0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9bbba2d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9bbba231d0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9bbba231d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9bbb9fa980"/></to>
    </wire>
    <wire loc="55:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba2c060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbba2b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbba21630"/></to>
    </wire>
    <wire loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f9bbba2a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f9bbba2ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9fb880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9d7b70"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f9bbb9fa980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f9bbac5b020"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f9bbba21020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f9bbb9f7900"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f9bbb9f7900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f9bbac5adf0"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f9bbb9f5760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f9bbac58a80"/></to>
    </wire>
    <wire loc="89:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbba19cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf13550"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf13550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf05a80"/></to>
    </wire>
    <wire loc="86:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbba08b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbb9eabb0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbb9eabb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbb9c5700"/></to>
    </wire>
    <wire loc="81:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbba223f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbb9f9cb0"/></to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbb9f9cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbac5a210"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9f3810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9c6670"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bbb9f6020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbac59470"/></to>
    </wire>
    <wire loc="90:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbba13dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbaf0f660"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbaf0f660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbaf01af0"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9d7b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9bbac8cb80"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9e1d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbac558b0"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f9bbb9d4d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f9bbac57ce0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9ec970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9c7670"/></to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9c7670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbb9c5700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbac8c080"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9c6670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f9bbaf156e0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f9bbb9df020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f9bbb9c42e0"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f9bbb9c42e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f9bbac78020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbb9e8a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbb9c5080"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbb9c5080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbaf14a70"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f9bbac4d0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb9d0210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbac54860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbb9c9170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbb9c9170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbacf5c90"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9bbac53690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbb9c7020"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbb9c7020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbacf4a50"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbac4f4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbb13fb30"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbac53ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf0ad20"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbac52b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf06640"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbac51610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbb939b80"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbb939b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbb92e970"/></to>
    </wire>
    <wire loc="106:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f9bbac4e1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9bf990"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9bf990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9b9020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbac4dd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9bbac8cb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f9bbac89d90"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbaf14a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbaf05020"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f9bbac78020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f9bbac76410"/></to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbacf5c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbaceba20"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbac8c080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbac852d0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f9bbb9cfd30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbacf55e0"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbacf55e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f9bbaceb370"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f9bbaf156e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f9bbaf07c50"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb9d0210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbacf8be0"/></to>
    </wire>
    <wire loc="96:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbacf8be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbaced7b0"/></to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f9bbb9cf020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbacf78e0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bbacf78e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f9bbacec4d0"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f9bbb9ca420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f9bbacf3170"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f9bbacf3170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f9bbace8020"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbacf4a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbace9840"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f9bbac89d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9c39f0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9c39f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9bb690"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbacf26b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbad47220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bbad47220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbad44a20"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbad46020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbac7b350"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bbac7b350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f9bbac78d70"/></to>
    </wire>
    <wire loc="103:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbac78d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbac91ce0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bbac91ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f9bbac8a860"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbac8a860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbb9c0600"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f9bbb9c0600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbb9ba2e0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9bbacf2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbac8e980"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbac8e980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9bbac89690"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9bbac89690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbad2aaa0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbad2aaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbad26e30"/></to>
    </wire>
    <wire loc="109:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9bbad27950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbb9bf300"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbb9bf300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbaf9c7c0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f9bbaf9c7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f9bbaf95020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb9b9e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb949720"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb949720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb92fb10"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb9b03f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb944a60"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb944a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb92c740"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f9bbb9b6020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9bbb0976c0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f9bbb9b6020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9bbaf9f5c0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f9bbaf9f5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9bbaf98ca0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f9bbb0976c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9bbb085320"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f9bbb9a6d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f9bbb093020"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f9bbb093020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f9bbb085bc0"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f9bbb9afae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb093cb0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb093cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb084970"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9a2020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbb99b660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f9bbb9a5020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f9bbad68a20"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f9bbad68a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f9bbad5da20"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f9bbb996e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbad6aaa0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f9bbad6aaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbb54d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbb9a57f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f9bbb9919e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f9bbb992a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f9bbb993a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f9bbb936020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f9bbb92bb40"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f9bbb91fd90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb87c220"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb87c220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb876d20"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f9bbb91c060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f9bbb777e60"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f9bbb777e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb76ab60"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f9bbb91b380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f9bbb7736a0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f9bbb7736a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb75bd70"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f9bbb91a6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f9bbb771ce0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f9bbb771ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb751710"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f9bbb9180e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f9bbb737d60"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f9bbb737d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f9bbb61ba30"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f9bbb9021d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb1cae20"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb1cae20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f9bbb9012b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f9bbb1c77b0"/></to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f9bbb1c77b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb9019c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb1c6ae0"/></to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb1c6ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb903a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb1c8ad0"/></to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb1c8ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb903120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb1c5160"/></to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb1c5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb908b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb1bc870"/></to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb1bc870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb90f3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb1ba880"/></to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb1ba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb90fc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb1b90a0"/></to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb1b90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb90a5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb1c1e50"/></to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb1c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb906020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb1c0670"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb1c0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f9bbb914520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f9bbb1ac500"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f9bbb1ac500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb90ba90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb1adce0"/></to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb1adce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb9068e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb1bde50"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb1bde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f9bbb9051c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f9bbb1c0e50"/></to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f9bbb1c0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb905a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb1bfe50"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb1bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f9bbb900d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb198a80"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb198a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f9bbb900020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb16b9e0"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb16b9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbb910810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbb13fb30"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb928020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb13ed30"/></to>
    </wire>
    <wire loc="23:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb13ed30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb122310"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f9bbb8f5820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f9bbb8f6940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbb87f7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbb876490"/></to>
    </wire>
    <wire loc="51:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbb876490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bba63a590"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb876d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba63ade0"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bba63a590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bba632640"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9bba63ade0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba62b1d0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bba632640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bba602340"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f9bba611b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba631020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9bba631020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba602bd0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bba614690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbb802020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bbb802020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbb7c60f0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba5fedd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba609e70"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba609e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba5fc440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba6065d0"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba6065d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba5fb760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba6058f0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba6058f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f9bbc043020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f9bbc039570"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f9bbc041be0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f9bbc0371f0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f9bbc03e0c0"/></to>
    </wire>
    <wire loc="72:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f9bbc036020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="75:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f9bbc03d5a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f9bbc036da0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f9bbc03ca50"/></to>
    </wire>
    <wire loc="80:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f9bbc035b80"/></to>
    </wire>
    <wire loc="82:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f9bbc03a020"/></to>
    </wire>
    <wire loc="84:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f9bbc034a20"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f9bbb7c3540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f9bbb7f9020"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f9bbb7f9020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbb7f40a0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb7e52c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></to>
    </wire>
    <wire loc="73:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f9bbb775090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb764710"/></to>
    </wire>
    <wire loc="74:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f9bbb774390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb75f1d0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f9bbb77ac70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb76e020"/></to>
    </wire>
    <wire loc="76:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f9bbb7729b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb756b60"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb76d2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f9bbbce5020"/></to>
    </wire>
    <wire loc="64:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb769de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f9bbbcb8200"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb763930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f9bbbce7020"/></to>
    </wire>
    <wire loc="66:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb75e480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f9bbbcf6020"/></to>
    </wire>
    <wire loc="67:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb759020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f9bbbcb0200"/></to>
    </wire>
    <wire loc="68:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb755de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f9bbbcba200"/></to>
    </wire>
    <wire loc="69:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb750930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f9bbbcb2200"/></to>
    </wire>
    <wire loc="63:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f9bbb737150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f9bbb730a20"/></to>
    </wire>
    <wire loc="65:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f9bbb736a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f9bbb60ca70"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb71e5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f9bbc0425a0"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f9bbb71d8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f9bbc032a20"/></to>
    </wire>
    <wire loc="55:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb71c7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f9bbbcba200"/></to>
    </wire>
    <wire loc="60:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f9bbb61a610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f9bbb70d8a0"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f9bbb70d8a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f9bbb6f98a0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f9bbb60b610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f9bbb70f8f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f9bbb70f8f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f9bbb6ff810"/></to>
    </wire>
    <wire loc="82:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f9bbb703a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f9bbb6efa30"/></to>
    </wire>
    <wire loc="73:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f9bbb70a8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f9bbb6f68a0"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f9bbb7088a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f9bbb6f48a0"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f9bbb7138a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f9bbb6fb8a0"/></to>
    </wire>
    <wire loc="80:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f9bbb7058a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f9bbb6f18a0"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f9bbb70c8a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f9bbb6f88a0"/></to>
    </wire>
    <wire loc="83:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f9bbb702a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f9bbb6eea30"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f9bbb7078a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f9bbb6f38a0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f9bbb70e8a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f9bbb6fa8a0"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f9bbb704a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f9bbb6f0a30"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f9bbb70b8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f9bbb6f78a0"/></to>
    </wire>
    <wire loc="76:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f9bbb7098a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f9bbb6f58a0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f9bbb7148a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f9bbb6fc8a0"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f9bbb7068a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f9bbb6f28a0"/></to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f9bbb1c7160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb1bb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f9bbb1b30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f9bbb1ba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbb1a5500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbb1a9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb1c6490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f9bbb1af880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb1ab500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbb1b5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f9bbb1b60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb1c9a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5c5920"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb1c5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f9bbb1c3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbb1aec80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbb1c3be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbb1abce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f9bbb1af0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbb1bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbb1b10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f9bbb1b3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbb1b1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb1a6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbb1a9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f9bbb1b6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f9bbb1b20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbb1acce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbb1b9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbb1a5ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbb1c8480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f9bbb1c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbb1bd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbb1b40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbb1b4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb1bb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbb1c22f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f9bbb1c1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbb1c57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbb1ad500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f9bbb1a6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbb1b50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f9bbb1b2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f9bbb1c7e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbb1b80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f9bbb1c2940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f9bbb1b8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f9bbb1ae0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb1a49b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5c1bb0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5bf020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5bfdb0"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb5c2810"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5beba0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f9bbb5b9020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbb551770"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f9bbb551770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbb54d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f9bbb5bc400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb530c40"/></to>
    </wire>
    <wire loc="52:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb530c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bba521c30"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb5ba080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb52f8f0"/></to>
    </wire>
    <wire loc="53:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb52f8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9bba51e0c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb5b1680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb1f0020"/></to>
    </wire>
    <wire loc="54:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb1f0020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f9bba51d2b0"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbb5b9df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f9bbb5ac120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f9bbb54d280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbb549b70"/></to>
    </wire>
    <wire loc="110:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f9bba51d2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb4c6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9bba51e0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb4cadd0"/></to>
    </wire>
    <wire loc="105:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bba521c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb4d0a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba51f8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba5152c0"/></to>
    </wire>
    <wire loc="64:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba5152c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bbb3538a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb4cadd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb44e440"/></to>
    </wire>
    <wire loc="108:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bba51e6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bbb4c9480"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bbb4c9480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bbb44ea50"/></to>
    </wire>
    <wire loc="111:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bbb4c4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bba51da50"/></to>
    </wire>
    <wire loc="115:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bba507760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb4ca5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f9bbb4c5370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bba516640"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bba516640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb3545c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f9bbb4c06a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f9bba50fc10"/></to>
    </wire>
    <wire loc="67:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f9bba50fc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb358a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb4ca5e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb44fc40"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb4c6510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb44d700"/></to>
    </wire>
    <wire loc="88:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb4d0a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb450e80"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bbb44ce00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bbb4c4600"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f9bbb44c060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f9bbb4c5370"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f9bbb446de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f9bbb4c06a0"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f9bbb44a490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f9bbb43e860"/></to>
    </wire>
    <wire loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f9bbb43e860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f9bbb432020"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbb4455a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f9bbb444c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f9bbb4348a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb42d750"/></to>
    </wire>
    <wire loc="86:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f9bbb4373b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb42edc0"/></to>
    </wire>
    <wire loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f9bbb3fe700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f9bbbc89580"/></to>
    </wire>
    <wire loc="91:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f9bbb3fc670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f9bbbc85580"/></to>
    </wire>
    <wire loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f9bbb3fa670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f9bbbc83580"/></to>
    </wire>
    <wire loc="93:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f9bbb3f8670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f9bbbc7d580"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f9bbb3f6670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f9bbbc7f580"/></to>
    </wire>
    <wire loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f9bbb4045b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f9bbb2ad430"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f9bba50e440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb3559a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f9bba50ea50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f9bbb2b9880"/></to>
    </wire>
    <wire loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f9bbb2b9880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f9bbb2ad430"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f9bba5132b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f9bbb43e860"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bba515a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb352130"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb352130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb2c0060"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb351020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bba507760"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bbb3538a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bbb2c2bf0"/></to>
    </wire>
    <wire loc="106:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bbb2c2bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba497850"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb358a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb34e5c0"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb3545c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb2c4e60"/></to>
    </wire>
    <wire loc="105:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbb2c4e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bba498970"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb3559a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb33d020"/></to>
    </wire>
    <wire loc="108:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb2c0060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bba496c30"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb2c0930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb351020"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb33c4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb2c0060"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f9bbb33d690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f9bbb4373b0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f9bbb33de70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f9bbb4348a0"/></to>
    </wire>
    <wire loc="107:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9bbb2c1400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9bba496020"/></to>
    </wire>
    <wire loc="109:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bba495590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb2c0930"/></to>
    </wire>
    <wire loc="111:../../../..//tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9bba495d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9bba49b750"/></to>
    </wire>
    <wire loc="75:../../../..//tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9bba492020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f9bbb2a6250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f9bbb432020"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f9bbb2a2d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f9bbbc89580"/></to>
    </wire>
    <wire loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f9bbb2a0cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f9bbbc83580"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb18bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f9bbb196da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb18eb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb188670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f9bbb181e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f9bbb188e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbb1752f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbb1772f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb193120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f9bbb17d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb1782f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f9bbb18dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb18cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbb183670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f9bbb185e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb187670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb197760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb192aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f9bbb191120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbb17ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbb191870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbb178ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb193dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f9bbb17ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbb18c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb18d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb196750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbb17fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f9bbb180670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbb17e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb176ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbb177ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f9bbb184670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f9bbb180e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbb179ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbb186670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbb175ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbb196100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f9bbb18e370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbb18b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbb183e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb187e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbb181670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb18a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f9bbb194450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb18ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbb190020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f9bbb190cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f9bbb1792f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb17aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbb192450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbb17a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f9bbb1762f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbb184e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f9bbb17f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f9bbb194aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb193770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbb186e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f9bbb190670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f9bbb185670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f9bbb17de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb1737a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb15ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f9bbb169da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb162b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb15c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f9bbb155e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f9bbb15ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbb1482f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbb14a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb167120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f9bbb150670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb14c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f9bbb161c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb15fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbb156670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f9bbb158e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb15b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb16a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb165aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f9bbb164120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbb14fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbb164870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbb14cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb167dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f9bbb151e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbb15f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb161480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb169750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbb153e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f9bbb154670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbb151670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb149ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbb14aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f9bbb157670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f9bbb154e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbb14dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbb15a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbb148ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbb169100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f9bbb162370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbb15e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbb156e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb15be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbb155670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb15d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f9bbb168450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb15de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbb163020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f9bbb163cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f9bbb14d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb14ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbb165450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbb14e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f9bbb1492f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbb157e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f9bbb153670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f9bbb168aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb167770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbb15ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f9bbb163670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f9bbb158670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f9bbb150e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb1477a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb11f880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb115020"/></to>
    </wire>
    <wire loc="20:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb115020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb10f140"/></to>
    </wire>
    <wire loc="16:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f9bbb10bbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f9bbb113c50"/></to>
    </wire>
    <wire loc="21:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f9bbb113c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f9bbb0f6150"/></to>
    </wire>
    <wire loc="17:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f9bbb10e530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f9bbb0ada20"/></to>
    </wire>
    <wire loc="18:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f9bbb0fa540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f9bbb0fb590"/></to>
    </wire>
    <wire loc="11:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f9bbb0fb590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb0ab9e0"/></to>
    </wire>
    <wire loc="18:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0f1950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0f8ca0"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0f8ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0cea90"/></to>
    </wire>
    <wire loc="19:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f9bbb0f69f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f9bbb0fa540"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bbb0be020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f9bbb0b8530"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f9bbb0b8530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbb0b5e50"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb0b1020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f9bbc066060"/></to>
    </wire>
    <wire loc="9:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb0aac50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f9bbbcd5020"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f9bbb08d990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f9bbb083900"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f9bbb091150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f9bbb0820f0"/></to>
    </wire>
    <wire loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f9bbb082ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb87c220"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f9bbb075500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f9bbb77ac70"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f9bbb06f820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f9bbb777e60"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f9bbb06eb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f9bbb7729b0"/></to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f9bbb076880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f9bbb737150"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f9bbb06c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbafcfc30"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbafcfc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb06cd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbafce8f0"/></to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbafce8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbb0686d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f9bbafcd2f0"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbafcd2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f9bbb068de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f9bbafcccc0"/></to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f9bbafcccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb067530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbafcb370"/></to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbafcb370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb067c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbafcad00"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbafcad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb069e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbafc3c60"/></to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbafc3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb06b780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbafab7a0"/></to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbafab7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb069550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbafb02f0"/></to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbafb02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb0663e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbafc5480"/></to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbafc5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb0655e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbafc1e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbafc1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb064020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbafc0670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbafc0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f9bbb066e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f9bbafc77b0"/></to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f9bbafc77b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb0639c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbafadad0"/></to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbafadad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbb064890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f9bbafae2f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbafae2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbb063130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f9bbafaead0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbafaead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbb05dd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbaf9fdf0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbaf9fdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbaf96550"/></to>
    </wire>
    <wire loc="98:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb07ed00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></to>
    </wire>
    <wire loc="99:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbb07cbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9bbb07b950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf13550"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbb070be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbaf0b480"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbaf0b480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbaefd8b0"/></to>
    </wire>
    <wire loc="104:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbb0616c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbafc2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f9bbafcc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbafc6c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f9bbafb9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f9bbafc0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbafac2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f9bbafb4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f9bbafc5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbafba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f9bbafbce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbafbf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f9bbafc8370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbafb3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbafc8ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbafb0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbafca060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f9bbafb5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbafc3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbafcd940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbafb7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f9bbafb8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbafb5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f9bbafbb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f9bbafb8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbafb1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbafbe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbafacad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f9bbafc6490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbafc2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbafbae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbafbfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbafb9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbafc1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f9bbafcc670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbafc7160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f9bbafc7e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f9bbafb12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbafb2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbafca6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbafb22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f9bbafad2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbafbbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f9bbafb7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbafcb9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbafbee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f9bbafbc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f9bbafb4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f9bbaf9b020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f9bbaf957c0"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9bbaf80150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></to>
    </wire>
    <wire loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f9bbaf94020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f9bbb777e60"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f9bbaf93380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f9bbb775090"/></to>
    </wire>
    <wire loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f9bbaf926b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f9bbb774390"/></to>
    </wire>
    <wire loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f9bbaf91a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f9bbb736a20"/></to>
    </wire>
    <wire loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f9bbaf906e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbadb6d00"/></to>
    </wire>
    <wire loc="126:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9bbadb6d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbaf8f530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbad93ad0"/></to>
    </wire>
    <wire loc="195:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbad93ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbaf8ead0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbadb06b0"/></to>
    </wire>
    <wire loc="137:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbadb06b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f9bbaf8e3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f9bbadaf370"/></to>
    </wire>
    <wire loc="139:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f9bbadaf370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf8d330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></to>
    </wire>
    <wire loc="77:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf8c1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="78:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9bbaf8ad70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf13550"/></to>
    </wire>
    <wire loc="79:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbaf8cb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbb939b80"/></to>
    </wire>
    <wire loc="81:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbaf853e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbada8e50"/></to>
    </wire>
    <wire loc="155:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbada8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbaf85cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbada6670"/></to>
    </wire>
    <wire loc="156:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbada6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbaf86b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbadae160"/></to>
    </wire>
    <wire loc="141:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbadae160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbaf836d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbad932f0"/></to>
    </wire>
    <wire loc="192:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbad932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbaf84590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f9bbad952f0"/></to>
    </wire>
    <wire loc="188:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f9bbad952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbaf84e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f9bbad95ad0"/></to>
    </wire>
    <wire loc="189:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f9bbad95ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbaf82020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbad96ad0"/></to>
    </wire>
    <wire loc="187:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbad96ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbaf828b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f9bbadb4300"/></to>
    </wire>
    <wire loc="129:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f9bbadb4300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f9bbaf759d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bbae9e7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbb802020"/></to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f9bbaef8820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9bbaea74e0"/></to>
    </wire>
    <wire loc="69:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f9bbaefab80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9bbae91610"/></to>
    </wire>
    <wire loc="59:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9bbae91610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9bbadd82b0"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbae96020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbade7150"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbae97130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbae62020"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbae62020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bba38e9d0"/></to>
    </wire>
    <wire loc="61:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9bbade1640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9bbae362f0"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9bbae31850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bbae62870"/></to>
    </wire>
    <wire loc="53:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9bbae62870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba3645f0"/></to>
    </wire>
    <wire loc="63:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bbadd7690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbae81b70"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bbae81b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbae79610"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bba38e9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bba34e360"/></to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f9bba35ed20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba38d260"/></to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9bba38d260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9bba34ebf0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9bba3609b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9bbae81b70"/></to>
    </wire>
    <wire loc="54:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba34bdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba353020"/></to>
    </wire>
    <wire loc="49:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba353020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba348440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba352760"/></to>
    </wire>
    <wire loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba352760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba347760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba351a80"/></to>
    </wire>
    <wire loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba351a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f9bbae77b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f9bbb7f9020"/></to>
    </wire>
    <wire loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f9bbae2d9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9bbaddca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../..//tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9bbadce8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbadc52c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../..//tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbadc52c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbae96020"/></to>
    </wire>
    <wire loc="153:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbada9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f9bbadb2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbadacc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f9bbad9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f9bbada6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbadb1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f9bbad9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbad962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f9bbadabc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbadaac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbada1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f9bbada3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbada5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbadb5970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></to>
    </wire>
    <wire loc="138:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbadb0d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbad9aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbadafac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbadb0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f9bbad9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbadaa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbadab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbadb4950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbad9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f9bbad9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbad9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbad94ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f9bbada2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f9bbad9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbad97ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbada4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f9bbadac490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbada9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbada1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbada5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbad9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbada8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f9bbadb2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f9bbadaee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f9bbad972f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbad98ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbad982f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f9bbad942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbada2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f9bbad9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f9bbadb2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbadb19c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbada4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f9bbadae7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f9bbada3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f9bbad9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbad917a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f9bbad66920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f9bbad5e940"/></to>
    </wire>
    <wire loc="54:../../../..//tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9bbad6c9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9bbad5e080"/></to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbad41e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f9bbad46020"/></to>
    </wire>
    <wire loc="60:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f9bbad40ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbad42690"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f9bbad42690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbb54d280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f9bbad3f8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f9bbad68a20"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbad3e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="57:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f9bbad27200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f9bbad22570"/></to>
    </wire>
    <wire loc="58:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9bbad213f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9bbad27950"/></to>
    </wire>
    <wire loc="62:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbad21a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="94:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f9bbace8d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f9bbacf26b0"/></to>
    </wire>
    <wire loc="95:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f9bbace7b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f9bbacf2020"/></to>
    </wire>
    <wire loc="100:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbace62f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></to>
    </wire>
    <wire loc="101:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbace5170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></to>
    </wire>
    <wire loc="102:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9bbace5b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9bbac98410"/></to>
    </wire>
    <wire loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f9bbacb9db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f9bbac8b800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbac87580"/></to>
    </wire>
    <wire loc="74:../../../..//tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f9bbac87580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f9bbb54d280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbac731c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9c6670"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bbaba8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></to>
    </wire>
    <wire loc="56:../../../..//tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f9bbaba3400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../..//tos/system/MainC.nc">
      <documentation loc="45:../../../..//tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../..//tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../..//tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../..//tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../..//tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../..//tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../..//tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../..//tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../..//tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../..//tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../..//tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ReceivingBufferC" loc="4:ReceivingBufferC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../..//tos/system/LedsC.nc">
      <documentation loc="34:../../../..//tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../..//tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../..//tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ReceivingBuffer_AppC.AMSenderC" loc="47(ReceivingBuffer_AppC.AMSenderC):../../../..//tos/system/AMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.AMSenderC.SenderC" loc="47(ReceivingBuffer_AppC.AMSenderC.SenderC):../../../..//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP):../../../..//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../..//tos/system/AMQueueP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../..//tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../..//tos/system/StateImplC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../..//tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../..//tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../..//tos/system/ArbiterP.nc">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../..//tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../..//tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../..//tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../..//tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../..//tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../..//tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../..//tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../..//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../..//tos/system/RandomC.nc">
      <documentation loc="33:../../../..//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../..//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../..//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../..//tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../..//tos/system/StateC.nc">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReceivingBuffer_AppC.R_A" loc="43(ReceivingBuffer_AppC.R_A):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.R_B" loc="43(ReceivingBuffer_AppC.R_B):../../../..//tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.Timer1" loc="44(ReceivingBuffer_AppC.Timer1):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.Timer2" loc="44(ReceivingBuffer_AppC.Timer2):../../../..//tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReceivingBuffer_AppC.ADC0" loc="42(ReceivingBuffer_AppC.ADC0):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ReceivingBuffer_AppC.ADC1" loc="42(ReceivingBuffer_AppC.ADC1):../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f9bbc028890" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f9bbc028c30" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f9bbc027020" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f9bbc0273a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f9bbc027720" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f9bbc027a90" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f9bbc027e20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f9bbc025200" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f9bbc0255d0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f9bbbfeae70" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f9bbbfe7270" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../..//tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f9bbbc539f0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f9bbbc53da0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f9bbbc521a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f9bbbc52550" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f9bbbc528c0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../..//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f9bbbabdda0" loc="47:../../../..//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../..//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f9bbbaa8e20" loc="47:../../../..//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../..//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f9bbba99ac0" loc="43:../../../..//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../..//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f9bbba76c80" loc="45:../../../..//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f9bbb8379d0" loc="43:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f9bbb8379d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f9bbb7f3120" loc="42:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f9bbb7f3120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../..//tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f9bbb7e2a50" loc="55:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f9bbb7e2a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f9bbb7df290" loc="56:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f9bbb7df290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f9bbb7df680" loc="57:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f9bbb7df680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f9bbb7dfe60" loc="58:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f9bbb7dfe60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f9bbb7de260" loc="59:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f9bbb7dea60" loc="60:../../../..//tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f9bbb7dea60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../..//tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f9bbb803a20" loc="52:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f9bbb803a20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f9bbb7bc290" loc="53:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f9bbb7bc290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f9bbb7bc680" loc="54:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f9bbb7bc680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f9bbb7bce60" loc="55:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f9bbb7bce60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f9bbb7bb260" loc="56:../../../..//tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../..//tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../..//tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../..//tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../..//tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9bbb336020" loc="89:../../../..//tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f9bbb32a0d0" loc="42:../../../..//tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../..//tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../..//tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f9bbb30f800" loc="52:../../../..//tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbb0cc020" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbb0cc020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9bbb0cc7b0" loc="52:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb0cc7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbaea9a60" loc="46:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbaea9a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../..//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbae5dcc0" loc="46:../../../..//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbae5dcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbae28230" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbae28230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f9bbae28560" loc="46:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../..//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../..//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../..//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f9bbabae390" loc="43:../../../..//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f9bbc0d7590" loc="58:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbc0d7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0d7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9bbc0d80d0" loc="57:../../../..//tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f9bbc0d80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9bbc0d8450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbc0da560" loc="42:../../../..//tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbc0da560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0da8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9bbc0d1580" loc="6:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f9bbc0d1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0d1900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbc0d5770" loc="4:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbc0d5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0d5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f9bbc0d5e80" loc="5:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f9bbc0d5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0d1220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f9bbc0d1c60" loc="7:../../../..//tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f9bbc0d1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbc0d4a20" loc="2:../../../..//tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbc0d4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0d4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f9bbc0d2be0" loc="39:../../../..//tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f9bbc0d2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f9bbc0a92c0" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f9bbc0a92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f9bbc0af1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f9bbc0a97d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f9bbc0a9960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f9bbc0a9af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f9bbc0a9640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f9bbc0a9c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f9bbc0a9e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7f9bbc0af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbc0b3b60" loc="39:../../../..//tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbc0b3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc0b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f9bbc099020" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f9bbc099020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f9bbc098020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f9bbc099530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f9bbc0996c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f9bbc099850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f9bbc0993a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f9bbc0999e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f9bbc099b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f9bbc099d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f9bbc098360" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9bbc098360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9bbc0986e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbc09a940" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbc09a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc09acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f9bbc0555a0" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f9bbc0555a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc055920"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc055ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc055c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc055dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc054020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc0541b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc054340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc0544d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc054660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f9bbc043020" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f9bbc043020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc0433a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc043530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc0436c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc043850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc0439e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc043b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc043d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc042020"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc0421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f9bbc04c700" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f9bbc04c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc04ca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc04cc10"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc04cda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc04b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc04b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc04b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f9bbc030a20" loc="68:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f9bbc030a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc030da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc02f020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc02f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc02f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc02f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc02f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f9bbc053aa0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f9bbc053aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc053e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc052020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc0521b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc052340"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc0524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f9bbc036020" loc="61:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f9bbc036020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc0363a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc036530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc0366c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc036850"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc0369e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f9bbc02da20" loc="71:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f9bbc02da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc02dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc02c020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc02c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc02c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc02c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc02c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f9bbc03d5a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f9bbc03d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc03d920"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc03dab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc03dc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc03ddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc03c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc03c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc03c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc03c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc03c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f9bbc056b10" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f9bbc056b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc05d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc05d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc05d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc05d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc05d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc05d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc05d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc05db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc05dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f9bbc032a20" loc="66:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f9bbc032a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc032da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc031020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc0311b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc031340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc0314d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc031660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f9bbc0383e0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f9bbc0383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc038760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc0388f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc038a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc038c10"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc038da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f9bbc0425a0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f9bbc0425a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc042a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc042bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc042d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc041020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc0411b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc041340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc0414d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc041660"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc0417f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f9bbc04b700" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f9bbc04b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc04ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc04bc10"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc04bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc045020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc0451b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc045340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f9bbc02fa20" loc="69:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f9bbc02fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc02fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc02e020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc02e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc02e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc02e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc02e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f9bbc041be0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f9bbc041be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc03f020"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc03f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc03f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc03f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc03f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc03f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc03f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc03fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc03fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f9bbc052890" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f9bbc052890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc052c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc052da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc04d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc04d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc04d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f9bbc066060" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f9bbc066060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbc0663e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbc066570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc066700"/>
        <function-ref name="get" scoped="" ref="0x7f9bbc066890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc066a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc066bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbc066d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc065020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbc0651b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbc065340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbc0654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f9bbc036da0" loc="62:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f9bbc036da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc035180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc035310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc0354a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc035630"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc0357c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f9bbc05c0c0" loc="41:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f9bbc05c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc05c440"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc05c5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc05c760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc05c8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc05ca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc05cc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc05cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc055020"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc0551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f9bbc03ca50" loc="56:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f9bbc03ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc03cdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc03b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc03b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc03b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc03b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc03b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc03b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc03b980"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc03bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f9bbc0466d0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f9bbc0466d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc046a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc046be0"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc046d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc04c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc04c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc04c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f9bbc031a20" loc="67:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f9bbc031a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc031da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc030020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc0301b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc030340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc0304d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc030660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f9bbc04ecf0" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f9bbc04ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc0530a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc053230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc0533c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc053550"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc0536e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f9bbc0371f0" loc="60:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f9bbc0371f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc037570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc037700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc037890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc037a20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc037bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f9bbc02ea20" loc="70:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f9bbc02ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc02eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc02d020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc02d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc02d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc02d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc02d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f9bbc03e0c0" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f9bbc03e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc03e440"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc03e5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc03e760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc03e8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc03ea80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc03ec10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc03eda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc03d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc03d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f9bbc0456c0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f9bbc0456c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbc045a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbc045bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc045d60"/>
        <function-ref name="get" scoped="" ref="0x7f9bbc044020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc0441b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc044340"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbc0444d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc044660"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbc0447f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbc044980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbc044b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f9bbc035b80" loc="63:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f9bbc035b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc034020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc0341b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc034340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc0344d0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc034660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f9bbc033a20" loc="65:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f9bbc033a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc033da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbc032020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbc0321b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbc032340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbc0324d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbc032660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f9bbc034a20" loc="64:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f9bbc034a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc033020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc0331b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc033340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc0334d0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc033660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f9bbc039570" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f9bbc039570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbc0398f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbc039a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbc039c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbc039da0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbc038020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f9bbc03a020" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f9bbc03a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbc03a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbc03a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbc03a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbc03a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbc03a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbc03ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbc03ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbc039020"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbc0391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f9bbbff4aa0" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f9bbbff4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbff4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f9bbbff4450" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f9bbbff4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbff47d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f9bbbff2120" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f9bbbff2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbff24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f9bbbff5d80" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbff5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbff4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbbff6540" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbff6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbff68c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbff6a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbff6be0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbff6d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbff5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbff51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbff5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbff54d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbff5660"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbff57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbff5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f9bbbfec940" loc="53:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f9bbbfec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbfeccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f9bbbfec2f0" loc="52:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f9bbbfec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbfec670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f9bbbfeb020" loc="54:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f9bbbfeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbfeb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f9bbbfedbf0" loc="51:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbfedbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbfec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbbfee3e0" loc="50:../../../..//tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbfee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbfee760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbfee8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbfeea80"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbfeec10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbfeeda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbfed020"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbfed1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbfed340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbfed4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbfed660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbfed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbfa0a90" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbfa0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbfa0e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf9f020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf9f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf9f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf9f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf9f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbfe89d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbfe89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbfe8d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbfa1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbfa11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbfa1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbfa14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbfa1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbfa17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbfa1980"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbfa1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf9d020" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbfa1de0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbfa1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbfa0180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbfa0310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbfa04a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbfa0630"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbfa07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf9f930" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf9f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf9fcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf9fe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf9e020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf9e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf9e340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf9e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf9e660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf9e7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf9e980"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf9eb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf9eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf98160" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf98160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf984e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf98670"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf98800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf98990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf98b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf98cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf9a020" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf9a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf9a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf9a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf9a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf9a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf9ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf9ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf99020"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf957a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf957a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf95b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf99480" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf99480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf99800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf99990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf99b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf99cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf99e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf97020" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf973a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf97530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf976c0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf97850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf979e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf97b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf97d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf95020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf951b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf95340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf907a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf907a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf90b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf90cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf90e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf8f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf8f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf926d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf926d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf92a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf92be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf92d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf91020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf911b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf91340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf914d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf91660"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf917f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf8ec50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf8ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf91ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf91ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf91e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf90020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf901b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf90340"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf904d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf8f610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf8f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf8f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf8fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf8fcb0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf8fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf8e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf8e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf8e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf8e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf8e660"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf8e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf8e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf89cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf89cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf880a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf88230"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf883c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf88550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf886e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf88870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf8bb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf8bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf8a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf8a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf8a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf8a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf8a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf8a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf8a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf8ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf852f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf85670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf89020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf893a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf89530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf896c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf89850"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf899e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf88b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf88b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf86020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf861b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf86340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf864d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf86660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf867f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf86980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf86b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf86ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf86e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf802f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf80670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf80800"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf80990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf80b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf80cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf80e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf82220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf82220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf825a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf82730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf828c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf82a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf82be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf82d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf81020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf811b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf81340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf7e7a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf7e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf7eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf81610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf81610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf81990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf81b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf81cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf81e40"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf7f160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf7f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf7f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf7f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf7f800"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf7f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf7fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf7fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf7fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf7e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf7e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf7e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf797a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf79b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf79cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf79e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf78020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf781b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf78340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf7b6d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf7b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf7ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf7bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf7bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf7a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf7a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf7a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf7a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf7a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf7a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf77c50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf77c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf7aac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf7aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf7ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf79020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf791b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf79340"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf78610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf78610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf78990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf78b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf78cb0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf78e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf77020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf771b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf77340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf774d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf77660"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf777f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf71cb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf71cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf700a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf70230"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf703c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf70550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf706e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf70870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf73b30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf73b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf72020"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf721b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf72340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf724d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf72660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf727f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf72980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf72b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf72ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf6e2f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf6e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf6e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf71020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf713a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf71530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf716c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf71850"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf719e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf70b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf70b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf6f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf6f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf6f340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf6f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf6f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf6f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf6f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf6fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf6fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf6fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf692f0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf69670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf69800"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf69990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf69b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf69cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf69e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf6b220" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf6b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf6b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf6b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf6b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf6ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf6bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf6bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf6a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf6a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf6a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf677a0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf677a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf67b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf6a610" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf6a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf6a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf6ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf6acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf6ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf68160" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf68160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf684e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf68670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf68800"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf68990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf68b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf68cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf68e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf67020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf671b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf67340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf617a0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf617a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf61b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf61cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf61e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf60020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf601b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf636d0" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf63a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf63be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf63d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf62020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf621b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf62340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf624d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf62660"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf5fc50" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf5fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf62ac0" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf62ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf62e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf61020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf611b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf61340"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf60610" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf60610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf60990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf60b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf60cb0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf60e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf5f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf5f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf5f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf5f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf5f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf5f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf5f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbbf5acb0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbbf5acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf590a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbbf59230"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbbf593c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf59550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf596e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbbf59870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f9bbbf5cb30" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f9bbbf5cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbbf5b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbbf5b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf5b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbbf5b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbbf5b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf5b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbbf5b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbbf5bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbbf5bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f9bbbf572f0" loc="48:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f9bbbf572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf57670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9bbbf5a020" loc="45:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f9bbbf5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbbf5a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbbf5a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbbf5a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbbf5a850"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf5a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9bbbf59b40" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbbf59b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbf58020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbbf581b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbbf58340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbf584d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbbf58660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbbf587f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbbf58980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbbf58b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbbf58ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbbf58e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbbf57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f9bbbf50240" loc="7:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f9bbbf50240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf505c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f9bbbf54a90" loc="4:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f9bbbf54a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf54e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f9bbbf51260" loc="5:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f9bbbf51260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf515e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f9bbbf519f0" loc="6:../../../..//tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f9bbbf519f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbbf51d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9bbc1f84c0" loc="55:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9bbc1f84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9bbc1f8840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9bbc50c3b0" loc="51:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f9bbc50c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f9bbc50c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f9bbc50c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9bbc50ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9bbc334bc0" loc="52:../../../..//tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f9bbc334bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9bbc470020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f9bbc0b1b40" loc="39:../../../..//tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f9bbc0b1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f9bbbf19b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f9bbbf191b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f9bbbf19340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f9bbbf194d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f9bbbf19020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f9bbbf19660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f9bbbf197f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f9bbbf19980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9bbbf0ddc0" loc="60:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9bbbf0ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbbf0c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9bbbf1a590" loc="57:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f9bbbf1a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9bbbf1a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9bbbf0d6c0" loc="59:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f9bbbf0d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbbf0da40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9bbbf1ac00" loc="58:../../../..//tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f9bbbf1ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbbf0d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9bbbf0d1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9bbbf0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9bbc5e4410" loc="48:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc5e4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbc5e4790"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbc5e4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9bbc5753a0" loc="47:../../../..//tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f9bbc5753a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc575720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9bbc5758b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9bbc575a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9bbc11e040" loc="56:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f9bbc11e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbc11e3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbc11e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9bbc11a490" loc="57:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f9bbc11a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f9bbc11a810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f9bbc11a9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9bbc11ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9bbc120140" loc="55:../../../..//tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f9bbc120140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbc1204c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9bbc120650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9bbc1207e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_A" ref="0x7f9bbbe94220" loc="11:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_A" scoped="" ref="0x7f9bbbe94220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbbe945a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f9bbbe7c7a0" loc="17:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f9bbbe7c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbbe7cb20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbbe7ccb0"/>
        <function-ref name="start" scoped="" ref="0x7f9bbbe7ce40"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbbe81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9bbbefec40" loc="8:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f9bbbefec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9bbbefd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x7f9bbbe6d1d0" loc="20:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f9bbbe6d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbe6d550"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbe6d6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbe6d870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbe6da00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbe6db90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbe6dd20"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbe7b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbe7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f9bbbe725f0" loc="18:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbbe725f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbbe72970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbbe72b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbbe72c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbbe72e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbbe80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f9bbbe988f0" loc="10:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bbbe988f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbbe98c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbbe98e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbbef1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbbef11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbbef1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="assignFlowstoSlots" ref="0x7f9bbbe64db0" loc="60:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="assignFlowstoSlots" scoped="" ref="0x7f9bbbe64db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbbe63310"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbbe634a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateSchedule" ref="0x7f9bbbe60020" loc="63:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateSchedule" scoped="" ref="0x7f9bbbe60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbbe603a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbbe60530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f9bbbe8b9e0" loc="13:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f9bbbe8b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbbe88020"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbe96510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbbe89300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbbe96e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbbe88920"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbbe884a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbbe96990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbbea5670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbbe89910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbbea5b40"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbbe96090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="R_B" ref="0x7f9bbbe948e0" loc="12:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="R_B" scoped="" ref="0x7f9bbbe948e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbbe94c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x7f9bbbe7b510" loc="21:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f9bbbe7b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbe7b890"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbe7ba20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbe7bbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbe7bd40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbe73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbe731b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbe73340"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbe734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeFlow" ref="0x7f9bbbe65e70" loc="59:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeFlow" scoped="" ref="0x7f9bbbe65e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbbe64220"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbbe643b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbbef2590" loc="7:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbbef2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbbef2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbbef2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbbef2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbbef2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbbefe020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbefe1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbbefe340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbbefe980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbefe4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbbefe660"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbbefe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeSchedule" ref="0x7f9bbbe62100" loc="61:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeSchedule" scoped="" ref="0x7f9bbbe62100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbbe62480"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbbe62610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initializeCluster" ref="0x7f9bbbe5e020" loc="64:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initializeCluster" scoped="" ref="0x7f9bbbe5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbbe5e3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbbe5e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f9bbbe87020" loc="14:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f9bbbe87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbbe83630"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbbe86a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbbe84920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbbe844a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbbe82020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbbe83ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbbe84020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbbe87c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbbe83020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbbe86110"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbbe865e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PermutateCipher" ref="0x7f9bbbe61020" loc="62:ReceivingBufferC.nc">
      <component-ref qname="ReceivingBufferC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PermutateCipher" scoped="" ref="0x7f9bbbe61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbbe613a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbbe61530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9bbbd26860" loc="46:../../../..//tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbbd26860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbbd26be0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbbd26d70"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbbd23020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbbd231b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbbd23340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbd234d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbbd23660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbbd23ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbd237f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbbd23980"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbbd23b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f9bbbd1ea00" loc="50:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f9bbbd1ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbd1ed80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbd1d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbd1d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbd1d340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbd1d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbd1d660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbd1d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbd1d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbbd22c40" loc="46:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbbd22c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbbd1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f9bbbd1dca0" loc="51:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f9bbbd1dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbd1c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbd1c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbd1c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbd1c550"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbd1c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbd1c870"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbd1ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbd1cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9bbbd1f2a0" loc="47:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbbd1f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbbd1f620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbbd1f7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbbd1f940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbbd1fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbbd1fc60"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbd1fdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbbd1e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbbd1e660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbd1e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbbd1e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbbd1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f9bbbd1b020" loc="52:../../../..//tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f9bbbd1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbd1b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbd1b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbd1b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbd1b850"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbd1b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbd1bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbd1bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbd1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9bbbd205a0" loc="41:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f9bbbd205a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbd20920"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbd20ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbd20c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbd20dd0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcfe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcfe1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcfe340"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcfe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9bbbcfe830" loc="42:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f9bbbcfe830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcfebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcfed40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcfd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcfd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcfd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcfd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcfd660"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcfd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9bbbcfcdd0" loc="44:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbbcfcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbbcfb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9bbbcfdb50" loc="43:../../../..//tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f9bbbcfdb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcfc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcfc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcfc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcfc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcfc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcfc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcfc980"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcfcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f9bbbce5020" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f9bbbce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbce53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbce5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbce56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbce5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbce59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbce5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbce5d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbce4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbce41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbce4340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbce44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbce4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbce47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbce4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbce4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f9bbbcd0020" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f9bbbcd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcd03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcd0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcd06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcd0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcd09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcd0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcd0d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbccf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbccf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbccf340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbccf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbccf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbccf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbccfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbccfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f9bbbc87560" loc="145:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f9bbbc87560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc878e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc87a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc87c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc87d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc86020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc86340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc86660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc867f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc86980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc86b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc86ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc85020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f9bbbc62570" loc="165:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f9bbbc62570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc628f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc62a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc62c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc62da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc61020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc61340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc614d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc61660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc617f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc61980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc61b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc61ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc60020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f9bbbc85580" loc="146:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f9bbbc85580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc85900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc85a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc85c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc85db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc84020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc84340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc84660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc847f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc84980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc84b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc84ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc83020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f9bbbccc020" loc="71:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f9bbbccc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbccc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbccc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbccc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbccc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbccc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcccb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcccd00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbccb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbccb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbccb340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbccb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbccb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbccb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbccba80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbccbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f9bbbcb8200" loc="84:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f9bbbcb8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcb8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcb8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcb88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcb8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcb8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcb8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcb7020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcb71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcb7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcb74d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcb7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcb77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcb7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcb7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcb7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f9bbbca3200" loc="97:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f9bbbca3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbca3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbca3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbca38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbca3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbca3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbca3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbca2020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbca21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbca2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbca24d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbca2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbca27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbca2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbca2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbca2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f9bbbc93200" loc="108:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f9bbbc93200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc93580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc93710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc938a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc93a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc93bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc93d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc92020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc921b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc92340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc924d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc92660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc927f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc92980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc92c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc92da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f9bbbc7f580" loc="149:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f9bbbc7f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc7f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc7fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc7fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc7fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc7e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc7e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc7e340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc7e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc7e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc7e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc7e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc7eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc7eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc7d020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc7d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f9bbbc6e570" loc="159:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f9bbbc6e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc6e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc6ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc6ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc6eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc6d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc6d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc6d340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc6d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc6d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc6d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc6d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc6db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc6dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc6c020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f9bbbc5a580" loc="171:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f9bbbc5a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc5a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc5aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc5ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc5adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc59020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc59340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc59660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc597f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc59980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc59b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc59ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc58020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f9bbbcdf020" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f9bbbcdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcdf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcdf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcdf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcdf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcdf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcdfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcdfd00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcde020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcde1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcde340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcde4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcde660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcde7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcdea80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcdec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f9bbbc7d580" loc="150:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f9bbbc7d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc7d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc7da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc7dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc7ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc7c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc7c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc7c340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc7c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc7c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc7c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc7c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc7cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc7cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc7b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f9bbbcdb020" loc="61:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f9bbbcdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcdb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcdb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcdb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcdb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcdb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcdbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcdbd00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcda020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcda1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcda340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcda4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcda660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcda7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcdaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcdac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f9bbbcc6020" loc="74:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f9bbbcc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcc63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcc6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcc66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcc6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcc69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcc6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcc6d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcc51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcc5340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcc54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcc5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcc57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcc5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f9bbbcb2200" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f9bbbcb2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcb2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcb2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcb28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcb2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcb2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcb2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcb1020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcb11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcb1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcb14d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcb1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcb17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcb1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcb1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcb1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f9bbbc9d200" loc="100:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f9bbbc9d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc9d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc9d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc9d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc9da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc9dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc9dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc9c020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc9c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc9c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc9c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc9c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc9c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc9c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc9cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc9cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f9bbbc8d200" loc="111:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f9bbbc8d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc8d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc8d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc8d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc8da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc8dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc8dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc8c020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc8c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc8c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc8c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc8c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc8c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc8c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc8cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc8cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f9bbbce9020" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f9bbbce9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbce93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbce9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbce96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbce9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbce99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbce9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbce9d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbce8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbce81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbce8340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbce84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbce8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbce87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbce8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbce8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f9bbbcd5020" loc="64:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f9bbbcd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcd54a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcd5630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcd57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcd5950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcd5ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcd5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcd5e00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcd4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcd41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcd4340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcd44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcd4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcd47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcd4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcd4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f9bbbcc0020" loc="77:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f9bbbcc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcc03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcc0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcc06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcc0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcc09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcc0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcc0d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcbf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcbf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcbf340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcbf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcbf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcbf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcbfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcbfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f9bbbc89580" loc="144:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f9bbbc89580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc89900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc89a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc89c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc89db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc88020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc88340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc884d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc88660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc887f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc88980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc88b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc88ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc87020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f9bbbc68570" loc="162:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f9bbbc68570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc688f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc68a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc68c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc68da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc67020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc67340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc674d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc67660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc677f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc67980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc67b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc67ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc66020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f9bbbc5c570" loc="169:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f9bbbc5c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc5c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc5ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc5cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc5cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc5b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc5b340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc5b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc5b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc5b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc5b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc5bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc5bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc5a020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f9bbbc75580" loc="155:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f9bbbc75580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc75900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc75a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc75c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc75db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc73020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc73340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc734d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc73660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc737f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc73980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc73b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc73ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc72020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f9bbbcbc020" loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f9bbbcbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcbc5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcbc730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcbc8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcbca50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcbcbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcbcd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcbb020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcbb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcbb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcbb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcbb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcbb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcbb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcbbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcbbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f9bbbca8200" loc="95:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f9bbbca8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbca8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbca8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbca88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbca8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbca8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbca8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbca7020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbca71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbca7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbca74d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbca7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbca77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbca7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbca7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbca7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f9bbbc97200" loc="106:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f9bbbc97200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc97580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc97710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc978a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc97a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc97bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc97d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc96020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc961b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc96340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc964d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc96660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc967f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc96980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc96c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc96da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f9bbbc66570" loc="163:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f9bbbc66570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc668f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc66a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc66c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc66da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc65020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc65340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc654d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc65660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc657f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc65980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc65b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc65ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc64020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f9bbbc7b570" loc="152:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f9bbbc7b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc7b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc7ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc7bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc7bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc7a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc7a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc7a340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc7a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc7a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc7a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc7a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc7ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc7aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc79020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f9bbbce3020" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f9bbbce3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbce33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbce3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbce36c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbce3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbce39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbce3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbce3d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbce2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbce21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbce2340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbce24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbce2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbce27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbce2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbce2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f9bbbcce020" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f9bbbcce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcce530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcce6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcce850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcce9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcceb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcced00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbccd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbccd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbccd340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbccd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbccd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbccd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbccda80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbccdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f9bbbc9b200" loc="104:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f9bbbc9b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc9b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc9b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc9b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc9ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc9bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc9bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc9a020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc9a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc9a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc9a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc9a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc9a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc9a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc9ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc9ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f9bbbcca020" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f9bbbcca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbccab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbccad00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcc9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcc91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcc9340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcc94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcc9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcc97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcc9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcc9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f9bbbcb6200" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f9bbbcb6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcb6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcb6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcb68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcb6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcb6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcb6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcb5020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcb51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcb5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcb54d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcb5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcb57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcb5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcb5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcb5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f9bbbca1200" loc="98:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f9bbbca1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbca1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbca1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbca18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbca1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbca1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbca1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbca0020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbca01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbca0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbca04d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbca0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbca07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbca0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbca0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbca0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f9bbbc91200" loc="109:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f9bbbc91200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc91580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc91710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc918a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc91a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc91bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc91d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc90020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc901b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc90340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc904d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc90660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc907f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc90980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc90c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc90da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f9bbbc77580" loc="154:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f9bbbc77580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc77900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc77a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc77c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc77db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc76020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc76340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc764d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc76660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc767f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc76980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc76b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc76ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc75020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f9bbbcf6020" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f9bbbcf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcf63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcf6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcf66c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcf6850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcf69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcf6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcf6d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcf5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcf51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcf5340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcf54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcf5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcf57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcf5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcf5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f9bbbcd9020" loc="62:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f9bbbcd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcd93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcd9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcd96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcd9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcd99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcd9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcd9d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcd8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcd81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcd8340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcd84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcd8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcd87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcd8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcd8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f9bbbcc4020" loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f9bbbcc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcc43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcc4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcc46c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcc4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcc49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcc4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcc4d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcc3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcc31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcc3340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcc34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcc3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcc37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcc3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcc3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f9bbbcb0200" loc="88:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f9bbbcb0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcb0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcb0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcb08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcb0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcb0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcb0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcaf020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcaf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcaf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcaf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcaf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcaf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcaf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcafc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcafda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f9bbbc72580" loc="156:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f9bbbc72580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc72900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc72a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc72c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc72db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc71020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc711b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc71340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc714d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc71660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc717f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc71980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc71b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc71ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc70020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f9bbbc6c570" loc="160:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f9bbbc6c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc6c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc6ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc6cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc6cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc6b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc6b340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc6b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc6b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc6b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc6b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc6bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc6bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc6a020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f9bbbc60570" loc="166:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f9bbbc60570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc608f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc60a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc60c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc60da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc5f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc5f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc5f340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc5f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc5f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc5f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc5f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc5fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc5fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc5e020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f9bbbcac200" loc="93:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f9bbbcac200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcac580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcac710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcac8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcaca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcacbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcacd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcab020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcab1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcab340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcab4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcab660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcab7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcab980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcabc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcabda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f9bbbc70580" loc="157:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f9bbbc70580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc70900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc70a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc70c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc70db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc6f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc6f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc6f340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc6f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc6f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc6f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc6f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc6fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc6fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc6e020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f9bbbce7020" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f9bbbce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbce73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbce7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbce76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbce7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbce79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbce7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbce7d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbce6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbce61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbce6340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbce64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbce6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbce67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbce6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbce6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f9bbbcd2020" loc="65:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f9bbbcd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcd23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcd2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcd26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcd2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcd29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcd2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcd2d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcd1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcd11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcd1340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcd14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcd1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcd17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcd1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcd1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f9bbbcbe020" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f9bbbcbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcbe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcbe530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcbe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcbe850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcbe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcbeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcbed00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcbd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcbd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcbd340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcbd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcbd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcbd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcbda80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcbdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f9bbbc79580" loc="153:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f9bbbc79580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc79900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc79a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc79c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc79db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc78020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc78340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc78660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc787f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc78980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc78b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc78ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc77020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f9bbbc64570" loc="164:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f9bbbc64570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc648f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc64a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc64c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc64da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc63020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc63340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc634d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc63660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc637f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc63980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc63b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc63ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc62020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f9bbbcba200" loc="83:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f9bbbcba200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcba580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcba710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcba8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcbaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcbabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcbad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcb9020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcb91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcb9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcb94d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcb9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcb97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcb9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcb9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcb9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f9bbbca6200" loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f9bbbca6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbca6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbca6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbca68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbca6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbca6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbca6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbca5020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbca51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbca5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbca54d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbca5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbca57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbca5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbca5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbca5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f9bbbc95200" loc="107:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f9bbbc95200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc95580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc95710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc958a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc95a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc95bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc95d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc94020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc941b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc94340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc944d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc94660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc947f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc94980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc94c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc94da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f9bbbce1020" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f9bbbce1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbce13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbce1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbce16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbce1850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbce19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbce1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbce1d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbce0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbce01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbce0340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbce04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbce0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbce07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbce0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbce0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f9bbbc99200" loc="105:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f9bbbc99200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc99580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc99710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc998a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc99a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc99bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc99d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc98020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc981b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc98340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc984d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc98660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc987f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc98980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc98c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc98da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f9bbbcdd020" loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f9bbbcdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcdd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcdd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcdd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcdd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcdd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcddb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcddd00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcdc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcdc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcdc340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcdc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcdc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcdc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcdca80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcdcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f9bbbcc8020" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f9bbbcc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcc83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcc8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcc86c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcc8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcc89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcc8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcc8d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcc7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcc71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcc7340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcc74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcc7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcc77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcc7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcc7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f9bbbcb4200" loc="86:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f9bbbcb4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcb4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcb4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcb48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcb4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcb4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcb4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcb3020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcb31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcb3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcb34d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcb3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcb37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcb3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcb3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcb3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f9bbbc9f200" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f9bbbc9f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc9f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc9f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc9f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc9fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc9fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc9fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc9e020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc9e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc9e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc9e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc9e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc9e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc9e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc9ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc9eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f9bbbc8f200" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f9bbbc8f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc8f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc8f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc8f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc8fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc8fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc8fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc8e020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc8e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc8e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc8e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc8e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc8e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc8e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc8ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc8eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f9bbbceb020" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f9bbbceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbceb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbceb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbceb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbceb850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbceb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcebb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcebd00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcea340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbceaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbceac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f9bbbcd7020" loc="63:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f9bbbcd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcd73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcd7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcd76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcd7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcd79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcd7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcd7d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcd6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcd61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcd6340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcd64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcd6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcd67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcd6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcd6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f9bbbcc2020" loc="76:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f9bbbcc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcc23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcc2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcc26c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcc2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcc29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcc2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcc2d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcc1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcc11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcc1340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcc14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcc1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcc17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcc1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcc1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f9bbbcae200" loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f9bbbcae200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcae580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcae710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcae8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcaea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcaebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcaed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbcad020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbcad1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbcad340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbcad4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbcad660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbcad7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbcad980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbcadc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbcadda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f9bbbc81560" loc="148:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f9bbbc81560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc818e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc81a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc81c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc81d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc80020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc80340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc804d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc80660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc807f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc80980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc80b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc80ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc7f020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f9bbbc6a570" loc="161:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f9bbbc6a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc6a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc6aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc6ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc6ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc69020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc69340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc69660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc697f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc69980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc69b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc69ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc68020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f9bbbc83580" loc="147:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f9bbbc83580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc83900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc83a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc83c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc83db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc82020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc82340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc82660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc827f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc82980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc82b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc82ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc81020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f9bbbcaa200" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f9bbbcaa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbcaa580"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbcaa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbcaa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbcaaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbcaabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbcaad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbca9020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbca91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbca9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbca94d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbca9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbca97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbca9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbca9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbca9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f9bbbc5e570" loc="168:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f9bbbc5e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc5e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc5ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc5ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc5eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc5d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc5d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc5d340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc5d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc5d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc5d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc5d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc5db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc5dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc5c020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f9bbbc58580" loc="172:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f9bbbc58580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc58900"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc58a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc58c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc58db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc57020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc57340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc574d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc57660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc577f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc57980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc57b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc57ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc56020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f9bbbc8b1f0" loc="143:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f9bbbc8b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc8b970"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc8bb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc8bc90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc8be20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc8a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc8a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc8a340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc8a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc8a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc8a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc8a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc8ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc8aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc89020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc2d6d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc2d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc2da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc2dbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc2dd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc2c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc2c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc2c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc2c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc2c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc2c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc2c980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc2cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc2cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc2ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc2b120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc2b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc28100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc28100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc28480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc28610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc287a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc28930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc28ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc28c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc28de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc27020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc271b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc27340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc274d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc27660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc277f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc27a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc27c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc23d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc23d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc220e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc22270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc22400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc22590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc22720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc228b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc22a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc22bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc22d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc21020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc21340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc21760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc1e740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc1e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc1eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc1ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc1ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc1d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc1d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc1d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc1d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc1d980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc1db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc1dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc1de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc1c120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc1c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc19100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc19100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc19480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc19610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc197a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc19930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc19ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc19c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc19de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc18340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc18660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc18a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc15d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc15d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc14270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc14400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc14590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc14720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc14a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc14bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc14d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc13020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc13760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc10740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc10740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc10ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc10c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc10de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc0f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc0f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc0f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc0f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc0f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc0f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc0f980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc0fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc0fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc0fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc0e120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc0e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc0b100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc0b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc0b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc0b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc0b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc0bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc0bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc0bde0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc0a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc0a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc0a340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc0a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc0a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc0a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc0aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc07d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc07d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc060e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc06270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc06400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc06590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc06720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc068b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc06a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc06bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc06d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc05020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc05340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbc05760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbc058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbc02740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbc02740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbc02ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbc02c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbc02de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbc00020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbc001b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbc00340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbc004d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbc00660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbc007f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbc00980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbc00b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbc00ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbc00e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbff120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbfc100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbfc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbfc480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbfc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbfc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbfc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbfcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbfcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbfcde0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbfb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbfb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbfb340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbfb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbfb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbfb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbfba80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbfbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbf8d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbf8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbf70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbf7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbf7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbf7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbf7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbf78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbf7a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbf7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbf7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbf6020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbf61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbf6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbf64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbf6760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbf68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbf3860" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbf3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbf3be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbf3d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbf2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbf21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbf2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbf24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbf2660"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbf27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbf2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbf2b10"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbf2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbf2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbf1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbf12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbf1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbee270" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbee270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbee5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbee780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbee910"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbeeaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbeec30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbeedc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbed020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbed340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbed4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbed660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbed7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbed980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbedc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbedda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbead10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbe90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbe9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbe9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbe9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbe9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbe98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbe9a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbe9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbe9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbe8020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbe81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbe8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbe84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbe8760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbe88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbe5740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbe5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbe5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbe5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbe5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbe4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbe41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbe4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbe44d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbe4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbe47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbe4980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbe4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbe4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbe4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbe3120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbe32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbe0100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbe0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbe0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbe0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbe07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbe0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbe0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbe0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbe0de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbdf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbdf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbdf340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbdf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbdf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbdf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbdfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbdfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbdcd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbdcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbda0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbda270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbda400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbda590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbda720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbda8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbdaa40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbdabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbdad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbd9020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbd91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbd9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbd94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbd9760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbd98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbd6740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbd6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbd6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbd6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbd6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbd5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbd51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbd5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbd54d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbd5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbd57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbd5980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbd5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbd5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbd5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbd4120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbd42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbd1100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbd1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbd1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbd1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbd17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbd1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbd1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbd1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbd1de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbd0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbd01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbd0340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbd04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbd0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbd07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbd0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbd0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbcdd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbcdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbcc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbcc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbcc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbcc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbcc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbcc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbcca40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbccbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbccd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbcb020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbcb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbcb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbcb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbcb760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbcb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbc8740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbc8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbc8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbc8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbc8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbc7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbc71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbc7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbc74d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbc7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbc77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbc7980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbc7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbc7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbc7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbc6120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbc62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbc3100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbc3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbc3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbc3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbc37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbc3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbc3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbc3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbc3de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbc2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbc21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbc2340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbc24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbc2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbc27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbc2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbc2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbbfd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbbfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbbe0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbbe270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbbe400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbbe590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbbe720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbbe8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbbea40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbbebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbbed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbbd020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbbd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbbd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbbd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbbd760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbbd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbbaa60" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbbaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbbade0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbb9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbb91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbb9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbb94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbb9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbb97f0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbb9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbb9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbb9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbb9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbb8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbb81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbb8440"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbb85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbb4460" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbb4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbb47e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbb4970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbb4b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbb4c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbb4e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbb3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbb31b0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbb3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbb34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbb3660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbb37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbb3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbb3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbb3da0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbb0e00" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbb0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbaf1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbaf350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbaf4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbaf670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbaf800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbaf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbafb20"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbafcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbafe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbae020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbbae760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbbae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbbab740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbbab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbbabac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbbabc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbbabde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbbaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbbaa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbbaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbbaa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbbaa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbbaa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbbaa980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbbaab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbbaaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbbaae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbba9120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbba92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbba6100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbba6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbba6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbba6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbba67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbba6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbba6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbba6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbba6de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbba5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbba51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbba5340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbba54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbba5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbba57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbba5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbba5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbba2d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbba2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbba10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbba1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbba1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbba1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbba1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbba18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbba1a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbba1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbba1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbba0020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbba01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbba0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbba04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbba0760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbba08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb9d740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb9d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb9dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb9dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb9dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb9c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb9c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb9c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb9c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb9c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb9c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb9c980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb9cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb9cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb9ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb9b120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb9b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb98100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb98100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb98480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb98610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb987a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb98930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb98ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb98c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb98de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb97340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb97660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb97a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb97c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb94d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb94d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb920e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb92270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb92400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb92590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb92720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb928b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb92a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb92bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb92d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb91020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb91340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb91760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb8e740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb8e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb8eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb8ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb8ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb8d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb8d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb8d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb8d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb8d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb8d980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb8db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb8dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb8de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb8c120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb8c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb89100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb89100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb89480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb89610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb897a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb89930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb89ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb89c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb89de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb88020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb881b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb88340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb884d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb88660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb887f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb88a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb88c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb85d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb85d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb840e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb84270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb84400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb84590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb84720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb848b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb84a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb84bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb84d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb83020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb831b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb83340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb834d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb83760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb838f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb80740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb80740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb80ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb80c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb80de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb7f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb7f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb7f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb7f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb7f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb7f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb7f980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb7fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb7fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb7fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb7e120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb7e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb7b100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb7b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb7b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb7b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb7b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb7b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb7bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb7bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb7bde0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb7a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb7a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb7a340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb7a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb7a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb7a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb7aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb7ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb77d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb77d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb760e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb76270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb76400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb76590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb76720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb768b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb76a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb76bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb76d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb75020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb75340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb75760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb72740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb72ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb72c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb72de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb71020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb71340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb714d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb71660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb71980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb71b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb71ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb71e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb70120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb6d100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb6d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb6d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb6d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb6d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb6d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb6dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb6dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb6dde0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb6b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb6b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb6b340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb6b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb6b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb6b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb6ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb6bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb68d10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb68d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb670e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb67270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb67400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb67590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb67720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb678b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb67a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb67bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb67d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb66020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb661b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb66340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb664d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb66760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb63740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb63740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb63ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb63c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb63de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb62020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb621b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb62340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb624d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb62660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb627f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb62980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb62b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb62ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb62e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb61120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb5e100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb5e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb5e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb5e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb5e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb5e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb5eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb5ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb5ede0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb5d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb5d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb5d340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb5d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb5d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb5d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb5da80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb5dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb5ad10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb5ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb590e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb59270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb59400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb59590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb59720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb598b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb59a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb59bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb59d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb58020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb581b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb58340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb584d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb58760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb55740" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb55740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb55ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb55c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb55de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb54020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb54340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb544d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb54660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb547f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb54980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb54b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb54ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb54e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb53120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb50100" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb50100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb50480"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb50610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb507a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb50930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb50ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb50c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb50de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb4f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb4f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb4f340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb4f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb4f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb4f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb4fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb4fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9bbbb4cd10" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f9bbbb4cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbb4b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbb4b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbb4b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbb4b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbb4b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbb4b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbb4ba40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbb4bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbb4bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbb4a020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbb4a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbb4a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbb4a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbb4a760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbb4a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbbad22f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbbad22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbad2670"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbad2800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbad2990"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbad2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbad2cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbad2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbad1020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbad11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbad1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbad14d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbad1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbad17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbad1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbad1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbad1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbbae3020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbbae3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbae33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbae3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbae36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbae3850"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbae39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbae3b70"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbae3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbad2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbbacede0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbbacede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbacd180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbacd310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbacd4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbacd630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbacd7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbacd950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbacdae0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbacdc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbacde00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbacc020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbacc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbacc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbacc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbacc760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbacc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbbacfb90" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbbacfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbace020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbace1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbace340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbace4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbace660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbace7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbace980"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbaceb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbbac9930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbbac9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbac9cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbac9e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbbac8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbac81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbac8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbbac84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbac8660"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbac87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbbac8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbbac8b10"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbac8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbbac8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbbac7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbbac72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbac7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbbaca710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbbaca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbbacaa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbbacac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbbacadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbbac9020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbbac91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbbac9340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbbac94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbbac9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9bbabb5020" loc="49:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bbabb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbabb53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbabb5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbabb56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbabb5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbabb59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bbabb5c30" loc="50:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbabb5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbabb4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbabb41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbabb4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbabb44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbabb4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bbabb48b0" loc="51:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbabb48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbabb4c30"/>
        <function-ref name="source" scoped="" ref="0x7f9bbabb4dc0"/>
        <function-ref name="address" scoped="" ref="0x7f9bbabb3020"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbabb31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbabb3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbabb34d0"/>
        <function-ref name="type" scoped="" ref="0x7f9bbabb3660"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbabb37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbabb3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbabb3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbabb3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f9bbabb2020" loc="52:../../../..//tos/system/AMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f9bbabb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbabb23a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbabb2530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbabb26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9bba6aea40" loc="49:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bba6aea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bba6aedc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bba6ad020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bba6ad1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bba6ad340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bba6ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bba6ad720" loc="50:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bba6ad720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bba6adaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bba6adc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bba6addc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bba6ac020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bba6ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bba6ac400" loc="51:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bba6ac400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bba6ac780"/>
        <function-ref name="source" scoped="" ref="0x7f9bba6ac910"/>
        <function-ref name="address" scoped="" ref="0x7f9bba6acaa0"/>
        <function-ref name="destination" scoped="" ref="0x7f9bba6acc30"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bba6acdc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bba6ab020"/>
        <function-ref name="type" scoped="" ref="0x7f9bba6ab1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f9bba6ab340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bba6ab4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bba6ab660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bba6ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f9bba6aba80" loc="52:../../../..//tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f9bba6aba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bba6abe00"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bba6aa020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bba6aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9bba6a1a20" loc="44:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bba6a1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bba6a1da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bba69f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bba69f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bba69f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bba69f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f9bba69f780" loc="46:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bba69f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bba69fb00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bba69fc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bba69fe20"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bba69e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bba69e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f9bba69e400" loc="47:../../../..//tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReceivingBuffer_AppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bba69e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bba69e780"/>
        <function-ref name="source" scoped="" ref="0x7f9bba69e910"/>
        <function-ref name="address" scoped="" ref="0x7f9bba69eaa0"/>
        <function-ref name="destination" scoped="" ref="0x7f9bba69ec30"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bba69edc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bba69d020"/>
        <function-ref name="type" scoped="" ref="0x7f9bba69d1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f9bba69d340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bba69d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bba69d660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bba69d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbba7a940" loc="43:../../../..//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbba7a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbba7acc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbba7ae50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbba77020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbba771b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbba77340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f9bbba2d400" loc="48:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bbba2d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbba2d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbba2d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbba2dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbba2dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbba2dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbba2e4b0" loc="46:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbba2e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbba2e850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbba2e9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbba2eb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbba2ed00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbba2d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f9bbba2b720" loc="50:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbba2b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbba2baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbba2bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbba2bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbba2a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbba2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f9bbba2a480" loc="169:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f9bbba2a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbba2a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbba2a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f9bbba2ac60" loc="126:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f9bbba2ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbba28020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbba281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f9bbba2c060" loc="49:../../../..//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba2c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbba2c3e0"/>
        <function-ref name="source" scoped="" ref="0x7f9bbba2c570"/>
        <function-ref name="address" scoped="" ref="0x7f9bbba2c700"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbba2c890"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbba2ca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbba2cbb0"/>
        <function-ref name="type" scoped="" ref="0x7f9bbba2cd40"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbba2b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbba2b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbba2b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbba2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9bbba24140" loc="61:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f9bbba24140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbba244c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbba24650"/>
        <function-ref name="start" scoped="" ref="0x7f9bbba247e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbba24970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9bbba231d0" loc="63:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bbba231d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbba23550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbba236e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbba23870"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbba23a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbba23b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f9bbba21020" loc="65:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f9bbba21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbba213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bbba21630" loc="67:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbba21630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbba219b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbba21b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbba21cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbba21e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbba20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f9bbba19cd0" loc="70:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbba19cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbba1c2e0"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbba1ca10"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbba1db60"/>
        <function-ref name="set" scoped="" ref="0x7f9bbba13170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9bbba08b20" loc="72:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbba08b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9bbba0e020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9bbba0e1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9bbba0e340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9bbba0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbba223f0" loc="64:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbba223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbba22770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9bbba1f990" loc="69:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbba1f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbba1fd10"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbba1e020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbba1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bbba202d0" loc="68:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbba202d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbba20650"/>
        <function-ref name="source" scoped="" ref="0x7f9bbba207e0"/>
        <function-ref name="address" scoped="" ref="0x7f9bbba20970"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbba20b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbba20c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbba20e20"/>
        <function-ref name="type" scoped="" ref="0x7f9bbba1f020"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbba1f1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbba1f340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbba1f4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbba1f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f9bbba13dc0" loc="71:../../../..//tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbba13dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbba113f0"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbba11b20"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbba12ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbba0f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9bbb9fb880" loc="55:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9fb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbb9fbc00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbb9fbd90"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb9fa020"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb9fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f9bbb9e1d40" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9e1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbb9ea0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbb9ea270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbb9ea400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbb9ea590"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbb9ea720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbb9ea8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f9bbb9d4d20" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f9bbb9d4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f9bbb9de1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bbb9f5760" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbb9f5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb9f5ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbb9f5c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9f5e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9f4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbb9f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9bbb9fa980" loc="56:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bbb9fa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb9fad00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9f9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9f91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb9f9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb9f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f9bbb9f7900" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f9bbb9f7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbb9f7c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f9bbb9ec970" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9ec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbb9eccf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbb9ece80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbb9f3030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbb9f31c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbb9f3350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbb9f34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9bbb9eabb0" loc="65:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbb9eabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9bbb9e0020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9bbb9e01b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9bbb9e0340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9bbb9e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbb9f9cb0" loc="57:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbb9f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbb9f70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9bbb9f3810" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9f3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbb9f3b90"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbb9f3d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbb9f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f9bbb9df020" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f9bbb9df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f9bbb9df3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f9bbb9df530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f9bbb9df6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f9bbb9df850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f9bbb9df9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bbb9f6020" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbb9f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbb9f63a0"/>
        <function-ref name="source" scoped="" ref="0x7f9bbb9f6530"/>
        <function-ref name="address" scoped="" ref="0x7f9bbb9f66c0"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbb9f6850"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbb9f69e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbb9f6b70"/>
        <function-ref name="type" scoped="" ref="0x7f9bbb9f6d00"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbb9f5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbb9f51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbb9f5340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbb9f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f9bbb9e8a80" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbb9e8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f9bbb9e8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9bbb9d7b70" loc="43:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9d7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbb9d1020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbb9d11b0"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb9d1340"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb9d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f9bbb9c5080" loc="55:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbb9c5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f9bbb9c5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f9bbb9c42e0" loc="57:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f9bbb9c42e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f9bbb9c4660"/>
        <function-ref name="setRetries" scoped="" ref="0x7f9bbb9c47f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f9bbb9c4980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f9bbb9c4b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f9bbb9c4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f9bbb9c7670" loc="53:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbb9c79f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbb9c7b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbb9c7d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbb9c6020"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbb9c61b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbb9c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f9bbb9c9170" loc="50:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbb9c9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb9c94f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9c9680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9c9810"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb9c99a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb9c9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9bbb9c5700" loc="56:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbb9c5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9bbb9c5a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9bbb9c5c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9bbb9c5da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9bbb9c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f9bbb9cfd30" loc="47:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f9bbb9cfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbb9ca0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f9bbb9c6670" loc="54:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbb9c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbb9c69f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbb9c6b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbb9c6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb9d0210" loc="45:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb9d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb9d0590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb9d0720"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb9d08b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb9d0a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb9d0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f9bbb9cf020" loc="46:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f9bbb9cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb9cf3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9cf530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9cf6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb9cf850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb9cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f9bbb9ca420" loc="48:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f9bbb9ca420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb9ca7a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbb9ca930"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9caac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9cac50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbb9cade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f9bbb9c7020" loc="51:../../../..//tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbb9c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbb9c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9bbb9c39f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9c39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbb9c3d70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbb9c0020"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb9c01b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb9c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f9bbb9bf990" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9bf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbb9bfd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbb9be020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbb9be1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbb9be340"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbb9be4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbb9be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbb9c0600" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbb9c0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb9c0980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9c0b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9c0ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb9c0e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb9bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbb9bf300" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbb9bf300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbb9bf680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9bbb9bb690" loc="39:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f9bbb9bb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbb9bba10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbb9bbba0"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb9bbd30"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb9ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f9bbb9b9020" loc="41:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb9b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbb9b93a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbb9b9530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbb9b96c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbb9b9850"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbb9b99e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbb9b9b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f9bbb9afae0" loc="47:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f9bbb9afae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbb9afe60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbb9ac020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbb9ac1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbb9ac340"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbb9ac4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbb9ac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f9bbb9a2020" loc="50:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb9a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbb9a23a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbb9a2530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbb9a26c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbb9a2850"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbb9a29e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbb9a2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f9bbb9a6d30" loc="46:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f9bbb9a6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb9af0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb9af270"/>
        <function-ref name="modify" scoped="" ref="0x7f9bbb9af400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb9af590"/>
        <function-ref name="resend" scoped="" ref="0x7f9bbb9af720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbb9ba2e0" loc="40:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbb9ba2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb9ba660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb9ba7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbb9ba980"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb9bab10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb9baca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f9bbb9a5020" loc="48:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f9bbb9a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f9bbb9a53a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f9bbb9a5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f9bbb9b6020" loc="45:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f9bbb9b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbb9b63a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb9b6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbb99b660" loc="51:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbb99b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb99b9e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbb99bb70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbb99bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f9bbb9b03f0" loc="44:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb9b03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f9bbb9b0770"/>
        <function-ref name="rfOff" scoped="" ref="0x7f9bbb9b0900"/>
        <function-ref name="rxOn" scoped="" ref="0x7f9bbb9b0a90"/>
        <function-ref name="startVReg" scoped="" ref="0x7f9bbb9b0c20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f9bbb9b0db0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f9bbb9b7020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f9bbb9b71b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f9bbb9b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbb9a57f0" loc="49:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbb9a57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbb9a5b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbb9a5d00"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbb9a4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbb9a41b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbb9a4340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb9a44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbb9a4660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbb9a4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb9a47f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbb9a4980"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbb9a4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9bbb9b9e60" loc="43:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb9b9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb9b8210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb9b83a0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb9b8530"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb9b86c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb9b8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f9bbb996e40" loc="52:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f9bbb996e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbb99f310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbb99f4a0"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbb99f630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbb99f7c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbb99f950"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbb99fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f9bbb9919e0" loc="76:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f9bbb9919e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb991d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb990020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f9bbb992a10" loc="75:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f9bbb992a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb992d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb991020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f9bbb993a00" loc="74:../../../..//tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f9bbb993a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb993d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f9bbb939b80" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbb939b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f9bbb945020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f9bbb9451b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f9bbb945340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f9bbb9454d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f9bbb945660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f9bbb9457f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9bbb945980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f9bbb945b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f9bbb945ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f9bbb945e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f9bbb944020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f9bbb9441b0"/>
        <function-ref name="sync" scoped="" ref="0x7f9bbb944340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9bbb9445d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f9bbb944760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f9bbb936020" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f9bbb936020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb936c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb9330d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f9bbb944a60" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb944a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f9bbb944de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f9bbb938020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f9bbb9381b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f9bbb938340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f9bbb9384d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f9bbb938660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f9bbb9387f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f9bbb938980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb949720" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb949720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb949aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb949c30"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb949dc0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb946020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb9461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f9bbb92e970" loc="46:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbb92e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f9bbb92ecf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f9bbb92ee80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f9bbb92d030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f9bbb92d1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f9bbb92d350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f9bbb92d4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9bbb92d670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f9bbb92d800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f9bbb92d990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f9bbb92db20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f9bbb92dcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f9bbb92de40"/>
        <function-ref name="sync" scoped="" ref="0x7f9bbb92c020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9bbb92c2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f9bbb92c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f9bbb9068e0" loc="66:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb9068e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb906c60"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb906df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f9bbb928020" loc="50:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f9bbb9283a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f9bbb91fd90" loc="52:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f9bbb91fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbb91e670"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb9255d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bbb91e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbb925a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bbb91eb30"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb927bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb925110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f9bbb90a5f0" loc="64:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb90a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb90a970"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb90ab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f9bbb91b380" loc="54:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f9bbb91b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb91b700"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb91b890"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb91ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb91bbb0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb91bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb91a020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb91a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb91a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f9bbb92bb40" loc="48:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f9bbb92bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb92a750"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb92abd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f9bbb8f5820" loc="126:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f9bbb8f5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb8f5ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb8f5d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f9bbb9051c0" loc="67:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f9bbb9051c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb905540"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb9056d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f9bbb905a70" loc="68:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb905a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb905df0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb904020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f9bbb90f3d0" loc="62:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb90f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb90f750"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb90f8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f9bbb910810" loc="57:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbb910810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f9bbb910b90"/>
        <function-ref name="changed" scoped="" ref="0x7f9bbb910d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f9bbb917020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f9bbb9171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f9bbb91c060" loc="53:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f9bbb91c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb91c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb91c570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb91c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb91c890"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb91ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb91cbb0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb91cd40"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb91b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f9bbb903120" loc="71:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb903120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb9036a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f9bbb91a6a0" loc="55:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f9bbb91a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb91aa20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb91abb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb91ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb919020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb9191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb919340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb9194d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb919660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbb92f4a0" loc="44:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbb92f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbb92f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f9bbb906020" loc="65:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb906020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb9063a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb906530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f9bbb903a40" loc="72:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb903a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb903dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f9bbb9021d0" loc="74:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f9bbb9021d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb902550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb9026e0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb902870"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb902a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb902b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f9bbb900d90" loc="76:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f9bbb900d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb8ff180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb8ff310"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb8ff4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb8ff630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb8ff7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f9bbb92c740" loc="47:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f9bbb92c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f9bbb92cac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f9bbb92cc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f9bbb92cde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f9bbb92b020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f9bbb92b1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f9bbb92b340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f9bbb92b4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f9bbb92b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f9bbb90fc80" loc="63:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb90fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb90a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb90a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f9bbb908b00" loc="61:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb908b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb908e80"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb90f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f9bbb9012b0" loc="69:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f9bbb9012b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb901630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbb8ffa80" loc="78:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbb8ffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbb8ffe00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbb8fe020"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbb8fe1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbb8fe340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbb8fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb8fe660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbb8fe7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbb8fee30"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb8fe980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbb8feb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbb8feca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f9bbb8f6940" loc="125:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f9bbb8f6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb8f6cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb8f6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb92fb10" loc="45:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb92fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb92e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb92e1b0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb92e340"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb92e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb92e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f9bbb914520" loc="60:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f9bbb914520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb9148a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb914a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f9bbb90ba90" loc="59:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb90ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb914020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb9141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f9bbb9180e0" loc="56:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f9bbb9180e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb918460"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb9185f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9bbb918780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9bbb918910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f9bbb900020" loc="75:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f9bbb900020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb9003a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb900530"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb9006c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb900850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb9009e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f9bbb9019c0" loc="70:../../../..//tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb9019c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb901d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbb87f7e0" loc="45:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbb87f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbb87fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f9bbb87c220" loc="46:../../../..//tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb87c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbb879b30"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb87aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bbb8794e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbb879020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bbb878020"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb87a090"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb87a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbb876490" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbb876490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbb876810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f9bbb876d20" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f9bbb876d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbb77d670"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb77e550"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bbb77d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbb77ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bbb77db30"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb77fb60"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb77e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba63ade0" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba63ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba6366e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba6376b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba636090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba637b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba636ba0"/>
        <function-ref name="start" scoped="" ref="0x7f9bba639ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba6371f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bba63a590" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bba63a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bba63a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba631020" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba631020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba62f870"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba630840"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba62f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba630d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba62fd30"/>
        <function-ref name="start" scoped="" ref="0x7f9bba631e30"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba630380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bba632640" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bba632640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bba6329c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f9bba6058f0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba6058f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bba605c70"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bba605e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bba604020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bba6041b0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba604340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f9bba609e70" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba609e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bba607220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bba6073b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba607540"/>
        <function-ref name="get" scoped="" ref="0x7f9bba6076d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba607860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bba6079f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bba607b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bba607d10"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bba606020"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bba6061b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bba606340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f9bba6065d0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba6065d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bba606950"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bba606ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba606c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bba606e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bba605020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba6051b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bba605340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bba6054d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bba605660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f9bbb854ba0" loc="52:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bbb854ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbb852020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bbb8521b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bbb852340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bbb8524d0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb852660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f9bbb8574d0" loc="50:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb8574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb857850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbb8579e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbb857b70"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb857d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbb856020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb8561b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb856340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb8564d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb856660"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbb8567f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbb856980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f9bbb855280" loc="51:../../../..//tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb855280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbb855600"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbb855790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbb855920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbb855ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbb855c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbb855dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbb854020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbb8541b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbb854340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f9bba5fb760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba5fb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bba5fbae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bba5fbc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bba5fbe00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bba5fa020"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba5fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f9bba5fedd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba5fedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bba5fd180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bba5fd310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba5fd4a0"/>
        <function-ref name="get" scoped="" ref="0x7f9bba5fd630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba5fd7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bba5fd950"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bba5fdae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bba5fdc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bba5fde00"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bba5fc020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bba5fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba602bd0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba602bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba5fe4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba5ff4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba5ffe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba5ff9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba5fe9a0"/>
        <function-ref name="start" scoped="" ref="0x7f9bba600a80"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba5ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bba602340" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bba602340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bba6026c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f9bba5fc440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba5fc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bba5fc7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bba5fc950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba5fcae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bba5fcc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bba5fce00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba5fb020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bba5fb1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bba5fb340"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bba5fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9bbb802020" loc="43:../../../..//tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbb802020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb802e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb801800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb801340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb801cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f9bbb7f9020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f9bbb7f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb7f9e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb7f8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb7f8340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb7f8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f9bbb7e52c0" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb7e52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb7e5640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbb7e57d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbb7e5960"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7e5af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbb7e5c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb7e5e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb7e4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb7e41b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb7e4340"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbb7e44d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbb7e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9bbb7f40a0" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbb7f40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb7e7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb7e79a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb7e74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb7e7e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f9bbb7c3540" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f9bbb7c3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb7c23d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb7c2d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb7c2890"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb7c1260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9bbb7c60f0" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbb7c60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb7c5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb7c59a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb7c54e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb7c5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba62b1d0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba62b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba629b30"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba62a9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba6294e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba629020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba614020"/>
        <function-ref name="start" scoped="" ref="0x7f9bba62a020"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba62a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f9bba611b90" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f9bba611b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba60e4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba60f4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba60fe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba60f9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba60e9a0"/>
        <function-ref name="start" scoped="" ref="0x7f9bba6109d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba60f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9bba614690" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bba614690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bba6135b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bba611020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bba613a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bba6114e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f9bbb775090" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f9bbb775090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb775410"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb7755a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb775730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7758c0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb775a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb775be0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb775d70"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb774020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f9bbb774390" loc="45:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f9bbb774390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb774710"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb7748a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb774a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb774bc0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb774d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb773020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb773340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f9bbb7736a0" loc="46:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f9bbb7736a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb773a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb773bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb773d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb772020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb772340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7724d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb772660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f9bbb777e60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f9bbb777e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb776210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb7763a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb776530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7766c0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb776850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb7769e0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb776b70"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb776d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f9bbb771ce0" loc="48:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f9bbb771ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb7700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb770230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb7703c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb770550"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7706e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb770870"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb770a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb770b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f9bbb77ac70" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f9bbb77ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb777020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb7771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb777340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7774d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb777660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb7777f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb777980"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb777b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f9bbb7729b0" loc="47:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f9bbb7729b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb772d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb771020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb7711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb771340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb771660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7717f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb771980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb76d2f0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb76d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb76d670"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb76d800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb76d990"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb76db20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb76dcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb76de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb76c020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb76c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb76c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb76c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb76c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb76c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb76c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb76cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb76cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb76e020" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb76e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb76e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb76e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb76e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb76e850"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb76e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb76eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb76ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb76d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb769de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb769de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb768180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb768310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb7684a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb768630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7687c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb768950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb768ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb768c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb768e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb767020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb767340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb7674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb767760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb7678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb76ab60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb76ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb769020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb7691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb769340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7694d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb769660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb7697f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb769980"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb769b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb763930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb763930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb763cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb763e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb762020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb7621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb762340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb7624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb762660"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7627f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb762980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb762b10"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb762ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb762e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb761020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb7612b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb761440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb764710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb764710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb764a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb764c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb764db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb763020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb763340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7634d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb763660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb75e480" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb75e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb75e800"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb75e990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb75eb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb75ecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb75ee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb75d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb75d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb75d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb75d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb75d660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb75d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb75d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb75db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb75dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb75c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb75f1d0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb75f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb75f550"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb75f6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb75f870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb75fa00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb75fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb75fd20"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb75e020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb75e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb759020" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb759020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb7593a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb759530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb7596c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb759850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb759b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb759d00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb758020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb7581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb758340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb758660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb7587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb758a80"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb758c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb75bd70" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb75bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb75a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb75a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb75a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb75a630"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb75a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb75a950"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb75aae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb75ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb755de0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb755de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb754180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb754310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb7544a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb754630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7547c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb754950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb754ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb754c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb754e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb753020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb753340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb7534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb753760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb7538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb756b60" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb756b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb755020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb7551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb755340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb7554d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb755660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb7557f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb755980"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb755b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb750930" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb750930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb750cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb750e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb74e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb74e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb74e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb74e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb74e660"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb74e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb74e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb74eb10"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb74eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb74ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb74d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb74d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb74d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb751710" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb751710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb751a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb751c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb751db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb750020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb7501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb750340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb7504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb750660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f9bbb737150" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f9bbb737150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f9bbb7374d0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb737660"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbb7377f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f9bbb737980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f9bbb737d60" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f9bbb737d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb736180"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb736310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9bbb7364a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9bbb736630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f9bbb736a20" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f9bbb736a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb736da0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb733020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9bbb7331b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9bbb733340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f9bbb71d8f0" loc="42:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f9bbb71d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bbb71dc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f9bbb71de00"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbb71c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb71c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb71c340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f9bbb71c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f9bbb730a20" loc="40:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f9bbb730a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f9bbb730da0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb71e020"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbb71e1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f9bbb71e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f9bbb71e5d0" loc="41:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bbb71e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bbb71e950"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bbb71eae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbb71ec70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bbb71ee00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bbb71d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbb71d1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bbb71d340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bbb71d4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bbb71d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f9bbb71c7a0" loc="43:../../../..//tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb71c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb71cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb71ccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb71ce40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb71b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb71b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb71b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb71b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb71b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb71b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb71b980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb71bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb71bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb71be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb71a120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb71a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f9bbb70d8a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f9bbb70d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb70dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb70ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb70c020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb70c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb70c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb70c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f9bbb703a30" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f9bbb703a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb703db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb702020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb7021b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb702340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb7024d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb702660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f9bbb70a8a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f9bbb70a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb70ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb70adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb709020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7091b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb709340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f9bbb7088a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f9bbb7088a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb708c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb708db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb707020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7071b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb707340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f9bbb7138a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f9bbb7138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb713c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb713db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb70e020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb70e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb70e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb70e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f9bbb7058a0" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f9bbb7058a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb705d20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb704020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb7041b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb704340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb7044d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb704660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f9bbb70c8a0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f9bbb70c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb70cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb70cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb70b020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb70b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb70b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb70b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f9bbb702a30" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f9bbb702a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb702db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb700020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb7001b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb700340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb7004d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb700660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f9bbb70f8f0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f9bbb70f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb70fc70"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb70fe00"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb714020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7141b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb714340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f9bbb7078a0" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f9bbb7078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb707c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb707db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb706020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7061b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb706340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f9bbb70e8a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f9bbb70e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb70ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb70edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb70d020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb70d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb70d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb70d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f9bbb704a30" loc="57:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f9bbb704a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb704db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb703020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb7031b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb703340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb7034d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb703660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f9bbb70b8a0" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f9bbb70b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb70bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb70bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb70a020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb70a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb70a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb70a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f9bbb7098a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f9bbb7098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb709c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb709db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb708020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7081b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb708340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f9bbb7148a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f9bbb7148a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb714c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb714db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb713020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7131b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb713340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f9bbb7068a0" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f9bbb7068a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb706c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb706db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb705020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb7051b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb705340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb7054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f9bbb6f98a0" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f9bbb6f98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f8020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f9bbb6efa30" loc="55:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f9bbb6efa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6efdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6ee020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6ee1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6ee340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6ee4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f9bbb6f68a0" loc="46:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f9bbb6f68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f5020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f9bbb6f48a0" loc="50:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f9bbb6f48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f3020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f9bbb6fb8a0" loc="41:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f9bbb6fb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6fbc20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6fbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6fa020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6fa1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6fa340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f9bbb6f18a0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f9bbb6f18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f1d20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f0020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f01b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f0340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f9bbb6f88a0" loc="44:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f9bbb6f88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f7020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f9bbb6eea30" loc="56:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f9bbb6eea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6eedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6ed020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6ed1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6ed340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6ed4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f9bbb6ff810" loc="39:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f9bbb6ff810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6ffb90"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6ffd20"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6fc020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6fc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6fc340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f9bbb6f38a0" loc="51:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f9bbb6f38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f2020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f9bbb6fa8a0" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f9bbb6fa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6fac20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6fadb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f9020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f91b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f9340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f9bbb6f0a30" loc="54:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f9bbb6f0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f0db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6ef020"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6ef1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6ef340"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6ef4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f9bbb6f78a0" loc="45:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f9bbb6f78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f6020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f9bbb6f58a0" loc="49:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f9bbb6f58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f5c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f4020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f9bbb6fc8a0" loc="40:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f9bbb6fc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6fcc20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6fcdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6fb020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6fb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6fb340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f9bbb6f28a0" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f9bbb6f28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb6f2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb6f2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb6f1020"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb6f11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb6f1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb6f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f9bbb61a610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f9bbb61a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb61a990"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb61ab20"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb61acb0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb61ae40"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb60d020"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb60d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f9bbb61ba30" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f9bbb61ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb61bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb61a020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9bbb61a1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9bbb61a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f9bbb60b610" loc="46:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f9bbb60b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb60b990"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb60bb20"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb60bcb0"/>
        <function-ref name="edge" scoped="" ref="0x7f9bbb60be40"/>
        <function-ref name="enable" scoped="" ref="0x7f9bbb60a020"/>
        <function-ref name="getValue" scoped="" ref="0x7f9bbb60a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f9bbb60ca70" loc="45:../../../..//tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f9bbb60ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb60cdf0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb60b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9bbb60b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9bbb60b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f9bbb1bde50" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb1bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bc410"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bc5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f9bbb1c7160" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f9bbb1c7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f9bbb1c1e50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb1c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1c0210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f9bbb1bb880" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb1bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bbc00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f9bbb1b30a0" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f9bbb1b30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b3420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f9bbb1ba0a0" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f9bbb1ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ba420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1ba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f9bbb1a5500" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbb1a5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1a5880"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f9bbb1a9500" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbb1a9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1a9880"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f9bbb1c6490" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb1c6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f9bbb1af880" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f9bbb1af880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1afc00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1afd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f9bbb1ab500" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb1ab500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ab880"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1aba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f9bbb1c0e50" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f9bbb1c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bf210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f9bbb1bfe50" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb1bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bd210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f9bbb1b5880" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbb1b5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b5c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f9bbb1b60a0" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f9bbb1b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b6420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f9bbb1ba880" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb1ba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bac00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbb1c9a90" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb1c9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbb1c9e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbb1c8020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbb1c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f9bbb1c5e00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb1c5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f9bbb1c3490" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f9bbb1c3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f9bbb1aec80" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbb1aec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ad0a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1ad230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f9bbb1c3be0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbb1c3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f9bbb1abce0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbb1abce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1a90a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f9bbb1c5160" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb1c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f9bbb1af0a0" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f9bbb1af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1af420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1af5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f9bbb1bf670" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbb1bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f9bbb1c0670" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb1c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1c09f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1c0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f9bbb1c8ad0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb1c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f9bbb1b10a0" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbb1b10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b1420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f9bbb1b3880" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f9bbb1b3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b3c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f9bbb1b1880" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbb1b1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b1c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f9bbb1a6ce0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb1a6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1a50a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f9bbb1a9ce0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbb1a9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1a60a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f9bbb1b6880" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f9bbb1b6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b6c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f9bbb1b20a0" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f9bbb1b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b2420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f9bbb1acce0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbb1acce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ab0a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1ab230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f9bbb1b9880" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbb1b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b9c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f9bbb1a5ce0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbb1a5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb1a40a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb1a4230"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a43c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb1a4550"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb1a46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f9bbb1c8480" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbb1c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f9bbb1c1670" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f9bbb1c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1c19f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f9bbb1bd670" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbb1bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f9bbb1b40a0" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbb1b40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b4420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f9bbb1b90a0" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb1b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b9420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f9bbb1b4880" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbb1b4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b4c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f9bbb1bc870" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb1bc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bcbf0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bcd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f9bbb1c77b0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f9bbb1c77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f9bbb1bb0a0" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb1bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1bb420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1bb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb1cae20" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb1cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb1c91c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb1c9350"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb1c94e0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb1c9670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb1c9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f9bbb1c22f0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbb1c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f9bbb1c1020" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f9bbb1c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f9bbb1ac500" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f9bbb1ac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ac880"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1aca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f9bbb1adce0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb1adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ac0a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1ac230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f9bbb1c57b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbb1c57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f9bbb1ad500" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbb1ad500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ad880"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1ada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f9bbb1a6500" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f9bbb1a6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1a6880"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f9bbb1b50a0" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbb1b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b5420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f9bbb1b2880" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f9bbb1b2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b2c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f9bbb1c7e00" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f9bbb1c7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f9bbb1c6ae0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb1c6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f9bbb1b80a0" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbb1b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b8420"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f9bbb1c2940" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f9bbb1c2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1c2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f9bbb1b8880" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f9bbb1b8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1b8c00"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1b8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f9bbb1ae0a0" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f9bbb1ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1ae820"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1ae9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f9bbb1a49b0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb1a49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb1a4d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb1a3020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1a31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb1a3340"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb1a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f9bbb5ca630" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5ca630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb5ca9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb5cab40"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb5cacd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb5cae60"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb5c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbb5cc680" loc="40:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5cc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbb5cca00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbb5ccb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbb5ccd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f9bbb5c98c0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f9bbb5c98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb5c9c40"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb5c9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f9bbb5c86f0" loc="43:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f9bbb5c86f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb5c8a70"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb5c8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb5cf960" loc="39:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb5cf960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb5cfce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb5cfe70"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb5cc030"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb5cc1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb5cc350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f9bbb5c7510" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5c7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb5c7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f9bbb5b1680" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb5b1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb5b1a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb5b1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f9bbb5c1bb0" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f9bbb5c1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb5c0020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb5c01b0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb5c0340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb5c04d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb5c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbb5c5920" loc="44:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb5c5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbb5c5ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbb5c5e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbb5c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f9bbb5ba080" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb5ba080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9bbb5ba400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f9bbb5b9020" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f9bbb5b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbb5b93a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbb5b9530"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbb5b96c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbb5b9850"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbb5b99e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbb5b9b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f9bbb5bc400" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f9bbb5bc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb5bc780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb5bc910"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb5bcaa0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb5bcc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb5bcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f9bbb5bf020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f9bbb5bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb5bf3a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb5bf530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f9bbb5bfdb0" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f9bbb5bfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb5be180"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb5be310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbb5b9df0" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbb5b9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbb5b81c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbb5b8350"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbb5b84e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbb5b8670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbb5b8800"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb5b8990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbb5b8b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbb5b21b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb5b8cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbb5b8e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbb5b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb5c2810" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb5c2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb5c2b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb5c2d20"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb5c1020"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb5c11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb5c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f9bbb5ac120" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f9bbb5ac120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb5ac4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb5ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f9bbb5beba0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f9bbb5beba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb5bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f9bbb551770" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbb551770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbb551af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbb551c80"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbb551e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbb54e020"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbb54e1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbb54e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f9bbb54d280" loc="66:../../../..//tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbb54d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbb54d600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbb54d790"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbb54d920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbb54dab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbb54dc40"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbb54ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbb549020" loc="66:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbb549020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbb5493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f9bbb549b70" loc="67:../../../..//tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbb549b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbb548020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbb5481b0"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbb548340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbb5484d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbb548660"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbb5487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9bbb1f0020" loc="44:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb1f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb1f03a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb1f0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9bbb52f8f0" loc="43:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb52f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9bbb52fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb530c40" loc="42:../../../..//tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb530c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb52f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb52f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb52f340"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb52f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb52f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9bba51f8f0" loc="82:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba51f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9bba51fc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bba51fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9bba51d2b0" loc="87:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f9bba51d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bba51d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bba51d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f9bba51da50" loc="89:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bba51da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f9bba51ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9bba51e0c0" loc="83:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f9bba51e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9bba51e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bba521c30" loc="81:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bba521c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bba51f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bba51f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f9bba51f340"/>
        <function-ref name="granted" scoped="" ref="0x7f9bba51f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bba51f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9bba51e6d0" loc="85:../../../..//tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bba51e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9bba51ea50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9bba51ebe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9bba51ed70"/>
        <function-ref name="write" scoped="" ref="0x7f9bba51d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f9bbb4ca5e0" loc="74:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb4ca5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9bbb4ca960"/>
        <function-ref name="configure" scoped="" ref="0x7f9bbb4caaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9bbb4c6510" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb4c6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb4c6890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb4c6a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f9bbb4c4600" loc="80:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bbb4c4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f9bbb4c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9bbb4cadd0" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb4cadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9bbb4c9180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f9bbb4c5370" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f9bbb4c5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb4c56f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb4c5880"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb4c5a10"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb4c5ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb4c5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb4d0a20" loc="73:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb4d0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb4d0da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb4cb020"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb4cb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb4cb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb4cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9bbb4c9480" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bbb4c9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9bbb4c9800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9bbb4c9990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9bbb4c9b20"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb4c9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f9bbb4c06a0" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f9bbb4c06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb4c0a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb4c0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f9bbb44fc40" loc="76:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb44fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9bbb44e020"/>
        <function-ref name="configure" scoped="" ref="0x7f9bbb44e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9bbb44d700" loc="79:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f9bbb44d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb44daa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb44dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f9bbb44ce00" loc="82:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f9bbb44ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f9bbb44a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9bbb44e440" loc="77:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f9bbb44e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9bbb44e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f9bbb44a490" loc="83:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f9bbb44a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9bbb44a810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f9bbb44a9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f9bbb44ab30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f9bbb44acc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f9bbb44ae50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9bbb449020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f9bbb4491b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f9bbb449340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f9bbb4494d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f9bbb449660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f9bbb4497f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f9bbb449980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f9bbb449b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f9bbb449da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9bbb448020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f9bbb4481b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f9bbb448340"/>
        <function-ref name="isUart" scoped="" ref="0x7f9bbb4484d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9bbb448660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f9bbb4487f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f9bbb448980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9bbb448b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f9bbb448ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f9bbb448e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb447020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f9bbb4473b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f9bbb447540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f9bbb4476d0"/>
        <function-ref name="tx" scoped="" ref="0x7f9bbb447860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f9bbb4479f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f9bbb447b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9bbb447d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f9bbb446020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f9bbb4461b0"/>
        <function-ref name="rx" scoped="" ref="0x7f9bbb446340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f9bbb4464d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f9bbb446660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f9bbb4467f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f9bbb446980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f9bbb446b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbb4455a0" loc="85:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbb4455a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbb445920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbb445ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbb445c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbb445dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbb444020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb4441b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbb444340"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbb444980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb444660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbb4444d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbb4447f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f9bbb44c060" loc="81:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f9bbb44c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb44c400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb44c590"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb44c720"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb44c8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb44ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb450e80" loc="75:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb450e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb44f240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb44f3d0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb44f560"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb44f6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb44f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9bbb44ea50" loc="78:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9bbb44ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9bbb44edd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9bbb44d020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9bbb44d1b0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb44d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f9bbb446de0" loc="84:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f9bbb446de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb445180"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb445310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f9bbb444c50" loc="102:../../../..//tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f9bbb444c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbb443020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbb4431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f9bbb4348a0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f9bbb4348a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb434c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f9bbb4373b0" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f9bbb4373b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb437730"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb4378c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f9bbb43e860" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f9bbb43e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9bbb43ebe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f9bbb43ed70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f9bbb43b020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f9bbb43b1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f9bbb43b340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9bbb43b4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f9bbb43b660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f9bbb43b7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f9bbb43b980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f9bbb43bb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f9bbb43bca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f9bbb43be30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f9bbb43a020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f9bbb43a2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9bbb43a440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f9bbb43a5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f9bbb43a760"/>
        <function-ref name="isUart" scoped="" ref="0x7f9bbb43a8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9bbb43aa80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f9bbb43ac10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f9bbb43ada0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9bbb439020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f9bbb4391b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f9bbb439340"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb4394d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f9bbb439860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f9bbb4399f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f9bbb439b80"/>
        <function-ref name="tx" scoped="" ref="0x7f9bbb439d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f9bbb438020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f9bbb4381b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9bbb438340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f9bbb4384d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f9bbb438660"/>
        <function-ref name="rx" scoped="" ref="0x7f9bbb4387f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f9bbb438980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f9bbb438b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f9bbb438ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f9bbb438e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f9bbb437020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f9bbb3fa670" loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f9bbb3fa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb3fa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb3fab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb3fad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb3f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb3f91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb3f9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb3f94d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb3f9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb3f97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb3f9980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb3f9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb3f9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb3f9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb3f8120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb3f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f9bbb42edc0" loc="76:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb42edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb42d180"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb42d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f9bbb3f8670" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f9bbb3f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb3f89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb3f8b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb3f8d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb3f7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb3f71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb3f7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb3f74d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb3f7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb3f77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb3f7980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb3f7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb3f7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb3f7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb3f6120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb3f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f9bbb3f6670" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f9bbb3f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb3f69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb3f6b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb3f6d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb3f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb3f51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb3f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb3f54d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb3f5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb3f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb3f5980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb3f5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb3f5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb3f5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb3f4120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb3f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f9bbb432020" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f9bbb432020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9bbb4323a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f9bbb432530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f9bbb4326c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f9bbb432850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f9bbb4329e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9bbb432b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f9bbb432d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f9bbb431020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f9bbb4311b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f9bbb431340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f9bbb4314d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f9bbb431660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f9bbb4317f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f9bbb431a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9bbb431c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f9bbb431da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f9bbb430020"/>
        <function-ref name="isUart" scoped="" ref="0x7f9bbb4301b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9bbb430340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f9bbb4304d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f9bbb430660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9bbb4307f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f9bbb430980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f9bbb430b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb430ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f9bbb42f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f9bbb42f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f9bbb42f540"/>
        <function-ref name="tx" scoped="" ref="0x7f9bbb42f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f9bbb42f860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f9bbb42f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9bbb42fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f9bbb42fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f9bbb42e020"/>
        <function-ref name="rx" scoped="" ref="0x7f9bbb42e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f9bbb42e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f9bbb42e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f9bbb42e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f9bbb42e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f9bbb42e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f9bbb4045b0" loc="79:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f9bbb4045b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f9bbb404930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f9bbb404ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f9bbb404c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f9bbb404de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f9bbb42b020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f9bbb42b1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f9bbb42b340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f9bbb42b4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbb42b660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f9bbb42b7f0"/>
        <function-ref name="getData" scoped="" ref="0x7f9bbb42b980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f9bbb42bb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f9bbb42bca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f9bbb42a020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f9bbb42a1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f9bbb42a340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f9bbb42a4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f9bbb42a660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f9bbb42a7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f9bbb42a980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f9bbb42ab10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f9bbb42aca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f9bbb42ae30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f9bbb402020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f9bbb4021b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f9bbb402540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f9bbb4026d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f9bbb402860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f9bbb4029f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f9bbb402b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f9bbb402d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f9bbb401020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f9bbb4011b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f9bbb401340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f9bbb4014d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f9bbb401660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f9bbb4017f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f9bbb401980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f9bbb401b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f9bbb401ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f9bbb401e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f9bbb400020"/>
        <function-ref name="setData" scoped="" ref="0x7f9bbb4001b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f9bbb400340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f9bbb4004d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f9bbb400660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f9bbb4007f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f9bbb400980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f9bbb400b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f9bbb3ff420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f9bbb3ff5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f9bbb3ff740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f9bbb3ff8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f9bbb3ffa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f9bbb3ffbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f9bbb3ffd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f9bbb3fe020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f9bbb3fe1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f9bbb3fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f9bbb3fc670" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f9bbb3fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb3fc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb3fcb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb3fcd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb3fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb3fb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb3fb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb3fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb3fb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb3fb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb3fb980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb3fbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb3fbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb3fbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb3fa120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb3fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f9bbb42d750" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb42d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb42dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f9bbb3fe700" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f9bbb3fe700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb3fea80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb3fec10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb3feda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb3fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb3fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb3fd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb3fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb3fd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb3fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb3fd980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb3fdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb3fdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb3fde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb3fc120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb3fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9bba5152c0" loc="42:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba5152c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9bba515640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bba5157d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f9bba50e440" loc="46:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f9bba50e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bba50e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9bba507760" loc="51:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bba507760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9bba507ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f9bba507c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f9bba50ea50" loc="48:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f9bba50ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f9bba50edd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f9bba50d020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f9bba50d1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f9bba50d340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f9bba50d4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f9bba50d660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f9bba50d7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f9bba50d980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bba50db10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f9bba50dca0"/>
        <function-ref name="getData" scoped="" ref="0x7f9bba50de30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f9bba50c020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f9bba50c1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f9bba50c440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f9bba50c5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f9bba50c760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f9bba50c8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f9bba50ca80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f9bba50cc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f9bba50cda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f9bba50b020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f9bba50b1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f9bba50b340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f9bba50b4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f9bba50b660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f9bba50b9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f9bba50bb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f9bba50bd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f9bba50a020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f9bba50a1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f9bba50a340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f9bba50a4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f9bba50a660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f9bba50a7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f9bba50a980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f9bba50ab10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f9bba50aca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f9bba50ae30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f9bba509020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f9bba5091b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f9bba509340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f9bba5094d0"/>
        <function-ref name="setData" scoped="" ref="0x7f9bba509660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f9bba5097f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f9bba509980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f9bba509b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f9bba509ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f9bba509e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f9bba508020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f9bba5085b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f9bba508740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f9bba5088d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f9bba508a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f9bba508bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f9bba508d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f9bba507020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f9bba5071b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f9bba507340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f9bba5074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f9bba50fc10" loc="45:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f9bba50fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bba50e020"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bba50e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bba516640" loc="41:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bba516640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bba5169c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bba516b50"/>
        <function-ref name="request" scoped="" ref="0x7f9bba516ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bba516e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bba515030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f9bba5132b0" loc="44:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f9bba5132b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9bba513630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f9bba5137c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f9bba513950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f9bba513ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f9bba513c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9bba513e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f9bba512020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f9bba5121b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f9bba512340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f9bba5124d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f9bba512660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f9bba5127f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f9bba512980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f9bba512c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9bba512da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f9bba511020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f9bba5111b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f9bba511340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9bba5114d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f9bba511660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f9bba5117f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9bba511980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f9bba511b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f9bba511ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bba511e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f9bba510220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f9bba5103b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f9bba510540"/>
        <function-ref name="tx" scoped="" ref="0x7f9bba5106d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f9bba510860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f9bba5109f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9bba510b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f9bba510d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f9bba50f020"/>
        <function-ref name="rx" scoped="" ref="0x7f9bba50f1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f9bba50f340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f9bba50f4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f9bba50f660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f9bba50f7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f9bba50f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9bba515a60" loc="43:../../../..//tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bba515a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9bba515de0"/>
        <function-ref name="userId" scoped="" ref="0x7f9bba513020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9bbb3538a0" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bbb3538a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9bbb353c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bbb353db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9bbb351020" loc="45:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9bbb3513a0"/>
        <function-ref name="configure" scoped="" ref="0x7f9bbb351530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f9bbb358a80" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb358a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb358e00"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb355020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb3545c0" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb3545c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb354940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb354ad0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb354c60"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb354df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f9bbb3559a0" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb3559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb355d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9bbb352130" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb352130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9bbb3524b0"/>
        <function-ref name="userId" scoped="" ref="0x7f9bbb352640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9bbb33c4b0" loc="43:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb33c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9bbb33c830"/>
        <function-ref name="userId" scoped="" ref="0x7f9bbb33c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f9bbb34e5c0" loc="39:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f9bbb34e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb34e960"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb34eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f9bbb33de70" loc="42:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f9bbb33de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb33c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f9bbb33d020" loc="40:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f9bbb33d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbb33d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f9bbb33d690" loc="41:../../../..//tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f9bbb33d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f9bbb33da10"/>
        <function-ref name="txDone" scoped="" ref="0x7f9bbb33dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9bbb2c2bf0" loc="92:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bbb2c2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9bbb2c1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bbb2c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9bbb2c0930" loc="96:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bbb2c0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9bbb2c0cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f9bbb2c0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9bbb2c1400" loc="93:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9bbb2c1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb2c1780"/>
        <function-ref name="requested" scoped="" ref="0x7f9bbb2c1910"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb2c1aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb2c1c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bbb2c1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb2c4e60" loc="91:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb2c4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb2c2230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb2c23c0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb2c2550"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb2c26e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb2c2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9bbb2c0060" loc="94:../../../..//tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bbb2c0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9bbb2c03e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9bbb2c0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bba49b140" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bba49b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bba49b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9bba49b750" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9bba49b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9bba49bad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9bba49bc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9bba49bdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9bba499020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9bba497850" loc="55:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9bba497850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9bba497bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bba497d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9bba495590" loc="60:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9bba495590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9bba495930"/>
        <function-ref name="configure" scoped="" ref="0x7f9bba495ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9bba495d50" loc="61:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f9bba495d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9bba494100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9bba494290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9bba494420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9bba4945b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9bba496020" loc="56:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9bba496020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bba4963a0"/>
        <function-ref name="requested" scoped="" ref="0x7f9bba496530"/>
        <function-ref name="granted" scoped="" ref="0x7f9bba4966c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bba496850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9bba4969e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bba494800" loc="62:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bba494800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bba494b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bba494d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bba493020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bba4931b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bba493340"/>
        <function-ref name="get" scoped="" ref="0x7f9bba4934d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bba493660"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bba493ca0"/>
        <function-ref name="set" scoped="" ref="0x7f9bba493980"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bba4937f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bba493b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bba498970" loc="54:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bba498970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bba498d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bba497020"/>
        <function-ref name="request" scoped="" ref="0x7f9bba4971b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bba497340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bba4974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9bba496c30" loc="57:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9bba496c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9bba495020"/>
        <function-ref name="userId" scoped="" ref="0x7f9bba4951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9bba492020" loc="75:../../../..//tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f9bba492020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bba4923a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bba492530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f9bbb2b9880" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f9bbb2b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f9bbb2b9c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f9bbb2b9d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f9bbb2b6020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f9bbb2b61b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f9bbb2b6340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f9bbb2b64d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f9bbb2b6660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f9bbb2b67f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbb2b6980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f9bbb2b6b10"/>
        <function-ref name="getData" scoped="" ref="0x7f9bbb2b6ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f9bbb2b6e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f9bbb2b5020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f9bbb2b52b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f9bbb2b5440"/>
        <function-ref name="getIV" scoped="" ref="0x7f9bbb2b55d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f9bbb2b5760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f9bbb2b58f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f9bbb2b5a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f9bbb2b5c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f9bbb2b5da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f9bbb2b4020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f9bbb2b41b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f9bbb2b4340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f9bbb2b44d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f9bbb2b4860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f9bbb2b49f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f9bbb2b4b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f9bbb2b4d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f9bbb2b3020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f9bbb2b31b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f9bbb2b3340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f9bbb2b34d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f9bbb2b3660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f9bbb2b37f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f9bbb2b3980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f9bbb2b3b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f9bbb2b3ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f9bbb2b3e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f9bbb2b2020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f9bbb2b21b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f9bbb2b2340"/>
        <function-ref name="setData" scoped="" ref="0x7f9bbb2b24d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f9bbb2b2660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f9bbb2b27f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f9bbb2b2980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f9bbb2b2b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f9bbb2b2ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f9bbb2b2e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f9bbb2b1420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f9bbb2b15b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f9bbb2b1740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f9bbb2b18d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f9bbb2b1a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f9bbb2b1bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f9bbb2b1d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f9bbb2b0020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f9bbb2b01b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f9bbb2b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f9bbb2a6250" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f9bbb2a6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f9bbb2a65d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f9bbb2a6760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f9bbb2a68f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f9bbb2a6a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f9bbb2a6c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f9bbb2a6da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f9bbb2a5020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f9bbb2a51b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f9bbb2a5340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f9bbb2a54d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f9bbb2a5660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f9bbb2a57f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f9bbb2a5980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f9bbb2a5c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f9bbb2a5da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f9bbb2a4020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f9bbb2a41b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f9bbb2a4340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f9bbb2a44d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f9bbb2a4660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f9bbb2a47f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f9bbb2a4980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f9bbb2a4b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f9bbb2a4ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb2a4e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f9bbb2a3220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f9bbb2a33b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f9bbb2a3540"/>
        <function-ref name="tx" scoped="" ref="0x7f9bbb2a36d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f9bbb2a3860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f9bbb2a39f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9bbb2a3b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f9bbb2a3d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f9bbb2a2020"/>
        <function-ref name="rx" scoped="" ref="0x7f9bbb2a21b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f9bbb2a2340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f9bbb2a24d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f9bbb2a2660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f9bbb2a27f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f9bbb2a2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f9bbb2a0cb0" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f9bbb2a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb29f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb29f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb29f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb29f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb29f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb29f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb29fa00"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb29fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb29fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb29e020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb29e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb29e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb29e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb29e760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb29e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f9bbb2ad430" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f9bbb2ad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f9bbb2ad7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f9bbb2ad940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f9bbb2adad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f9bbb2adc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f9bbb2addf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f9bbb2ac020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f9bbb2ac1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f9bbb2ac340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbb2ac4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f9bbb2ac660"/>
        <function-ref name="getData" scoped="" ref="0x7f9bbb2ac7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f9bbb2ac980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f9bbb2acb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f9bbb2acda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f9bbb2ab020"/>
        <function-ref name="getIV" scoped="" ref="0x7f9bbb2ab1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f9bbb2ab340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f9bbb2ab4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f9bbb2ab660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f9bbb2ab7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f9bbb2ab980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f9bbb2abb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f9bbb2abca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f9bbb2abe30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f9bbb2aa020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f9bbb2aa3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f9bbb2aa540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f9bbb2aa6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f9bbb2aa860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f9bbb2aa9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f9bbb2aab80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f9bbb2aad10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f9bbb2a9020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f9bbb2a91b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f9bbb2a9340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f9bbb2a94d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f9bbb2a9660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f9bbb2a97f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f9bbb2a9980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f9bbb2a9b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f9bbb2a9ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f9bbb2a9e30"/>
        <function-ref name="setData" scoped="" ref="0x7f9bbb2a8020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f9bbb2a81b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f9bbb2a8340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f9bbb2a84d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f9bbb2a8660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f9bbb2a87f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f9bbb2a8980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f9bbb2a7020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f9bbb2a71b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f9bbb2a7340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f9bbb2a74d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f9bbb2a7660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f9bbb2a77f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f9bbb2a7980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f9bbb2a7b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f9bbb2a7ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f9bbb2a7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f9bbb2a2d40" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f9bbb2a2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb2a10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb2a1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb2a1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb2a1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb2a1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb2a18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb2a1a40"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb2a1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb2a1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb2a0020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb2a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb2a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb2a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb2a0760"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb2a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f9bbb18bc60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb18bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18a210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f9bbb196da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f9bbb196da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb194180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f9bbb18eb50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb18eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18d020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f9bbb188670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb188670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1889f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb188b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f9bbb181e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f9bbb181e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb180210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f9bbb188e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f9bbb188e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb187210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f9bbb1752f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbb1752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb175670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb175800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f9bbb1772f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbb1772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb177670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb177800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f9bbb193120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb193120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1934a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f9bbb17d670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f9bbb17d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f9bbb1782f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb1782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb178670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb178800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f9bbb18dc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f9bbb18dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18c020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f9bbb18cc60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb18cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18b020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f9bbb183670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbb183670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1839f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb183b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f9bbb185e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f9bbb185e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb184210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f9bbb187670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb187670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1879f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb187b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbb197760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb197760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbb197ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbb197c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbb197e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f9bbb192aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb192aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb192e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f9bbb191120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f9bbb191120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1915a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f9bbb17ca70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbb17ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f9bbb191870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbb191870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb191bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f9bbb178ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbb178ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb178e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb177020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f9bbb193dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb193dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb192180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f9bbb17ee50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f9bbb17ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17d210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f9bbb18c480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbb18c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18c800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f9bbb18d480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb18d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18d800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f9bbb196750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb196750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb196ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f9bbb17fe50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbb17fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17e210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f9bbb180670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f9bbb180670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1809f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb180b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f9bbb17e670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbb17e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f9bbb176ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb176ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb176e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb175020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f9bbb177ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbb177ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb177e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb176020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f9bbb184670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f9bbb184670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1849f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb184b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f9bbb180e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f9bbb180e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17f210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f9bbb179ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbb179ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb179e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb178020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f9bbb186670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbb186670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1869f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb186b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f9bbb175ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbb175ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb175e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb173020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1731b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb173340"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb1734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f9bbb196100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbb196100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb196480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f9bbb18e370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f9bbb18e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18e6f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f9bbb18b480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbb18b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18b800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f9bbb183e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbb183e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb181210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f9bbb187e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb187e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb186210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f9bbb181670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbb181670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1819f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb181b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f9bbb18a670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb18a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb18a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb18ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f9bbb194450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f9bbb194450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1947d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f9bbb18ae50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb18ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb188210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb198a80" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb198a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb198e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb197020"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb1971b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb197340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb1974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f9bbb190020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbb190020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f9bbb190cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f9bbb190cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb18e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f9bbb1792f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f9bbb1792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb179670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb179800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f9bbb17aad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb17aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17ae50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb179020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f9bbb192450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbb192450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1927d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f9bbb17a2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbb17a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17a670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f9bbb1762f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f9bbb1762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb176670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb176800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f9bbb184e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbb184e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb183210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f9bbb17f670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f9bbb17f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f9bbb194aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f9bbb194aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb194e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f9bbb193770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb193770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb193af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f9bbb186e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbb186e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb185210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f9bbb190670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f9bbb190670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f9bbb185670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f9bbb185670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1859f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb185b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f9bbb17de50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f9bbb17de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb17c610"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb17c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f9bbb1737a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb1737a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb173b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb173cb0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb173e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb172020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb1721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f9bbb15ec60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbb15ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15d210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f9bbb169da0" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f9bbb169da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb168180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f9bbb162b50" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbb162b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb161020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f9bbb15c670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb15c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f9bbb155e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f9bbb155e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb154210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f9bbb15ce50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f9bbb15ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15b210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f9bbb1482f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbb1482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb148670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb148800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f9bbb14a2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbb14a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14a670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f9bbb167120" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb167120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1674a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f9bbb150670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f9bbb150670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1509f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb150b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f9bbb14c2f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb14c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14c670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f9bbb161c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f9bbb161c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15f020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f9bbb15fc60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb15fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15e020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f9bbb156670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbb156670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1569f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb156b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f9bbb158e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f9bbb158e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb157210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f9bbb15b670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbb15b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbb16a760" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb16a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbb16aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbb16ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbb16ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f9bbb165aa0" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb165aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb165e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f9bbb164120" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f9bbb164120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1645a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f9bbb14fa70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbb14fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14fdf0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f9bbb164870" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbb164870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb164bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f9bbb14cad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbb14cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14ce50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f9bbb167dc0" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbb167dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb165180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f9bbb151e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f9bbb151e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb150210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f9bbb15f480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbb15f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15f800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f9bbb161480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb161480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb161800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb161990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f9bbb169750" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbb169750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb169ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f9bbb153e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbb153e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb151210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f9bbb154670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f9bbb154670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1549f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb154b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f9bbb151670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbb151670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1519f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb151b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f9bbb149ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb149ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb149e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb148020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f9bbb14aad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbb14aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14ae50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f9bbb157670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f9bbb157670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1579f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb157b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f9bbb154e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f9bbb154e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb153210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f9bbb14dad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbb14dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14de50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f9bbb15a670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbb15a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f9bbb148ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbb148ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb148e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb147020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1471b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb147340"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb1474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f9bbb169100" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbb169100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb169480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f9bbb162370" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f9bbb162370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1626f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb162880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f9bbb15e480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbb15e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15e800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f9bbb156e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbb156e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb155210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f9bbb15be50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbb15be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15a210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f9bbb155670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbb155670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1559f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb155b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f9bbb15d670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbb15d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f9bbb168450" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f9bbb168450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1687d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f9bbb15de50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb15de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb15c210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb15c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbb16b9e0" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbb16b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb16bd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb16a020"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb16a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb16a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb16a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f9bbb163020" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbb163020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f9bbb163cc0" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f9bbb163cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1620a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f9bbb14d2f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f9bbb14d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14d670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f9bbb14ead0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbb14ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14ee50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f9bbb165450" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbb165450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1657d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f9bbb14e2f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbb14e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14e670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f9bbb1492f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f9bbb1492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb149670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb149800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f9bbb157e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbb157e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb156210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f9bbb153670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f9bbb153670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1539f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb153b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f9bbb168aa0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f9bbb168aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb168e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f9bbb167770" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbb167770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb167af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f9bbb15ae50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbb15ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb158210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb1583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f9bbb163670" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f9bbb163670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb1639f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f9bbb158670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f9bbb158670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1589f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb158b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f9bbb150e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f9bbb150e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb14f610"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb14f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f9bbb1477a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb1477a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb147b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb147cb0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb147e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb146020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb1461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f9bbb13fb30" loc="54:../../../..//tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbb13fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f9bbb13c020"/>
        <function-ref name="changed" scoped="" ref="0x7f9bbb13c1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f9bbb13c340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f9bbb13c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f9bbb13ed30" loc="13:../../../..//tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb13ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f9bbb1260e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f9bbb122310" loc="5:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f9bbb122310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f9bbb122690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f9bbb11f880" loc="8:../../../..//tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb11f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb11fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f9bbb115020" loc="8:../../../..//tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb1153a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f9bbb10bbd0" loc="14:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f9bbb10bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb10e020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb10e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f9bbb10e530" loc="15:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f9bbb10e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbb10e8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb10ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f9bbb10f140" loc="11:../../../..//tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f9bbb10f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb10f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f9bbb113c50" loc="8:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f9bbb113c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb0fa020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb0fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f9bbb0fa540" loc="11:../../../..//tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f9bbb0fa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb0fa8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb0faa50"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb0fabe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb0fad70"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb0f9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb0f91b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb0f9340"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb0f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9bbb0f1950" loc="15:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0f1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9bbb0f4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f9bbb0f6150" loc="11:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f9bbb0f6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb0f64d0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb0f6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f9bbb0f69f0" loc="14:../../../..//tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f9bbb0f69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb0f6d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb0f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb0f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb0f5340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb0f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb0f5660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb0f57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb0f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f9bbb0f8ca0" loc="41:../../../..//tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0f8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9bbb0d1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f9bbb0cea90" loc="54:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f9bbb0cea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9bbb0bf8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9bbb0be020" loc="55:../../../..//tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbb0be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb0bee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb0bd800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb0bd340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb0bdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f9bbb0b8530" loc="46:../../../..//tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f9bbb0b8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb0b73d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb0b7d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb0b7890"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb0b6260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f9bbb0b1020" loc="45:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bbb0b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbb0b13a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bbb0b1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bbb0b16c0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb0b1850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bbb0b19e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb0b1b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bbb0b1d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb0b0020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb0b01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bbb0b0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bbb0b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9bbb0b5e50" loc="44:../../../..//tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbb0b5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9bbbf00200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb0b4ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbb0b2670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbb0b21b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbb0b2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f9bbb0fb590" loc="3:../../../..//tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f9bbb0fb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb0fb910"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb0fbaa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb0fbc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb0fbdc0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb0ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb0ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb0ac340"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb0ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbb0aac50" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbb0aac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb0a9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb0a91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbb0a9340"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb0a94d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb0a9660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbb0a97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb0a9980"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb0a9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbb0a9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbb0a9e30"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb0a8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbb0a81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbb0a8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbb0a85d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb0a8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbb0ab9e0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbb0ab9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb0abd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb0aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb0aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb0aa340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb0aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb0aa660"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb0aa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb0aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9bbb0ada20" loc="14:../../../..//tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f9bbb0ada20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbb0adda0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb0a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f9bbb093cb0" loc="46:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb093cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbb0920a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbb092230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbb0923c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbb092550"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbb0926e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbb092870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f9bbb08d990" loc="47:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f9bbb08d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f9bbb08dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f9bbb093020" loc="45:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f9bbb093020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb0933a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb093530"/>
        <function-ref name="modify" scoped="" ref="0x7f9bbb0936c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb093850"/>
        <function-ref name="resend" scoped="" ref="0x7f9bbb0939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9bbb0976c0" loc="44:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f9bbb0976c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbb097a40"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb097bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f9bbb091150" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f9bbb091150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f9bbb0914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f9bbb084970" loc="51:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbb084970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbb084cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbb084e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbb083030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbb0831c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbb083350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbb0834e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f9bbb07b950" loc="58:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9bbb07b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbb079020"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbb079750"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbb07a780"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb079e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f9bbb064020" loc="78:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbb064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb0643a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb064530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f9bbb064890" loc="79:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbb064890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb064c10"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb064da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f9bbb083900" loc="52:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f9bbb083900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f9bbb083c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f9bbb067530" loc="72:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbb067530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb0678b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f9bbb076880" loc="60:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f9bbb076880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f9bbb076c00"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbb076d90"/>
        <function-ref name="captured" scoped="" ref="0x7f9bbb075020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f9bbb0751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f9bbb082ae0" loc="55:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f9bbb082ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbb07e390"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbb07f360"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bbb07fce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbb07f820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bbb07e850"/>
        <function-ref name="start" scoped="" ref="0x7f9bbb080970"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb080e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f9bbb07ed00" loc="56:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbb07ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbb07c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbb07c230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbb07c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbb07c550"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbb07c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbb07c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f9bbb069550" loc="68:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbb069550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb0698d0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb069a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f9bbb069e00" loc="69:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbb069e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb0681c0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb068350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f9bbb05dd40" loc="83:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbb05dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbb0610e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f9bbb061270"/>
        <function-ref name="sfd" scoped="" ref="0x7f9bbb061400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbb085bc0" loc="50:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbb085bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbb084020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb0841b0"/>
        <function-ref name="modify" scoped="" ref="0x7f9bbb084340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbb0844d0"/>
        <function-ref name="resend" scoped="" ref="0x7f9bbb084660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f9bbb06cd10" loc="66:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbb06cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbb06b0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbb06b270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbb06b400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f9bbb067c60" loc="73:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbb067c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb066020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f9bbb06f820" loc="62:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f9bbb06f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb06fba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb06fd30"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb06e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb06e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb06e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb06e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb06e660"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb06e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbb086c60" loc="48:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbb086c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbb085020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbb07cbb0" loc="57:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbb07cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbb07b020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbb07b1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbb07b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f9bbb070be0" loc="59:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbb070be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbb076020"/>
        <function-ref name="isSet" scoped="" ref="0x7f9bbb0761b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbb076340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb0764d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f9bbb0663e0" loc="74:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbb0663e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb066960"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb066af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f9bbb06c020" loc="65:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f9bbb06c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbb06c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbb06c530"/>
        <function-ref name="request" scoped="" ref="0x7f9bbb06c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbb06c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbb06c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f9bbb075500" loc="61:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f9bbb075500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb075980"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb075b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb075ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb075e30"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb06f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb06f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb06f340"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb06f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f9bbb063130" loc="80:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbb063130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb0634b0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb063640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f9bbb0639c0" loc="81:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbb0639c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb063d40"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb062020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f9bbb0686d0" loc="70:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbb0686d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb068a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f9bbb06eb40" loc="63:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f9bbb06eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbb06d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbb06d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbb06d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbb06d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb06d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbb06d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb06d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbb06db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbb0616c0" loc="84:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbb0616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbb061a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbb061bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbb061d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbb060020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbb0601b0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbb060340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbb0604d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbb060b10"/>
        <function-ref name="set" scoped="" ref="0x7f9bbb060660"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbb0607f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbb060980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f9bbb0655e0" loc="77:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbb0655e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbb065960"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb065af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9bbb085320" loc="49:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f9bbb085320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbb0856a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbb085830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f9bbb06b780" loc="67:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbb06b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbb06bb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbb06bc90"/>
        <function-ref name="write" scoped="" ref="0x7f9bbb06be20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbb069020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbb0691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f9bbb068de0" loc="71:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f9bbb068de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb067180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f9bbb066e80" loc="76:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f9bbb066e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbb065220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f9bbb0820f0" loc="53:../../../..//tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f9bbb0820f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f9bbb082470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f9bbafc2c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbafc2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc1210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f9bbafcc020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f9bbafcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f9bbafc6c70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbafc6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc5020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f9bbafc0670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbafc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc09f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f9bbafb9e50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f9bbafb9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb8210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f9bbafc0e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f9bbafc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbf210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f9bbafac2f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbafac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafac670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafac800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f9bbafae2f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbafae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafae670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f9bbafcb370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbafcb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f9bbafb4670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f9bbafb4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb49f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f9bbafb02f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbafb02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb0670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f9bbafc5c60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f9bbafc5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc3020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f9bbafc3c60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbafc3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc2020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f9bbafba670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbafba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafba9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f9bbafbce50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f9bbafbce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbb210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f9bbafbf670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbafbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbafce8f0" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbafce8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbafcec70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbafcee00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbafcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f9bbafcad00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbafcad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafc80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f9bbafc8370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f9bbafc8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafc87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f9bbafb3a70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbafb3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb3df0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f9bbafc8ac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbafc8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafc8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f9bbafb0ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbafb0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb0e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f9bbafca060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbafca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafca3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f9bbafb5e50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f9bbafb5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb4210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f9bbafc3480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbafc3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc3800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f9bbafc5480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbafc5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc5800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f9bbafcd940" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbafcd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f9bbafb7e50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbafb7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb5210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f9bbafb8670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f9bbafb8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb89f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f9bbafb5670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbafb5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb59f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f9bbafadad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbafadad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafade50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f9bbafaead0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbafaead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafaee50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f9bbafbb670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f9bbafbb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f9bbafb8e50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f9bbafb8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb7210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f9bbafb1ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbafb1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb1e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f9bbafbe670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbafbe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f9bbafacad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbafacad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbaface50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbafab020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafab1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbafab340"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbafab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f9bbafcd2f0" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbafcd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f9bbafc6490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f9bbafc6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc6810"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f9bbafc2480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbafc2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc2800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f9bbafbae50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbafbae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb9210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f9bbafbfe50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbafbfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbe210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f9bbafb9670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbafb9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb99f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f9bbafc1670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbafc1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc19f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f9bbafcc670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f9bbafcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f9bbafc1e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbafc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafc0210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbafcfc30" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbafcfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbafce020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbafce1b0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbafce340"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbafce4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbafce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f9bbafc7160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbafc7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafc74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f9bbafc7e00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f9bbafc7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafc61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f9bbafb12f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f9bbafb12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb1670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f9bbafb2ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbafb2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb2e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f9bbafca6b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbafca6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcaa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f9bbafb22f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbafb22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb2670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f9bbafad2f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f9bbafad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafad670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafad800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f9bbafbbe50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbafbbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafba210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f9bbafb7670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f9bbafb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb79f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f9bbafcccc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f9bbafcccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f9bbafcb9c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbafcb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafcbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f9bbafbee50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbafbee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbc210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f9bbafc77b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f9bbafc77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbafc7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f9bbafbc670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f9bbafbc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafbc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafbcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f9bbafb4e50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f9bbafb4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbafb3610"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafb37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f9bbafab7a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbafab7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbafabb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbafabcb0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbafabe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbafaa020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbafaa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f9bbaf9fdf0" loc="42:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbaf9fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbaf9c1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f9bbaf9c350"/>
        <function-ref name="sfd" scoped="" ref="0x7f9bbaf9c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbaf9c7c0" loc="43:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbaf9c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbaf9cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f9bbaf9b020" loc="44:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f9bbaf9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f9bbaf9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9bbaf9f5c0" loc="41:../../../..//tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f9bbaf9f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbaf9f940"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbaf9fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f9bbaf93380" loc="54:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f9bbaf93380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbaf93700"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbaf93890"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbaf93a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbaf93bb0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbaf93d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbaf92020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbaf92340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f9bbaf8cb90" loc="64:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbaf8cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f9bbaf8b020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f9bbaf8b1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f9bbaf8b340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f9bbaf8b4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f9bbaf8b660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f9bbaf8b7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9bbaf8b980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f9bbaf8bb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f9bbaf8bca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f9bbaf8be30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f9bbaf8a020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f9bbaf8a1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f9bbaf8a340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9bbaf8a5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f9bbaf8a760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f9bbaf759d0" loc="148:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f9bbaf759d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbaf75d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbaf74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f9bbaf8ad70" loc="65:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f9bbaf8ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbaf87330"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbaf87a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbaf89ba0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf86210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f9bbaf926b0" loc="55:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f9bbaf926b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbaf92a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbaf92bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbaf92d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbaf91020"/>
        <function-ref name="get" scoped="" ref="0x7f9bbaf911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbaf91340"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbaf91660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f9bbaf85cb0" loc="69:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbaf85cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbaf840a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf84230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f9bbaf84590" loc="70:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbaf84590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbaf84910"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf84aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f9bbaf836d0" loc="72:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbaf836d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbaf83a50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf83be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f9bbaf8d330" loc="62:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf8d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbaf8d6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbaf8d840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbaf8d9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbaf8db60"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbaf8dcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbaf8de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f9bbaf96550" loc="49:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f9bbaf96550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbaf968d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f9bbaf96a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f9bbaf96bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f9bbaf8e3a0" loc="60:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f9bbaf8e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbaf8e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f9bbaf94020" loc="53:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f9bbaf94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbaf943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbaf94530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbaf946c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbaf94850"/>
        <function-ref name="get" scoped="" ref="0x7f9bbaf949e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbaf94b70"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf94d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbaf93020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f9bbaf82020" loc="73:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbaf82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbaf823a0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf82530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbaf98620" loc="47:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbaf98620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbaf989a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbaf8c1e0" loc="63:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf8c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbaf8c560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbaf8c6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbaf8c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbaf95020" loc="50:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbaf95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbaf953a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f9bbaf906e0" loc="58:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f9bbaf906e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbaf90a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbaf90bf0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbaf90d80"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbaf8f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbaf8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f9bbaf84e00" loc="71:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbaf84e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbaf831c0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf83350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f9bbaf8f530" loc="59:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbaf8f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbaf8f8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbaf8fa40"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf8fbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbaf8fd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbaf8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f9bbaf828b0" loc="74:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbaf828b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbaf82e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f9bbaf957c0" loc="51:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f9bbaf957c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f9bbaf95b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbaf80150" loc="76:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbaf80150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbaf804d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbaf80660"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbaf807f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbaf80980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbaf80b10"/>
        <function-ref name="get" scoped="" ref="0x7f9bbaf80ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbaf80e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbaf7f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf7f020"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbaf7f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbaf7f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f9bbaf853e0" loc="68:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbaf853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbaf85760"/>
        <function-ref name="write" scoped="" ref="0x7f9bbaf858f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f9bbaf86b10" loc="67:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbaf86b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbaf85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f9bbaf91a50" loc="56:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f9bbaf91a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9bbaf91dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f9bbaf90020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f9bbaf901b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f9bbaf90340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f9bbaf8ead0" loc="61:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbaf8ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbaf8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f9bbaf98ca0" loc="48:../../../..//tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f9bbaf98ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9bbaf960a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbaf96230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f9bbaf14a70" loc="44:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbaf14a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f9bbaf14df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f9bbaf18670" loc="41:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbaf189f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbaf18b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbaf18d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbaf15020"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbaf151b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbaf15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f9bbaf13550" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf13550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbaf12b00"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbaf102a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbaf123d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf109d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f9bbaf140c0" loc="43:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf140c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbaf14440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbaf145d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbaf14760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f9bbaf0b480" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbaf0b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbaf0b800"/>
        <function-ref name="isSet" scoped="" ref="0x7f9bbaf0b990"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbaf0bb20"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf0bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f9bbaf0f660" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbaf0f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbaf0ece0"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbaf0c460"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbaf0e5b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf0cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f9bbaf156e0" loc="42:../../../..//tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f9bbaf156e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbaf15a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbaf15bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbaf15d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f9bbaf05020" loc="49:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f9bbaf05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f9bbaf053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f9bbaf0ad20" loc="46:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbaf0ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbaf070e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbaf07270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbaf07400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbaf07590"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbaf07720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbaf078b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f9bbaefc4a0" loc="56:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbaefc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbaefc820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbaefc9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbaefcb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbaefccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbaefce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f9bbaf05a80" loc="51:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f9bbaf05a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbaf02020"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbaf02750"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbaf048d0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaf02e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f9bbaf06640" loc="48:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbaf06640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbaf069c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbaf06b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbaf06ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f9bbaefd8b0" loc="53:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f9bbaefd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbaefdc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f9bbaefddc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbaefc020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaefc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f9bbaef8820" loc="57:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f9bbaef8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbaefa4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f9bbaefab80" loc="58:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f9bbaefab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbaef97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f9bbaf01af0" loc="52:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f9bbaf01af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f9bbaefe0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f9bbaefe800"/>
        <function-ref name="isValid" scoped="" ref="0x7f9bbaf00970"/>
        <function-ref name="set" scoped="" ref="0x7f9bbaefd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f9bbaf07c50" loc="47:../../../..//tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f9bbaf07c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbaf06020"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbaf061b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbaf06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9bbaea74e0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f9bbaea74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbae9e150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9bbae9e7c0" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbae9e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbae9c620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbae9b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbae9cae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbae9b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9bbae96020" loc="46:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbae96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbae92630"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbae95a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbae94920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbae944a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbae91020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbae92ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbae94020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbae96c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbae92020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbae95110"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbae955e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9bbae91610" loc="47:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f9bbae91610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbae8f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbae97130" loc="45:../../../..//tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbae97130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbae974b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bbae62870" loc="44:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bbae62870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbae5f090"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbae60090"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bbae60a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbae60550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bbae5f550"/>
        <function-ref name="start" scoped="" ref="0x7f9bbae616a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbae61bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbae62020" loc="43:../../../..//tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbae62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbae623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba38d260" loc="44:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba38d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba38ab30"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba38ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba38a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba38a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba366020"/>
        <function-ref name="start" scoped="" ref="0x7f9bba38c090"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba38c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bba38e9d0" loc="43:../../../..//tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bba38e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bba38ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f9bba351a80" loc="41:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba351a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bba351e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bba350020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bba3501b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bba350340"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba3504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f9bba353020" loc="39:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba353020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bba3533a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bba353530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba3536c0"/>
        <function-ref name="get" scoped="" ref="0x7f9bba353850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba3539e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bba353b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bba353d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bba352020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bba3521b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bba352340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bba3524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f9bba352760" loc="40:../../../..//tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba352760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bba352ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bba352c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba352e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bba351020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bba3511b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba351340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bba3514d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bba351660"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bba3517f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f9bba347760" loc="49:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f9bba347760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f9bba347ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f9bba347c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f9bba347e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f9bba346020"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba3461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f9bba34bdd0" loc="47:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f9bba34bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bba349180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f9bba349310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba3494a0"/>
        <function-ref name="get" scoped="" ref="0x7f9bba349630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba3497c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bba349950"/>
        <function-ref name="getMode" scoped="" ref="0x7f9bba349ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bba349c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bba349e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f9bba348020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f9bba3481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba34ebf0" loc="46:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba34ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba34b4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba34c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba34ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba34c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba34b9a0"/>
        <function-ref name="start" scoped="" ref="0x7f9bba34da80"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba34c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bba34e360" loc="45:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bba34e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bba34e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f9bba348440" loc="48:../../../..//tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f9bba348440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f9bba3487c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f9bba348950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f9bba348ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f9bba348c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f9bba348e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f9bba347020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9bba3471b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f9bba347340"/>
        <function-ref name="setControl" scoped="" ref="0x7f9bba3474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9bbae81b70" loc="43:../../../..//tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbae81b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbae7e9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbae7d360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbae7ee70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbae7d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f9bbae77b90" loc="63:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f9bbae77b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbae759d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbae744e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbae74020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbae749a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9bbae79610" loc="62:../../../..//tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbae79610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbae785b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbae77020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbae78a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbae774e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9bba3645f0" loc="61:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bba3645f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba362e50"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba363e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba362800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba362340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba360340"/>
        <function-ref name="start" scoped="" ref="0x7f9bba363430"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba363940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f9bba35ed20" loc="73:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f9bba35ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbbf01640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f9bbbf019b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bba35a670"/>
        <function-ref name="fired" scoped="" ref="0x7f9bba35c550"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bba35a020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bba35ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bba35ab30"/>
        <function-ref name="start" scoped="" ref="0x7f9bba35db60"/>
        <function-ref name="stop" scoped="" ref="0x7f9bba35c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9bba3609b0" loc="68:../../../..//tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bba3609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bba35f7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bba35e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bba35fca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bba35e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f9bbae2d9c0" loc="74:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f9bbae2d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbae2dd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbae2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f9bbae31850" loc="49:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f9bbae31850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbae2d090"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbae2e090"/>
        <function-ref name="startAt" scoped="" ref="0x7f9bbae2ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbae2e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9bbae2d550"/>
        <function-ref name="start" scoped="" ref="0x7f9bbae2f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbae2fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbae362f0" loc="48:../../../..//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbae362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbae32870"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbae35e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbae33c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbae33780"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbae311e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbae32cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbae33300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbae35020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbae32260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbae354f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbae359c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9bbaddca00" loc="71:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9bbaddca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbaddcd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbadda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9bbade1640" loc="49:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f9bbade1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbadddc40"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbadde1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbaddd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbaddeae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbaddc590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbaddc110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbadde660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbaddf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbaddd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbaddf860"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbaddfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbade7150" loc="48:../../../..//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbade7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbade2700"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbade5c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbade4a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbade45b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbade1090"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbade2ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbade4110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbade7d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbade20d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbade52a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbade5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9bbadd82b0" loc="48:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f9bbadd82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbadd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9bbadd7690" loc="49:../../../..//tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f9bbadd7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9bbadd65b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9bbadd5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9bbadd6a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9bbadd54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbadce8c0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbadce8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbadbacf0"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbadbc320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbadba0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbadbcc20"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbadb9660"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbadb91e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbadbc7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbadbd4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbadba6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbadbd9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbadbde80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9bbadc52c0" loc="49:../../../..//tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f9bbadc52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbadc1870"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbadc4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbadc3c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbadc3780"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbadc01e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbadc1cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbadc3300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbadc4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbadc1260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbadc44f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbadc49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f9bbada9c60" loc="69:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f9bbada9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada8210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f9bbadb2020" loc="47:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f9bbadb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f9bbadacc70" loc="63:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f9bbadacc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbadab020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbadab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f9bbada6670" loc="72:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f9bbada6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada69f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f9bbad9fe50" loc="86:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f9bbad9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9e210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f9bbada6e50" loc="73:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f9bbada6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada5210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f9bbad932f0" loc="108:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f9bbad932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad93670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad93800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f9bbad952f0" loc="104:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f9bbad952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad95670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad95800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f9bbadb1370" loc="50:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f9bbadb1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f9bbad9b670" loc="93:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f9bbad9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f9bbad962f0" loc="102:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f9bbad962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad96670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad96800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f9bbadabc60" loc="65:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f9bbadabc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbadaa020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbadaa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f9bbadaac60" loc="67:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f9bbadaac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada9020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f9bbada1670" loc="83:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f9bbada1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada19f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f9bbada3e50" loc="79:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f9bbada3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada2210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f9bbada5670" loc="74:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f9bbada5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada59f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f9bbadb5970" loc="42:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f9bbadb5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f9bbadb5cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f9bbadb5e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f9bbadb4030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f9bbadb0d00" loc="54:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f9bbadb0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadaf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f9bbadaf370" loc="55:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f9bbadaf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadaf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f9bbad9aa70" loc="95:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f9bbad9aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9adf0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f9bbadafac0" loc="56:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f9bbadafac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadafe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f9bbad96ad0" loc="103:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f9bbad96ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad96e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f9bbadb0060" loc="52:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f9bbadb0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb03e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f9bbad9ce50" loc="92:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f9bbad9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9b210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f9bbadaa480" loc="66:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f9bbadaa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbadaa800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbadaa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f9bbadab480" loc="64:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f9bbadab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbadab800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbadab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f9bbadb4950" loc="46:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f9bbadb4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f9bbad9de50" loc="90:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f9bbad9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9c210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f9bbad9e670" loc="87:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f9bbad9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f9bbad9c670" loc="91:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f9bbad9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f9bbad94ad0" loc="107:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f9bbad94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad94e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f9bbad95ad0" loc="105:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f9bbad95ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad95e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f9bbada2670" loc="80:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f9bbada2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada29f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f9bbad9ee50" loc="88:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f9bbad9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9d210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f9bbad97ad0" loc="101:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f9bbad97ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad97e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f9bbada4670" loc="76:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f9bbada4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada49f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f9bbad93ad0" loc="111:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f9bbad93ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbad93e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbad91020"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad911b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbad91340"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbad914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f9bbadb4300" loc="45:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f9bbadb4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f9bbadac490" loc="62:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f9bbadac490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbadac810"/>
        <function-ref name="write" scoped="" ref="0x7f9bbadac9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f9bbada9480" loc="68:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f9bbada9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada9800"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f9bbada1e50" loc="84:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f9bbada1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9f210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f9bbada5e50" loc="75:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f9bbada5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada4210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f9bbad9f670" loc="85:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f9bbad9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f9bbada8670" loc="70:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f9bbada8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada89f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f9bbadb2670" loc="48:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f9bbadb2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f9bbada8e50" loc="71:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f9bbada8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada6210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbadb6d00" loc="41:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbadb6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbadb50a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbadb5230"/>
        <function-ref name="request" scoped="" ref="0x7f9bbadb53c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbadb5550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbadb56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f9bbadae160" loc="57:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f9bbadae160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadae4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f9bbadaee00" loc="59:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f9bbadaee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadac1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f9bbad972f0" loc="100:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f9bbad972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad97670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad97800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f9bbad98ad0" loc="99:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f9bbad98ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad98e50"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f9bbadb06b0" loc="53:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f9bbadb06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f9bbad982f0" loc="96:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f9bbad982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad98670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f9bbad942f0" loc="106:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f9bbad942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad94670"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad94800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f9bbada2e50" loc="81:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f9bbada2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada1210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f9bbad9d670" loc="89:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f9bbad9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f9bbadb2cc0" loc="49:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f9bbadb2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f9bbadb19c0" loc="51:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f9bbadb19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadb1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f9bbada4e50" loc="77:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f9bbada4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada3210"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f9bbadae7b0" loc="58:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f9bbadae7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f9bbadaeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f9bbada3670" loc="78:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f9bbada3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbada39f0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbada3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f9bbad9be50" loc="94:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f9bbad9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9bbad9a610"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad9a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f9bbad917a0" loc="112:../../../..//tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f9bbad917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f9bbad91b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9bbad91cb0"/>
        <function-ref name="write" scoped="" ref="0x7f9bbad91e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f9bbad90020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9bbad901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f9bbad68a20" loc="46:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f9bbad68a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f9bbad68da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f9bbad65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f9bbad66920" loc="45:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f9bbad66920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbad68560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbad6c9a0" loc="44:../../../..//tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbad6c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbad6cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f9bbad5da20" loc="48:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f9bbad5da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f9bbad5dda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f9bbad5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f9bbad5e940" loc="47:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f9bbad5e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbad5d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbad5e080" loc="46:../../../..//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbad5e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbad5e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f9bbad6aaa0" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbad6aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbad6ae20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbad5f020"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbad5f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbad5f340"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbad5f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbad5f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbad46020" loc="44:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbad46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbad463a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbad46530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbad466c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbad46850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbad469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbad47220" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbad47220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbad475a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbad47730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbad478c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbad47a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbad47be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbad41e60" loc="45:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbad41e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbad40210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbad403a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbad40530"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbad406c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbad40850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbad44a20" loc="40:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbad44a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbad44da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbad41020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbad411b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbad41340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbad414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f9bbad3f8f0" loc="47:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f9bbad3f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f9bbad3fc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f9bbad3fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbad41750" loc="41:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbad41750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbad41ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbad3e170" loc="48:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbad3e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbad3e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbad3e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbad3e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f9bbad40ae0" loc="46:../../../..//tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbad40ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbad40e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbad3f020"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbad3f1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbad3f340"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbad3f4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbad3f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f9bbad42690" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbad42690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbad42a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbad42ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbad42d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbad2d020"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbad2d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbad2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9bbad27950" loc="47:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f9bbad27950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbad27cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbad2aaa0" loc="42:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbad2aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbad2ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f9bbad27200" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f9bbad27200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbad27580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9bbad213f0" loc="49:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f9bbad213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbad21770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbad22b70" loc="45:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbad22b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbad21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbad26e30" loc="43:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbad26e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbad221e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbad21a70" loc="50:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbad21a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbad21df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbad20020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbad201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f9bbad22570" loc="44:../../../..//tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f9bbad22570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbad228f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9bbacf2020" loc="75:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f9bbacf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbacf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbacf26b0" loc="76:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbacf26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbacf2a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbacf2bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbacf2d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbacf1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbacf11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbacf78e0" loc="65:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbacf78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbacf7c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbacf7df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbacf5020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbacf51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbacf5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f9bbacf5c90" loc="68:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbacf5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbacf40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbacf4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbacf43c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbacf4550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbacf46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbacf55e0" loc="66:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbacf55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbacf5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbacf8be0" loc="64:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbacf8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbacf7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbacf71b0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbacf7340"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbacf74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbacf7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f9bbacf4a50" loc="69:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbacf4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbacf4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f9bbacf3170" loc="71:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f9bbacf3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbacf34f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbacf3680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbacf3810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbacf39a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbacf3b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbace8d70" loc="58:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbace8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbace7180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbace7310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbace74a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbace7630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbace77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9bbace7b10" loc="59:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f9bbace7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbace6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f9bbacb9db0" loc="184:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f9bbacb9db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9bbacb8180"/>
        <function-ref name="runTask" scoped="" ref="0x7f9bbacb8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f9bbace62f0" loc="60:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbace62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbace6670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbace6800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbace6990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbace6b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbace6cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbace6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f9bbaceba20" loc="51:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f9bbaceba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbacebda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbace9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbace91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbace9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbace94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9bbace5b70" loc="62:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f9bbace5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9bbace4020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9bbace41b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9bbace4340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9bbace44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbace5170" loc="61:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbace5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbace54f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbace5680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbace5810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f9bbaceb370" loc="49:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f9bbaceb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbaceb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9bbaced7b0" loc="46:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f9bbaced7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbacedb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbacedcc0"/>
        <function-ref name="request" scoped="" ref="0x7f9bbacede50"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbacec020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbacec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f9bbacec4d0" loc="48:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f9bbacec4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbacec850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbacec9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbacecb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbacecd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbaceb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f9bbace9840" loc="52:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f9bbace9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbace9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f9bbace8020" loc="54:../../../..//tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f9bbace8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbace83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbace8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbace86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbace8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbace89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9bbac99dd0" loc="44:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f9bbac99dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9bbac98180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9bbac98410" loc="45:../../../..//tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9bbac98410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9bbac98790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9bbac98920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9bbac98ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9bbac98c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9bbac8cb80" loc="46:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f9bbac8cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbac8b020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbac8b1b0"/>
        <function-ref name="start" scoped="" ref="0x7f9bbac8b340"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbac8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbac8a860" loc="51:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbac8a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbac8abe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac8ad70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac89020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbac891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbac89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9bbac89690" loc="52:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f9bbac89690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbac89a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbac91ce0" loc="43:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbac91ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbac8e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac8e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac8e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbac8e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbac8e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9bbac8c080" loc="45:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbac8c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9bbac8c400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9bbac8c590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9bbac8c720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9bbac8c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f9bbac8b800" loc="47:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f9bbac8b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbac8bb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbac8bd10"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbac8a020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbac8a1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbac8a340"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbac8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f9bbac89d90" loc="53:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f9bbac89d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9bbac88180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9bbac88310"/>
        <function-ref name="start" scoped="" ref="0x7f9bbac884a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbac88630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbac8e980" loc="44:../../../..//tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbac8e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbac8ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f9bbac852d0" loc="41:../../../..//tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f9bbac852d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f9bbac85650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f9bbac857e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f9bbac85970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f9bbac85b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f9bbac87580" loc="67:../../../..//tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f9bbac87580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f9bbac87900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f9bbac87a90"/>
        <function-ref name="isState" scoped="" ref="0x7f9bbac87c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f9bbac87db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f9bbac86020"/>
        <function-ref name="forceState" scoped="" ref="0x7f9bbac861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbac78d70" loc="45:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbac78d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbac77180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac77310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac774a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbac77630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbac777c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f9bbac7b350" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f9bbac7b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbac7b6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac7b860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac7b9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbac7bb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbac7bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f9bbac78020" loc="41:../../../..//tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f9bbac78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f9bbac783a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f9bbac78530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f9bbac786c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f9bbac78850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f9bbac789e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f9bbac731c0" loc="44:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f9bbac731c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f9bbac73540"/>
        <function-ref name="noAck" scoped="" ref="0x7f9bbac736d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f9bbac73860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f9bbac76410" loc="40:../../../..//tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f9bbac76410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f9bbac76790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f9bbac76920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f9bbac76ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f9bbac76c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f9bbac76dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f9bbac53690" loc="59:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f9bbac53690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbac53a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f9bbac54860" loc="58:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f9bbac54860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbac54be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac54d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac53020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbac531b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbac53340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f9bbac51610" loc="62:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f9bbac51610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f9bbac51990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f9bbac51b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f9bbac51cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f9bbac51e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f9bbac50020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f9bbac501b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f9bbac50340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f9bbac504d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f9bbac50660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f9bbac507f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f9bbac50980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f9bbac50b10"/>
        <function-ref name="sync" scoped="" ref="0x7f9bbac50ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9bbac4f020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f9bbac4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f9bbac558b0" loc="54:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f9bbac558b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbac55c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbac55dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbac54020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbac541b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbac54340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbac544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f9bbac57ce0" loc="53:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f9bbac57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f9bbac550a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f9bbac4e1f0" loc="64:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f9bbac4e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f9bbac4e570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f9bbac4e700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f9bbac4e890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f9bbac4ea20"/>
        <function-ref name="setCca" scoped="" ref="0x7f9bbac4ebb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f9bbac4ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bbac58a80" loc="52:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbac58a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbac58e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbac57020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac571b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac57340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbac574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f9bbac5b020" loc="48:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f9bbac5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9bbac5b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac5b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbac5b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9bbac5b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9bbac5b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f9bbac5adf0" loc="50:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f9bbac5adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbac591c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f9bbac53ce0" loc="60:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f9bbac53ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f9bbac520a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f9bbac52230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f9bbac523c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f9bbac52550"/>
        <function-ref name="getPower" scoped="" ref="0x7f9bbac526e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f9bbac52870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f9bbac4f4d0" loc="63:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f9bbac4f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f9bbac4f950"/>
        <function-ref name="changed" scoped="" ref="0x7f9bbac4fae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f9bbac4fc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f9bbac4fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f9bbac52b70" loc="61:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f9bbac52b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbac51020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f9bbac511b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f9bbac51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbac5a210" loc="49:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbac5a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbac5a590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9bbac4dd30" loc="67:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f9bbac4dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9bbac4c0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9bbac4c270"/>
        <function-ref name="led1On" scoped="" ref="0x7f9bbac4c400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9bbac4c590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9bbac4c720"/>
        <function-ref name="get" scoped="" ref="0x7f9bbac4c8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9bbac4ca40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9bbac4b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbac4cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9bbac4cd60"/>
        <function-ref name="led2On" scoped="" ref="0x7f9bbac4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bbac59470" loc="51:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbac59470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbac597f0"/>
        <function-ref name="source" scoped="" ref="0x7f9bbac59980"/>
        <function-ref name="address" scoped="" ref="0x7f9bbac59b10"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbac59ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbac59e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbac58020"/>
        <function-ref name="type" scoped="" ref="0x7f9bbac581b0"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbac58340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbac584d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbac58660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbac587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f9bbac4d0f0" loc="66:../../../..//tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f9bbac4d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9bbac4d470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9bbac4d600"/>
        <function-ref name="request" scoped="" ref="0x7f9bbac4d790"/>
        <function-ref name="granted" scoped="" ref="0x7f9bbac4d920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9bbac4dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bbaba8020" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbaba8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbaba83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbaba8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbaba86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbaba8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbaba89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbabaf910" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbabaf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbabafc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bbaba8c30" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_A"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbaba8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbaba7020"/>
        <function-ref name="source" scoped="" ref="0x7f9bbaba71b0"/>
        <function-ref name="address" scoped="" ref="0x7f9bbaba7340"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbaba74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbaba7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbaba77f0"/>
        <function-ref name="type" scoped="" ref="0x7f9bbaba7980"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbaba7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbaba7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbaba7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbaba6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f9bbaba4780" loc="46:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f9bbaba4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9bbaba4b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f9bbaba4c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f9bbaba4e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f9bbaba3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f9bbaba31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f9bbaba41b0" loc="45:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f9bbaba41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f9bbaba4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f9bbaba3400" loc="47:../../../..//tos/system/AMReceiverC.nc">
      <component-ref qname="ReceivingBuffer_AppC.R_B"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f9bbaba3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f9bbaba3780"/>
        <function-ref name="source" scoped="" ref="0x7f9bbaba3910"/>
        <function-ref name="address" scoped="" ref="0x7f9bbaba3aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f9bbaba3c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f9bbaba3dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f9bbaba0020"/>
        <function-ref name="type" scoped="" ref="0x7f9bbaba01b0"/>
        <function-ref name="setType" scoped="" ref="0x7f9bbaba0340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f9bbaba04d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f9bbaba0660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f9bbaba07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbab9d5a0" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="ReceivingBuffer_AppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbab9d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbab9aa80"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbab9b090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbab9be10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbab9b990"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbab994a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbab99020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbab9b510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbab9c200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbab9a470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbab9c6d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbab9cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9bbab96020" loc="45:../../../..//tos/system/TimerMilliC.nc">
      <component-ref qname="ReceivingBuffer_AppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f9bbab96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f9bbc0dce00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9bbbf01200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9bbab93630"/>
        <function-ref name="fired" scoped="" ref="0x7f9bbab95a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9bbab94920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9bbab944a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9bbab91020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9bbab93ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9bbab94020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9bbab96c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9bbab93020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9bbab95110"/>
        <function-ref name="stop" scoped="" ref="0x7f9bbab955e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbab8c610" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbab8c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbab8c990"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbab8cb20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbab8ccb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbab8ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbab8b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbab8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbab8b340"/>
        <function-ref name="get" scoped="" ref="0x7f9bbab8b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbab8b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbab8b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbab8b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbab8bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbab8bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbab8a020"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbab8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbab8d390" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbab8d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbab8d710"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbab8d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbab8da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbab8dbc0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbab8dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbab8c020"/>
        <function-ref name="set" scoped="" ref="0x7f9bbab8c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbab8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f9bbab877a0" loc="44:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f9bbab877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbab87b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbab87cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f9bbab87e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbab86020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbab861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f9bbab86340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbab864d0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbab86660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f9bbab867f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f9bbab86980"/>
        <function-ref name="set" scoped="" ref="0x7f9bbab86b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f9bbab86ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f9bbab86e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f9bbab85120"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbab852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f9bbab885b0" loc="43:../../../..//tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="ReceivingBuffer_AppC.ADC1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f9bbab885b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9bbab88930"/>
        <function-ref name="isInput" scoped="" ref="0x7f9bbab88ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9bbab88c50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9bbab88de0"/>
        <function-ref name="get" scoped="" ref="0x7f9bbab87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9bbab871b0"/>
        <function-ref name="set" scoped="" ref="0x7f9bbab87340"/>
        <function-ref name="clr" scoped="" ref="0x7f9bbab874d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../..//tos/interfaces/Init.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9bbc0d70e0" loc="62:../../../..//tos/interfaces/Init.nc">
        <documentation loc="53:../../../..//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../..//tos/interfaces/Boot.nc">
      <documentation loc="42:../../../..//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9bbc0dbc90" loc="60:../../../..//tos/interfaces/Boot.nc">
        <documentation loc="51:../../../..//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f9bbc0a9020" loc="48:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f9bbc0ab270" loc="43:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f9bbc0aa840" loc="47:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f9bbc0adb00" loc="42:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f9bbc0ab9e0" loc="45:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f9bbc0b0d10" loc="40:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f9bbc0ad420" loc="41:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f9bbc0aa120" loc="46:../../../..//tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../..//tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9bbc1f8020" loc="62:../../../..//tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../..//tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9bbc4bdc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f9bbc057020" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f9bbc058cc0" loc="55:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f9bbc05b390" loc="42:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9bbc0a2b60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f9bbc0a0650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f9bbc057890" loc="57:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f9bbc0567b0" loc="59:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f9bbc058560" loc="47:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f9bbc056020" loc="58:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9bbc05bb30" loc="43:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f9bbc05a350" loc="44:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f9bbc05ada0" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9bbc0a2b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f9bbc0a0650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9bbc05ab20" loc="46:../../../..//tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9bbc0a2b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f9bbc0a0650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f9bbc04a0e0" loc="44:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f9bbc047730" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f9bbc0474b0" loc="84:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f9bbc0462e0" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f9bbc046060" loc="91:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9bbc048ca0" loc="73:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9bbc0483e0" loc="68:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f9bbc04aa90" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f9bbc04a810" loc="56:../../../..//tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f9bbc0513e0" loc="40:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f9bbc051d60" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f9bbc051ae0" loc="41:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f9bbc04f790" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f9bbc04f510" loc="42:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f9bbc04e2a0" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f9bbc04e020" loc="43:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9bbc04e990" loc="45:../../../..//tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9bbc061810" loc="52:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f9bbc05e2a0" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f9bbc05e020" loc="55:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f9bbc05f020" loc="53:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9bbc067ab0" loc="45:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f9bbc05f760" loc="54:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9bbc0639b0" loc="47:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f9bbc061120" loc="51:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9bbc063270" loc="46:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9bbc0620e0" loc="48:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f9bbc0629f0" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f9bbc062770" loc="50:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f9bbc05ecb0" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f9bbc05ea30" loc="56:../../../..//tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9bbc0201f0" loc="39:../../../..//tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../..//tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../..//tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f9bbc11ba80" loc="85:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f9bbc11a1f0" loc="86:../../../..//tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f9bbc11b2b0" loc="79:../../../..//tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../..//tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../..//tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../..//tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9bbc334810" loc="52:../../../..//tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../..//tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../..//tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../..//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9bbc576020" loc="57:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9bbc575020" loc="72:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../..//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9bbc576790" loc="65:../../../..//tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../..//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../..//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9bbc56a270" loc="67:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9bbc56aac0" loc="75:../../../..//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../..//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../..//tos/interfaces/Receive.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f9bbbe999c0" loc="78:../../../..//tos/interfaces/Receive.nc">
        <documentation loc="58:../../../..//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
              <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe99060" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f9bbbe993b0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbbe996e0" loc="78:../../../..//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../..//tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f9bbbe7fdf0" loc="113:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../..//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9bbbe7fb70" loc="113:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f9bbbe7c350" loc="138:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9bbbe7c0d0" loc="138:../../../..//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9bbbe7f190" loc="104:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9bbbe7d680" loc="130:../../../..//tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../..//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../..//tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../..//tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9bbbe708a0" loc="44:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9bbbe6e020" loc="45:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9bbbe71a40" loc="42:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9bbbe6ee80" loc="47:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9bbbe70190" loc="43:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9bbbe6e740" loc="46:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9bbbe80c00" loc="40:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9bbbe71350" loc="41:../../../..//tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../..//tos/interfaces/Packet.nc">
      <documentation loc="42:../../../..//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9bbbe7a020" loc="65:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="58:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe81ca0" loc="65:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f9bbbe79110" loc="78:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="67:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe7ae10" loc="78:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f9bbbe75490" loc="126:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="109:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe76e50" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbbe751c0" loc="126:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f9bbbe76560" loc="106:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="96:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f9bbbe775e0" loc="94:../../../..//tos/interfaces/Packet.nc">
        <documentation loc="80:../../../..//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe77020" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbbe77350" loc="94:../../../..//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../..//tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f9bbbea02c0" loc="80:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f9bbbea1940" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f9bbbea1cc0" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbbea0020" loc="80:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f9bbbe9c970" loc="135:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe9c370" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbbe9c6a0" loc="135:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f9bbbe9ba60" loc="123:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9bbbe9e630" loc="96:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../..//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe9e3b0" loc="96:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9bbbe9db80" loc="110:../../../..//tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../..//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbe9d5a0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f9bbbe9d8f0" loc="110:../../../..//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../..//tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbbef06f0" loc="53:../../../..//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbbef06f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9bbbe8c420" loc="136:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9bbbe91d60" loc="83:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9bbbe8fb10" loc="114:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9bbbe8f540" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9bbbe8f880" loc="114:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9bbbe90d60" loc="98:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f9bbbe8b460" loc="151:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9bbbe8cbb0" loc="144:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9bbbe90570" loc="92:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f9bbbe922a0" loc="64:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9bbbe92020" loc="64:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9bbbe8daa0" loc="129:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9bbbe8d4d0" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9bbbe8d810" loc="129:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f9bbbe92d60" loc="73:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9bbbe92ae0" loc="73:../../../..//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9bbbe91650" loc="78:../../../..//tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../..//tos/interfaces/Leds.nc">
      <documentation loc="33:../../../..//tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f9bbbef8630" loc="61:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="58:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f9bbbef8de0" loc="67:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="63:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f9bbbef7620" loc="72:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="69:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f9bbbef6590" loc="83:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="79:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f9bbbef5ce0" loc="100:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="96:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9bbbef3510" loc="117:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="103:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f9bbbef7db0" loc="77:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="74:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9bbbef20b0" loc="134:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="120:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9bbbef3e00" loc="134:../../../..//tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f9bbbefae80" loc="56:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="53:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f9bbbef6d70" loc="89:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="86:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f9bbbef5530" loc="94:../../../..//tos/interfaces/Leds.nc">
        <documentation loc="91:../../../..//tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9bbbcf10e0" loc="78:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9bbbcf1830" loc="80:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f9bbbcec2e0" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f9bbbcec060" loc="110:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9bbbcf4940" loc="58:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9bbbcf0780" loc="87:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f9bbbcecbd0" loc="117:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9bbbcf0020" loc="85:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9bbbcf3920" loc="73:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f9bbbced020" loc="99:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f9bbbcf3120" loc="66:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9bbbcf7a90" loc="48:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f9bbbcef020" loc="92:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f9bbbced7c0" loc="101:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f9bbbcef7e0" loc="94:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9bbbcf41f0" loc="53:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../..//tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../..//tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../..//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f9bbbaaa840" loc="177:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbaaa5c0" loc="177:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f9bbbab3400" loc="88:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbab3180" loc="88:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f9bbbab6840" loc="68:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f9bbbab4350" loc="78:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbab40d0" loc="78:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f9bbbaafd00" loc="121:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbaaf720" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f9bbbaafa70" loc="121:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f9bbbab2800" loc="103:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbab2220" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f9bbbab2570" loc="103:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f9bbbaad2e0" loc="147:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbaad060" loc="147:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f9bbbaab680" loc="162:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbaab0d0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f9bbbaab3f0" loc="162:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f9bbbeb4d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f9bbbaae0b0" loc="136:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbab0e00" loc="136:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f9bbbaa7d00" loc="187:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f9bbbaa7720" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f9bbbaa7a70" loc="187:../../../..//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f9bbbaa6b50" loc="195:../../../..//tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../..//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../..//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f9bbbaa45f0" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbaa4370" loc="59:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f9bbbaa27d0" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbaa2550" loc="71:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f9bbbaa0940" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../..//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbbaa06c0" loc="85:../../../..//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../..//tos/interfaces/Send.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9bbba92020" loc="75:../../../..//tos/interfaces/Send.nc">
        <documentation loc="57:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba95a30" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbba95d60" loc="75:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f9bbba8e660" loc="125:../../../..//tos/interfaces/Send.nc">
        <documentation loc="115:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba8e060" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbba8e390" loc="125:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f9bbba8d790" loc="112:../../../..//tos/interfaces/Send.nc">
        <documentation loc="102:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9bbba91350" loc="89:../../../..//tos/interfaces/Send.nc">
        <documentation loc="77:../../../..//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba910d0" loc="89:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9bbba8f870" loc="100:../../../..//tos/interfaces/Send.nc">
        <documentation loc="91:../../../..//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba8f290" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f9bbba8f5e0" loc="100:../../../..//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbba1e920" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbba1e920"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9bbba1eb60" loc="35:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbba1eb60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f9bbba18970" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbba1eb60"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba186f0" loc="63:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f9bbba17b40" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba178c0" loc="70:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f9bbba1b750" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba1b4d0" loc="49:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9bbba19020" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../..//tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbba1eb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba168a0" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f9bbba16c00" loc="78:../../../..//tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbba1eb60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../..//tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../..//tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f9bbba0a030" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba0b9e0" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f9bbba0bd70" loc="65:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f9bbba082a0" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbba08020" loc="71:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f9bbba0b1f0" loc="57:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f9bbba0c7f0" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../..//tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f9bbba0c570" loc="52:../../../..//tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f9bbb9e1430" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9e11b0" loc="95:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f9bbb9e4720" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9e44a0" loc="81:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f9bbb9e6dc0" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f9bbb9e6b40" loc="66:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f9bbb9e62a0" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f9bbb9e6020" loc="60:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f9bbb9e5880" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f9bbb9e5600" loc="73:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f9bbb9e25e0" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9e2360" loc="88:../../../..//tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../..//tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../..//tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f9bbb9d5e60" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../..//tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f9bbb9d5850" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f9bbb9d5bd0" loc="59:../../../..//tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f9bbb9f00c0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9f1aa0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f9bbb9f1df0" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f9bbb9ec6d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9ec0d0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f9bbb9ec440" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f9bbb9f0ba0" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f9bbcca4110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9f0920" loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f9bbb9ed600" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9ed380" loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f9bbb9f12a0" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9f1020" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f9bbb9ee720" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9ee4a0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../..//tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../..//tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f9bbb9d9630" loc="65:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9d93b0" loc="65:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f9bbb9dd6f0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9dd0d0" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f9bbb9dd460" loc="46:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f9bbb9db5f0" loc="59:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../..//tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9db370" loc="59:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f9bbb9dcaf0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9dc4d0" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f9bbb9dc860" loc="53:../../../..//tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f9bbb9d8630" loc="71:../../../..//tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../..//tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9d83b0" loc="71:../../../..//tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../..//tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f9bbb9e80b0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../..//tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb9f2de0" loc="47:../../../..//tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../..//tos/interfaces/Resource.nc">
      <documentation loc="63:../../../..//tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9bbb9cccc0" loc="120:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="104:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f9bbb9cecc0" loc="97:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="90:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f9bbb9ce350" loc="88:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="78:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9bbb9cc4f0" loc="102:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="99:../../../..//tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9bbb9cb8b0" loc="128:../../../..//tos/interfaces/Resource.nc">
        <documentation loc="122:../../../..//tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9bbb9abca0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9ab6e0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f9bbb9aba10" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9bbb9a9020" loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f9bbb9a6930" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f9bbb9a8ab0" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f9bbb9a6360" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbb9a6690" loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9bbb9a82b0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f9bbb9a9bb0" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f9bbb9a8020" loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f9bbb9aa780" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f9bbb9aa500" loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../..//tos/interfaces/Random.nc">
      <documentation loc="34:../../../..//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f9bbb9a3b50" loc="52:../../../..//tos/interfaces/Random.nc">
        <documentation loc="48:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f9bbb9a3350" loc="46:../../../..//tos/interfaces/Random.nc">
        <documentation loc="42:../../../..//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../..//tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../..//tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9bbb9ae270" loc="95:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9bbb9aea80" loc="105:../../../..//tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../..//tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f9bbb99c020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb99dc90" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f9bbb99d490" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f9bbbeee720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f9bbbeeb090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb99d190" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f9bbb99b360" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f9bbbeebb90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f9bbbee94f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb99b060" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f9bbb9b2070" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f9bbb9b00e0" loc="97:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f9bbb9b18f0" loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f9bbb9b5730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f9bbb9b47e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f9bbb9b28e0" loc="76:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f9bbb9b1120" loc="83:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f9bbb9b4020" loc="56:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../..//tos/interfaces/State.nc">
      <documentation loc="33:../../../..//tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f9bbb996a70" loc="71:../../../..//tos/interfaces/State.nc">
        <documentation loc="68:../../../..//tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f9bbb997020" loc="56:../../../..//tos/interfaces/State.nc">
        <documentation loc="53:../../../..//tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f9bbb9962a0" loc="66:../../../..//tos/interfaces/State.nc">
        <documentation loc="63:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f9bbb996020" loc="66:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f9bbb997790" loc="61:../../../..//tos/interfaces/State.nc">
        <documentation loc="58:../../../..//tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f9bbb9a0ca0" loc="45:../../../..//tos/interfaces/State.nc">
        <documentation loc="40:../../../..//tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f9bbb9a0a20" loc="45:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f9bbb9987a0" loc="51:../../../..//tos/interfaces/State.nc">
        <documentation loc="47:../../../..//tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f9bbb998520" loc="51:../../../..//tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f9bbb93a640" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f9bbb93a060" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f9bbb93a3b0" loc="106:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f9bbb93c020" loc="93:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f9bbb93d690" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f9bbb93d020" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f9bbb93d400" loc="87:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f9bbb943a40" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9bbb9437c0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f9bbb93c8a0" loc="98:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f9bbb93f540" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f9bbb93f2c0" loc="72:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f9bbb942b90" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9bbb942910" loc="61:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f9bbb9398a0" loc="117:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f9bbb93e6b0" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f9bbb93e430" loc="78:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f9bbb939070" loc="112:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f9bbb941350" loc="66:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f9bbba06670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f9bbba06dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f9bbb941b40" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f9bbb943020" loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9bbb9421f0" loc="60:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f9bbb93fce0" loc="77:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../..//tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../..//tos/interfaces/Read.nc">
      <documentation loc="33:../../../..//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f9bbb9352b0" loc="49:../../../..//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9bbb9352b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9bbb935b70" loc="55:../../../..//tos/interfaces/Read.nc">
        <documentation loc="50:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9bbb9348f0" loc="63:../../../..//tos/interfaces/Read.nc">
        <documentation loc="57:../../../..//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9bbb9352b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f9bbb934340" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f9bbb934660" loc="63:../../../..//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9bbb9352b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f9bbb909c10" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb909990" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9bbb908710" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb908490" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../..//tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f9bbb929c50" loc="48:../../../..//tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../..//tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f9bbba06670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f9bbba06dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../..//tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbb924020" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbb924020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9bbb924260" loc="56:../../../..//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9bbb921e00" loc="109:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9bbb923e40" loc="78:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f9bbb921460" loc="103:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9bbb922e60" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f9bbb9211d0" loc="103:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9bbb922640" loc="88:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9bbb91f620" loc="116:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9bbb924dc0" loc="66:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9bbb924b40" loc="66:../../../..//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb924260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9bbb923680" loc="73:../../../..//tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../..//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../..//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f9bbb911560" loc="50:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f9bbb9104f0" loc="60:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f9bbb911d40" loc="55:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f9bbb913cd0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../..//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f9bbb9136f0" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f9bbbeb3180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9bbb913a40" loc="45:../../../..//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f9bbbeb3560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f9bbb904e40" loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../..//tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f9bbb90ee80" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f9bbb90e020" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9bbb90e890" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb90ebe0" loc="52:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9bbb90b610" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f9bbb90d770" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9bbb90b020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb90b370" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../..//tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../..//tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9bbb915c30" loc="68:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9bbb915470" loc="61:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f9bbb916ce0" loc="54:../../../..//tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f9bbb916420" loc="53:../../../..//tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../..//tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../..//tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../..//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbb8004f0" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbb8004f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9bbb800730" loc="57:../../../..//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb800730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9bbb7ff070" loc="64:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb800730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9bbb7fe190" loc="76:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9bbb7ff8f0" loc="71:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../..//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9bbb7fe8f0" loc="82:../../../..//tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../..//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../..//tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f9bbb735bb0" loc="54:../../../..//tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9bbb734d70" loc="66:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f9bbb7345c0" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../..//tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f9bbb734340" loc="61:../../../..//tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f9bbb735350" loc="53:../../../..//tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../..//tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9bbb712a60" loc="52:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9bbb70f540" loc="72:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9bbb7122d0" loc="47:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f9bbb711cf0" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f9bbb711a70" loc="67:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9bbb715b00" loc="42:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9bbb7112b0" loc="59:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../..//tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f9bbb5fe270" loc="24:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f9bbb5feac0" loc="31:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f9bbb5fc350" loc="39:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../..//tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f9bbb5d6b60" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb5d6580" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb5d68d0" loc="62:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f9bbb5d1dd0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb5d1490" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb5d17e0" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9bbb5d1b30" loc="91:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9bbb5d36b0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb5d30d0" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb5d3420" loc="82:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f9bbb5d8730" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f9bbbefd8b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb5d8150" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb5d84a0" loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9bbb5d42c0" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb5d5930" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f9bbb5d5c80" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9bbb5d4020" loc="71:../../../..//tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../..//tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9bbb5b7df0" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9bbb5b7480" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f9bbb5b7810" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbb5b7b50" loc="76:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9bbb5b53c0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../..//tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9bbb5b36a0" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f9bbb5b3a30" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbb5b3d70" loc="88:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9bbb5b5110" loc="89:../../../..//tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../..//tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../..//tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f9bbb5bbc90" loc="45:../../../..//tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../..//tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f9bbb5bba10" loc="45:../../../..//tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../..//tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f9bbb4d86f0" loc="53:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9bbb4d7070" loc="61:../../../..//tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f9bbb4cf710" loc="39:../../../..//tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f9bbb50a020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f9bbb50a440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../..//tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../..//tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f9bbb4d42a0" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb4d4020" loc="62:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f9bbb4d3680" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb4d3400" loc="74:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f9bbb4d4b10" loc="68:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9bbb4d22a0" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../..//tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb4d2020" loc="81:../../../..//tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../..//tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../..//tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f9bbb4c8ca0" loc="65:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f9bbb4c8480" loc="59:../../../..//tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f9bbb4c02a0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb4c0020" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f9bbb4c1780" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../..//tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f9bbb49caf0" loc="213:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f9bbb4a8790" loc="143:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f9bbb4b4610" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb527080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f9bbb5278c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9bbb4b4390" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb527080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f9bbb5278c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f9bbb4aa870" loc="123:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f9bbb4b2a90" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb522080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f9bbb5228c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9bbb4b2810" loc="70:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb522080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f9bbb5228c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f9bbb4a1e70" loc="180:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f9bbb49d480" loc="197:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f9bbb4b2070" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb524020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f9bbb5247b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f9bbb4b12b0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb522080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f9bbb5228c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f9bbb4ad020" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f9bbb4aed30" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f9bbb4ae610" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f9bbb4a1740" loc="179:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f9bbb4b3840" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb524020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f9bbb5247b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9bbb4b35c0" loc="60:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb524020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f9bbb5247b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f9bbb4af420" loc="85:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f9bbb4a05d0" loc="181:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f9bbb4afe00" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f9bbb4afb80" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f9bbb4ab910" loc="113:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f9bbb4aa0e0" loc="118:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f9bbb4a2840" loc="177:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f9bbb4a5790" loc="163:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f9bbb4a97e0" loc="133:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f9bbb4a1020" loc="178:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f9bbb4a6020" loc="148:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f9bbb4a0cf0" loc="182:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f9bbb4ad800" loc="103:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f9bbb52ddd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f9bbb529680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f9bbb49f4c0" loc="187:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f9bbb49c350" loc="207:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f9bbb4b1c50" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f9bbb4b19d0" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f9bbb49b4d0" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb49b250" loc="224:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f9bbb4b4df0" loc="55:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9bbb527080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f9bbb5278c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f9bbb4a9020" loc="128:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f9bbb4a6770" loc="153:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f9bbb4a2020" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f9bbb4f9e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f9bbb4f72b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f9bbb4a4cf0" loc="174:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f9bbb4f9e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f9bbb4f72b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f9bbb4a42a0" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f9bbb50a020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f9bbb50a440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f9bbb4a4020" loc="168:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f9bbb50a020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f9bbb50a440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f9bbb49bd90" loc="231:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f9bbb49fcb0" loc="192:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f9bbb4ab070" loc="108:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f9bbb49dbe0" loc="202:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f9bbb4a5020" loc="158:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f9bbb4a8020" loc="138:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../..//tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9bbb434600" loc="39:../../../..//tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../..//tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f9bbb40c070" loc="80:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f9bbb41fb10" loc="31:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f9bbb414d50" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f9bbb414ad0" loc="62:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f9bbb427270" loc="11:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f9bbb410350" loc="71:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f9bbb419cf0" loc="49:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f9bbb421c50" loc="28:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f9bbb41e9c0" loc="34:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f9bbb422c00" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f9bbb422980" loc="25:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f9bbb423120" loc="21:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f9bbb41b790" loc="41:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f9bbb413c80" loc="66:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f9bbb40e8f0" loc="78:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f9bbb414390" loc="61:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f9bbb409b60" loc="91:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f9bbb404270" loc="100:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f9bbb4260e0" loc="14:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f9bbb41b020" loc="38:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f9bbb41a910" loc="45:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f9bbb421500" loc="27:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f9bbb428020" loc="7:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f9bbb415ba0" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f9bbb415920" loc="58:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f9bbb42c7e0" loc="6:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f9bbb411b80" loc="69:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f9bbb40c7d0" loc="81:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f9bbb406350" loc="94:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f9bbb405a90" loc="97:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f9bbb40f270" loc="74:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f9bbb40b020" loc="83:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f9bbb413520" loc="65:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f9bbb40abb0" loc="87:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f9bbb426800" loc="15:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f9bbb416020" loc="53:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f9bbb40a020" loc="86:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f9bbb40e190" loc="77:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f9bbb419520" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f9bbb4192a0" loc="46:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f9bbb406af0" loc="95:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f9bbb4151f0" loc="57:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f9bbb410ac0" loc="72:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f9bbb428aa0" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f9bbb4e5b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f9bbb4e3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f9bbb428820" loc="8:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f9bbb4e5b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f9bbb4e3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f9bbb41d870" loc="37:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f9bbb424980" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f9bbb424700" loc="19:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f9bbb41a120" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9bbb41be70" loc="42:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f9bbb4093b0" loc="90:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f9bbb422270" loc="24:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f9bbb424020" loc="18:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f9bbb4169e0" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f9bbb416760" loc="54:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f9bbcca3520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f9bbb4279a0" loc="12:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f9bbb40b740" loc="84:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f9bbb40f9e0" loc="75:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f9bbb411420" loc="68:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f9bbb418740" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f9bbb4184c0" loc="50:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f9bbb41d120" loc="35:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f9bbb41f3b0" loc="29:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f9bbb4052b0" loc="96:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f9bbb423aa0" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f9bbb423820" loc="22:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f9bbb407350" loc="92:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f9bbb41e270" loc="32:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f9bbb407b10" loc="93:../../../..//tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../..//tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../..//tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f9bbb369780" loc="90:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f9bbb368020" loc="98:../../../..//tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../..//tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9bbb331900" loc="56:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f9bbb330a20" loc="73:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9bbb331070" loc="46:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9bbb3301f0" loc="65:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9bbb32e390" loc="81:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../..//tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../..//tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../..//tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f9bbb324b50" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9bbb32db30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9bbb3248d0" loc="79:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9bbb32db30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f9bbb329b80" loc="53:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f9bbb3256b0" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9bbb32db30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9bbb325430" loc="62:../../../..//tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9bbb32db30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f9bbb324020" loc="70:../../../..//tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../..//tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f9bbb32db30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../..//tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../..//tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f9bbb11f5e0" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9bbb11f360" loc="13:../../../..//tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f9bbb10cb00" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f9bbb10c1c0" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f9bbb10c530" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbb10c860" loc="10:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9bbb10b880" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f9bbb10b2c0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9bbb10b5f0" loc="11:../../../..//tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../..//tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbb0f2530" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbb0f2530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9bbb0f2770" loc="59:../../../..//tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb0f2770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f9bbb0f12e0" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../..//tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb0f2770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9bbb0f1060" loc="66:../../../..//tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9bbb0f2770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f9bbb08d580" loc="43:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../..//tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f9bbb05d9e0" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f9bbb05d020" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f9bbb05d750" loc="63:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f9bbb05e7f0" loc="55:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f9bbb05e020" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f9bbb062d30" loc="49:../../../..//tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f9bbb0733d0" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9bbcca3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb073150" loc="58:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f9bbb0743d0" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9bbc57a090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb074150" loc="50:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9bbb070350" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb0700d0" loc="72:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9bbb072390" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f9bbb072110" loc="65:../../../..//tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:136" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f9bbbea4ab0"/>
                <typename><typedef-ref name="message_t" ref="0x7f9bbbea1180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../..//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9bbaefb910" loc="53:../../../..//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9bbaefb910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9bbaef8270" loc="61:../../../..//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../..//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f9bbcca3920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../..//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f9bbad695e0" loc="53:../../../..//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f9bbad695e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f9bbad662a0" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../..//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9bbc571c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f9bbad695e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f9bbad66020" loc="64:../../../..//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f9bbad695e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
